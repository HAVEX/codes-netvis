{"version":3,"sources":["webpack:///webpack/bootstrap bc293695851d536e9921","webpack:///./node_modules/p6-solo/src/arrays.js","webpack:///./node_modules/p6/src/ctypes.js","webpack:///./node_modules/p6/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/p6-solo/src/aggregate.js","webpack:///./node_modules/p6-solo/src/match.js","webpack:///./src/loadData.js","webpack:///./node_modules/p6/src/utils.js","webpack:///./node_modules/p6/flexgl/src/uniform.js","webpack:///./node_modules/p6/flexgl/src/texture.js","webpack:///./node_modules/p6/flexgl/src/shader.js","webpack:///./node_modules/p6/src/derive.js","webpack:///./node_modules/p6/src/reveal.js","webpack:///./node_modules/p6/src/interact.js","webpack:///./node_modules/p6/src/metavis/svg.js","webpack:///./node_modules/p6/src/metavis/axis.js","webpack:///./node_modules/p6/src/metavis/scale.js","webpack:///./node_modules/p6/src/metavis/format.js","webpack:///./node_modules/p6-solo/index.js","webpack:///./node_modules/p6-solo/src/derive.js","webpack:///./node_modules/dashi/index.js","webpack:///./node_modules/dashi/src/button.js","webpack:///./node_modules/dashi/src/button-group.js","webpack:///./node_modules/dashi/src/checkbox.js","webpack:///./node_modules/dashi/src/dropdown.js","webpack:///./node_modules/dashi/src/fileinput.js","webpack:///./node_modules/dashi/src/icon.js","webpack:///./node_modules/dashi/src/list.js","webpack:///./node_modules/dashi/src/layout.js","webpack:///./node_modules/dashi/src/panel.js","webpack:///./node_modules/dashi/src/progress.js","webpack:///./node_modules/dashi/src/radios.js","webpack:///./node_modules/dashi/src/table.js","webpack:///./index.js","webpack:///./src/main.js","webpack:///./src/datamgmt.js","webpack:///./node_modules/p6/src/pipeline.js","webpack:///./node_modules/p6/src/allocate.js","webpack:///./node_modules/p6/src/output.js","webpack:///./node_modules/p6/src/initialize.js","webpack:///./node_modules/p6/flexgl/src/flexgl.js","webpack:///./node_modules/p6/flexgl/src/resource.js","webpack:///./node_modules/p6/flexgl/src/attribute.js","webpack:///./node_modules/p6/flexgl/src/varying.js","webpack:///./node_modules/p6/flexgl/src/subroutine.js","webpack:///./node_modules/p6/flexgl/src/program.js","webpack:///./node_modules/p6/flexgl/src/framebuffer.js","webpack:///./node_modules/p6/src/compile.js","webpack:///./node_modules/p6/src/aggregate.js","webpack:///./node_modules/p6/src/cache.js","webpack:///./node_modules/p6/src/match.js","webpack:///./node_modules/p6/src/extent.js","webpack:///./node_modules/p6/src/visualize.js","webpack:///./node_modules/p6/src/color.js","webpack:///./node_modules/p6/src/gradients.js","webpack:///./node_modules/p6/src/colorhex.js","webpack:///./node_modules/p6/src/render.js","webpack:///./node_modules/p6/src/encode.js","webpack:///./node_modules/p6/src/metavis/brush.js","webpack:///./node_modules/p6/src/metavis/layout.js","webpack:///./node_modules/p6/src/metavis/chart.js","webpack:///./node_modules/p6/src/arrays.js","webpack:///./node_modules/p6/src/metavis/legend.js","webpack:///./node_modules/p6/src/cstore.js","webpack:///./node_modules/p6/src/ajax.js","webpack:///./node_modules/p6/src/parse.js","webpack:///./node_modules/p6-solo/src/allocate.js","webpack:///./node_modules/p6-solo/src/pipeline.js","webpack:///./node_modules/p6-solo/src/query.js","webpack:///./node_modules/p6-solo/src/join.js","webpack:///./node_modules/p6-solo/src/stats.js","webpack:///./node_modules/p6-solo/src/embed.js","webpack:///./node_modules/p6-solo/src/toarray.js","webpack:///./data/datasets.js","webpack:///./src/stats/app.js","webpack:///./src/stats/transform.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","array","_reduce","opt","result","length","reduce","a","b","Array","apply","arguments","avg","normalize","max","min","range","map","seq","start","end","intv","interval","push","forEach","f","sum","scan","pfsum","accum","iscan","concat","diff","difference","indexOf","intersect","t","filter","e","unique","lcm","A","Math","abs","stats","histogram","numBin","_max","_min","bins","hg","fill","binID","floor","counts","slice","var","rowArray","pow","std","sqrt","__webpack_exports__","nominal","int","Int32Array","short","Int16Array","float","Float32Array","double","Float64Array","string","Uint16Array","time","temporal","integer","numeric","__WEBPACK_IMPORTED_MODULE_0__src_pipeline__","root","self","global","this","p6","ajax","__WEBPACK_IMPORTED_MODULE_3__src_ajax__","cstore","__WEBPACK_IMPORTED_MODULE_1__src_cstore__","ctypes","__WEBPACK_IMPORTED_MODULE_2__src_ctypes__","parse","__WEBPACK_IMPORTED_MODULE_4__src_parse__","g","Function","eval","window","ArrayOpts","data","spec","headers","bin","ks","attributes","keys","binCollection","$bin","binAttr","binCount","column","binInterval","$group","isArray","si","JSON","stringify","bl","res","j","$data","gk","Error","out","$collect","$reduce","key","attr","mergedResult","row","k","fname","warnMsg","console","warn","indexes","_match","obj","match","index","sat","Number","args","callback","DATASET","path","TERMINAL_PER_ROUTER","terminals","routers","ROUTER_PER_GROUP","groups","LOCAL_LINK_COUNT","localLinkPerRouter","GLOBAL_LINK_COUNT","globalLinkPerRouter","GROUP_TOTAL","ROUTER_TOTAL","datafiles","url","dataType","numJobs","jobAllocation","getAll","then","text","allocate","dsv","fields","TERMINAL_METRICS","types","skip","objectArray","terminal","job_id","jobs","split","pop","job","jobId","nodeId","nid","parseInt","busytime","traffic","localLinks","globalLinks","li","local_sat_time","bi","link","group_id","router_rank","router_id","router_port","sat_time","local_traffic","target_router","global_sat_time","gi","global_traffic","port","target_grp","my_pos","calcTargetRouter","terminal_id","Promise","resolve","reject","__WEBPACK_IMPORTED_MODULE_0_p6__","__WEBPACK_IMPORTED_MODULE_1_p6_solo___default","dtype","buf","step","size","__WEBPACK_IMPORTED_MODULE_0__ctypes__","bind","seqFloat","Uniform","glContext","type","uniform","ctx","serializeArray","arrayOfArray","sa","create","hasArray","location","program","getUniformLocation","ArrayBuffer","isView","resourceType","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","ptr","uniform1i","load","header","len","Texture","texture","textureID","setTexture","texData","toUpperCase","format","channel","width","dim","height","texImage2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","sampler","texIndex","createTexture","__WEBPACK_IMPORTED_MODULE_0__uniform__","copyFromFBO","copyTexImage2D","RGBA","update","offset","texSubImage2D","updateTexture","resize","delete","deleteTexture","Shader","glResource","shader","resource","parameters","_dict","vertex","fragment","shaderType","VERTEX_SHADER","FRAGMENT_SHADER","toGLSL","returnType","fn","glsl","str","envParam","re","RegExp","join","replace","matched","applyEnvParameters","toString","expr","value","toLowerCase","getExtraDeps","fnString","extraDeps","declareDep","dep","uniqueDeps","deps","names","arg","option","require","precision","debug","main","shaderSource","sourceCode","shaderArgs","trim","getDeps","subRoutines","log","subDeps","sdep","sres","allDeps","_shader","createShader","compileShader","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","compile","_shaderType","source","$p","derive","dataDimension","uDataDim","deriveMax","uDeriveCount","derivedFields","marco","formula","subroutine","vs","x","y","gl_PointSize","aDataIdx","aDataIdy","vResult","getDerivedValue","uDeriveId","vec2","uFilterFlag","texture2D","fFilterResults","uOptMode","gl_Position","vec4","fs","discard","gl_FragColor","gl","createProgram","_execute","framebuffer","enableRead","bindFramebuffer","disable","CULL_FACE","DEPTH_TEST","enable","BLEND","blendFunc","ONE","ext","vertexAttribDivisorANGLE","attribute","aDataValx","aDataValy","deriveDomains","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","blendEquation","MAX_EXT","drawArraysInstancedANGLE","POINTS","MIN_EXT","readPixels","FLOAT","minValue","maxValue","FRAMEBUFFER","execute","newDerivedDomains","_update","fieldId","deriveCount","fieldDomains","fieldWidths","uFieldDomains","uFieldWidths","options","resultSize","fid","deriveFieldId","rowSize","colSize","ceil","padding","aViewX","aViewY","uViewDim","vColorRGBA","offScreenFBO","vs2","_square","fs2","Vec4","gl_FragCoord","uMaxRGBA","uRevealMode","uDefaultColor","tColorGraident","rgb","uDefaultAlpha","viewIndex","viewDim","left","right","dataSize","log2","views","maxRGBA","bottom","top","drawArrays","TRIANGLES","viewTags","view","id","actions","events","condition","viewTag","vis","v","sx","sy","vmap","w","h","interactor","chart","svg","append","rect","box","getBoundingClientRect","tx","ty","dy","getSelection","dx","clientX","clientY","selection","invert","action","style","cursor","brushOptions","container","brush","reverse","__WEBPACK_IMPORTED_MODULE_0__metavis_brush__","selections","axisDist","selectors","axisSelect","translate","onmousewheel","ny","exp","deltaY","delta","uPosOffset","uVisScale","onmousedown","onmousemove","onmouseup","updatePos","onclick","onmouseover","setAttr","elem","setAttribute","setStyle","Svg","document","createElementNS","parent","viewBox","preserveAspectRatio","innerWidth","innerHeight","getElementById","appendChild","publicMethods","context","remove","removeChild","Attr","Style","css","createTextNode","getAttribute","on","event","addEventListner","domainIntervals","color","position","align","scale","exponent","metric","domain","styles","stroke","stroke-width","ticks","tickLength","tickPosition","tickInterval","tickAlign","skipLast","tickFormat","grid","_","visable","labelPos","labelAngle","X","Y","tickLabelAlign","labelPosition","getTickInterval","vDomain","log10","intervals","di","isNaN","scaleOptions","__WEBPACK_IMPORTED_MODULE_0__scale__","axis","show","x1","x2","y1","y2","svgTicks","tickLabel","class","font-size","textAnchor","gx1","gx2","gy1","gy2","labelText","stroke-opacity","margin","d0","d1","r0","r1","domainLength","rangeLength","r","parts","suffix","numericSymbols","__WEBPACK_IMPORTED_MODULE_0__arrays__","number","toExponential","parseFloat","p6Solo","arrays","aggregate","pipeline","embed","toArray","solo","tranfs","dashi","button","__WEBPACK_IMPORTED_MODULE_0__src_button__","buttonGroup","__WEBPACK_IMPORTED_MODULE_1__src_button_group__","checkbox","__WEBPACK_IMPORTED_MODULE_2__src_checkbox__","dropdown","__WEBPACK_IMPORTED_MODULE_3__src_dropdown__","fileInput","__WEBPACK_IMPORTED_MODULE_4__src_fileinput_js__","icon","__WEBPACK_IMPORTED_MODULE_5__src_icon__","list","__WEBPACK_IMPORTED_MODULE_6__src_list__","layout","__WEBPACK_IMPORTED_MODULE_7__src_layout__","panel","__WEBPACK_IMPORTED_MODULE_8__src_panel__","progressBar","__WEBPACK_IMPORTED_MODULE_9__src_progress__","radios","__WEBPACK_IMPORTED_MODULE_10__src_radios__","table","__WEBPACK_IMPORTED_MODULE_11__src_table__","createElement","body","label","title","fontSize","background","className","textAlign","verticalAlign","marginRight","input","display","onchange","addEventListener","evt","click","innerHTML","showLoading","hideLoading","toggleLoading","buttons","addButtons","add","menu","items","item","itemDiv","ic","variable","jquery","jQuery","$","set","wrapper","Button","change","selectedColor","selectedIcon","setSelected","itemId","selected","_selected","onselect","onSelect","clearSelected","content","img","src","setSelectedItemIds","ids","getSelectedItemIds","select","layoutId","rows","spacing","cols","overflow","clientWidth","clientHeight","divs","cells","createColumns","columns","widthTotal","cs","colWidth","col","createColumn","undefined","createRows","rowWidth","heightTotal","rs","rowHeight","createLayout","cell","cid","headerHeight","classNames","angularJS","AngularJS","fullScreen","backgroundColor","paddingLeft","panelTitle","marginTop","controls","ctrl","child","domArray","toggleFullScreen","zIndex","div","bar","progress","percent","percentage","setPercentage","hide","field","checked","tableHead","tableBody","tr","addRow","_row","td","HTMLElement","updateCell","html","childNodes","tbody","__WEBPACK_IMPORTED_MODULE_0__src_main_js__","pageHeaderHeight","margin-top","modal","transition","sidebar","dimPage","closable","each","menuID","removeClass","addClass","boards","__WEBPACK_IMPORTED_MODULE_1__stats_app__","__WEBPACK_IMPORTED_MODULE_0__datamgmt__","metadata","oncancel","dataManager","__WEBPACK_IMPORTED_MODULE_2__data_datasets_js__","dataPanel","__WEBPACK_IMPORTED_MODULE_1_dashi__","border","dataList","dsID","__WEBPACK_IMPORTED_MODULE_0__loadData__","ds","topology","tag","actionDiv","fileUploadButton","__WEBPACK_IMPORTED_MODULE_2__initialize__","interactions","visualization","_responseType","getResult","registers","operation","response","optID","addToPipeline","dataOptions","__WEBPACK_IMPORTED_MODULE_0__allocate__","__WEBPACK_IMPORTED_MODULE_3__compile__","extent","register","dataDim","filterFlag","filterControls","uFilterControls","dataInput","uDataInput","aDataFieldId","aDataItemId","resume","reg","fieldCount","uFieldCount","uDataSize","uIndexCount","deriveSpec","binDomain","histFunction","binMin","crossfilters","__WEBPACK_IMPORTED_MODULE_4__derive__","cache","visLayers","read","__WEBPACK_IMPORTED_MODULE_1__output__","output","branchID","branch","branches","operations","run","readResult","Uint8Array","UNSIGNED_BYTE","clearViews","runSpec","specs","head","opts","visualize","vi","mark","zero","encoding","assign","opacity","interact","interaction","__WEBPACK_IMPORTED_MODULE_5__interact__","from","categoryLookup","uFilterLevel","uVisLevel","exportImage","beforeExport","vecId","dataProps","categoryIndex","strHashes","strLists","dkeys","dtypes","cachedResult","resultDimension","getDataWidth","TLB","fi","deriveWidths","deriveFieldCount","__WEBPACK_IMPORTED_MODULE_0__utils__","indexAttrData","sort","aVertexId","varying","parameter","indexCount","ai","tData","$int_fid","$float_r","$float_s","fDerivedValues","$int_fieldId","$float_addrX","$float_addrY","offsetY","addrY","addrX","bx","by","ax","ay","arraySize","subarray","kid","defaultLayout","__WEBPACK_IMPORTED_MODULE_0__flexgl_src_flexgl__","FlexGL","flexgl","canvas","sharedFunction","cavnas","substring","marginLeft","getContext","setupWebGL","env","dict","dictionary","resources","__WEBPACK_IMPORTED_MODULE_0__resource__","framebuffers","__WEBPACK_IMPORTED_MODULE_3__framebuffer__","programManager","__WEBPACK_IMPORTED_MODULE_1__program__","__WEBPACK_IMPORTED_MODULE_2__shader__","blendExt","getExtension","enableExtension","extensions","extension","extProps","ep","buffer","isProgram","serialize","aoa","fbName","keyValuePairs","newArray","dictKeys","fxgl","app","props","draw","render","dimension","Resource","gpuResources","__WEBPACK_IMPORTED_MODULE_1__attribute__","__WEBPACK_IMPORTED_MODULE_2__texture__","__WEBPACK_IMPORTED_MODULE_3__varying__","__WEBPACK_IMPORTED_MODULE_4__subroutine__","resourceTypes","requiredResources","resourceName","Attribute","attributeID","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","createBuffer","getAttribLocation","vertexAttribPointer","enableVertexAttribArray","arrayBuffer","deleteBuffer","Varying","Subroutine","pm","kernels","shaders","__WEBPACK_IMPORTED_MODULE_0__shader__","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","use","useProgram","detachShader","deleteProgram","Framebuffer","createFramebuffer","renderbuffer","createRenderbuffer","__WEBPACK_IMPORTED_MODULE_0__texture__","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","deleteRenderbuffer","deleteFramebuffer","__WEBPACK_IMPORTED_MODULE_2__aggregate__","__WEBPACK_IMPORTED_MODULE_3__cache__","__WEBPACK_IMPORTED_MODULE_4__match__","__WEBPACK_IMPORTED_MODULE_5__extent__","__WEBPACK_IMPORTED_MODULE_6__visualize__","groupKeyValue","getData","uFieldId","pos","Vec2","ii","gid","Int","uGroupFields","getFieldDomain","getFieldWidth","uAggrOpt","$vec4","uResultDim","resultFieldCount","resultDomains","getAvgValues","groupFields","$by","groupFieldIds","resultDim","newFieldSpec","$calculate","$out","newFieldNames","resultFields","resultFieldIds","operators","FUNC_ADD","uGroupGetStat","aggrOpts","fGroupResults","fAggrStats","newFieldIds","gf","rowTotal","colTotal","cacheTag","fieldTotal","vertexShaderFilter","sel","visSelect","Bool","uVisControls","uFilterRanges","uVisRanges","vertexShaderSelect","uSelectCount","uInSelections","fragmentShader","SELECT_MAX","filterRanges","visControls","visRanges","inSelections","control","filterSpec","$in","newDomains","matchFields","filterSelections","viewSelections","bitmap","vDiscardData","fieldIds","smallest","extents","idCount","Date","colorManager","__WEBPACK_IMPORTED_MODULE_0__color__","chartPadding","__WEBPACK_IMPORTED_MODULE_6__metavis_layout__","visualEncodings","enhance","__WEBPACK_IMPORTED_MODULE_3__reveal__","renderMode","__WEBPACK_IMPORTED_MODULE_2__render__","updateInstancedAttribute","vm","uFeatureCount","fv","viz","revealDensity","visDomain","visDimension","dimSetting","__WEBPACK_IMPORTED_MODULE_4__encode__","val0","val1","aDataItemVal0","aDataItemVal1","viewSetting","categories","colors","getColors","showLegend","legend","ONE_MINUS_SRC_ALPHA","lineWidth","isHistogram","uVisDomains","domains","pv","addChart","primitive","LINE_STRIP","count","act","userActions","viewId","colorSetMax","setColorTable","colorset","setColorScheme","gradient","colorResolution","mapColorRGB","updateScheme","newColors","__WEBPACK_IMPORTED_MODULE_0__gradients__","updateTable","uColorSet","colorTable","defaultColorSet","substr","rgba2hex","uColorMode","rgba","hexStr","hex","colorStr","__WEBPACK_IMPORTED_MODULE_1__colorhex__","alpha","cc","colorGradient","c0","c1","xi","isRgb","colorValue","$float_value","colorRGB","Vec3","intValue","uColorCount","vec3","inferno","magma","plasma","viridis","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","visMap","$float_indexedValue0","$float_indexedValue1","$float_defaultValue","$float_exp","getNonIndexedData","indexedValue0","indexedValue1","defaultValue","instancedXY","interleave","polygon","posX","posY","uVisualEncodings","uMarkSize","uVisShape","dist","gl_PointCoord","xy","smoothstep","mod","uInterleaveX","uDefaultWidth","uDefaultHeight","uMarkSpace","vmapIndex","code","codeIndex","isRect","markSpace","scaleX","domainX","scaleY","domainY","histDim","histMin","histMax","histIntv","histBin","base","selectX","selectY","brushstart","brushend","selector","intStart","drag","preventDefault","x0","y0","nw","nh","sp","ondrag","selectorBox","nx","removeEventListener","defaultProperties","prop","init","createSVG","__WEBPACK_IMPORTED_MODULE_0__svg__","backSVG","scales","frontSVG","addProperty","destroy","_super","__WEBPACK_IMPORTED_MODULE_1__chart__","imageCanvas","svgString","XMLSerializer","serializeToString","DOMURL","URL","webkitURL","svgBlob","Blob","svgURL","createObjectURL","canvasLayer","Image","svgLayer","onload","drawImage","png","toDataURL","revokeObjectURL","onerror","plot","hist","features","labels","onhover","axisOffset","xAxisOption","__WEBPACK_IMPORTED_MODULE_1__format__","yAxisOption","__WEBPACK_IMPORTED_MODULE_3__legend__","maxStrLength","xAxes","yAxes","labelOffset","__WEBPACK_IMPORTED_MODULE_0__axis__","xAxisTitle","yAxisTitle","chartLayer","barHeight","isFinite","hMarks","removeAxis","yp","gradientID","gradID","defaultColors","__WEBPACK_IMPORTED_MODULE_2__format__","gradDirection","defaultSize","linearGradient","__WEBPACK_IMPORTED_MODULE_1__axis__","ColumnStore","struct","schema","colStats","colAlloc","colRead","initStruct","initCStore","configureColumn","addRows","shift","addObjects","objArray","addColumn","columnData","columnName","columnType","values","info","exportAsJSON","ri","dataFrame","exportAsRowArray","export","import","request","method","query","encodeURIComponent","req","XMLHttpRequest","open","responseType","status","statusText","setRequestHeader","send","promises","all","loadLine","delimiterCode","initPos","q","EOL","QUOTE","L","charCodeAt","delimiter","parsers","ta","insertRows","vl","vector","columnArray","queries","queue","task","_callback","oncomplete","arrayOpts","group","indexBy","indexed","mf","sortBy","sortArray","al","orderBy","ss","binAggregate","attrKey","embedData","rangeBegin","rangeEnd","partition","numPart","pid","partitions","partitionBy","hash","toColumnArray","dataLeft","dataRight","keyL","kr","$id","lookup","board","vk","__WEBPACK_IMPORTED_MODULE_2__transform__","dualView","total_sat_time","$sum","terminalColorEncoding","avg_hops","$avg","Total_sat_time","db","__WEBPACK_IMPORTED_MODULE_2_p6_solo__","__WEBPACK_IMPORTED_MODULE_1_p6__"],"mappings":"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","file":"codes-netvis.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bc293695851d536e9921","var array = {};\nfunction _reduce(array, opt) {\n    var i,\n        len = array.length,\n        fn,\n        result;\n\n    if(!len) return 0;\n\n    switch (opt) {\n        case \"max\":\n            result = array.reduce(function(a, b) {\n                return (a > b) ? a : b;\n            });\n            break;\n        case \"min\":\n            result = array.reduce(function(a, b) {\n                return (a < b) ? a : b;\n            });\n            break;\n        case \"and\":\n        case \"&\":\n            result = array.reduce(function(a, b) {\n                return a & b;\n            });\n            break;\n        case \"or\":\n        case \"|\":\n            result = array.reduce(function(a, b) {\n                return a | b;\n            });\n            break;\n        case \"mult\":\n        case \"*\":\n            result = array.reduce(function(a, b) {\n                return a * b;\n            });\n            break;\n        default: // \"sum\" or \"+\"\n            result = array.reduce(function(a, b) {\n                return a + b;\n            });\n            break;\n    }\n\n    return result;\n}\n\narray.reduce = function(opt) {\n    return function(array) {\n        var a = (array instanceof Array) ? array : Array.apply(null, arguments);\n        return _reduce(a, opt);\n    };\n};\n\narray.avg = function(array) {\n    return _reduce(array, \"+\") / array.length;\n    // return array.reduce(function(a,b){ return 0.5 * (a + b)});\n};\n\narray.normalize = function(array) {\n    var max = _reduce(array, \"max\"),\n        min = _reduce(array, \"min\"),\n        range = max - min;\n\n    return array.map(function(a){\n        return (a - min) / range;\n    });\n}\n\narray.seq = function(start, end, intv) {\n    var interval = intv || 1,\n        array = [];\n\n    for(var i=start; i<=end; i+=interval)\n        array.push(i);\n\n    return array;\n};\n\n[\"max\", \"min\", \"mult\", \"and\", \"or\"].forEach(function(f) {\n    array[f] = array.reduce(f);\n});\n\narray.sum = array.reduce(\"+\");\n\narray.scan = array.pfsum = function(a){\n    var pfsum = [],\n        accum = 0;\n\n    for (var i = 0; i < a.length; i++) {\n        accum += a[i];\n        pfsum.push(accum);\n    }\n\n    return pfsum;\n};\n\narray.iscan = function(a) {\n    return array.scan([0].concat(a));\n};\n\narray.diff = function(a, b) {\n    var difference = [];\n    a.forEach(function(d){\n        if (b.indexOf(d)===-1) {\n            difference.push(d);\n        }\n    });\n    return difference;\n};\n\narray.intersect = function(a, b) {\n    var t;\n    if (b.length > a.length) t = b, b = a, a = t; // indexOf to loop over shorter\n    return a.filter(function (e) {\n            if (b.indexOf(e) !== -1) return true;\n    });\n};\n\narray.unique = function(a) {\n    return a.reduce(function(b, c) {\n        if (b.indexOf(c) < 0) b.push(c);\n        return b;\n    }, []);\n};\n\narray.lcm = function(A) {\n    var n = A.length, a = Math.abs(A[0]);\n    for (var i = 1; i < n; i++) {\n        var b = Math.abs(A[i]), c = a;\n        while (a && b){ (a > b) ? a %= b : b %= a; }\n        a = Math.abs(c*A[i])/(a+b);\n    }\n    return a;\n};\n\narray.stats = function(array){\n    return {\n        max: _reduce(array, \"max\"),\n        min: _reduce(array, \"min\"),\n        avg: array.avg(array)\n    };\n};\n\narray.histogram = function(array, numBin, _max, _min) {\n    var l = array.length,\n        min = (typeof(_min) == 'number') ? _min : _reduce(array, \"min\"),\n        max = (typeof(_max) == 'number') ? _max : _reduce(array, \"max\"),\n        range = max - min,\n        interval = range / numBin,\n        bins = [],\n        // ids = [],\n        hg = new Array(numBin+1).fill(0);\n\n    for(var b = 0; b < numBin; b++) {\n        bins.push([min + range * (b/(numBin)), min + range*(b+1)/(numBin)]);\n        // ids[b] = [];\n    }\n\n    // ids[numBin] = [];\n\n    for(var i = 0; i < l; i++) {\n        binID = Math.floor( (array[i] - min) / range * (numBin));\n        hg[binID]++;\n        // ids[binID].push(i);\n    };\n\n    hg[numBin-1] += hg[numBin];\n    // ids[numBin-1] = ids[numBin-1].concat(ids.pop());\n    return {\n        bins: bins,\n        counts: hg.slice(0,numBin),\n        // ids: ids\n    };\n}\n\narray.var = function(rowArray) {\n    var m = _reduce(rowArray, \"+\") / rowArray.length,\n        va = rowArray.map(function(a){ return Math.pow(a-m, 2) });\n\n    return _reduce(va, \"+\") / (rowArray.length - 1);\n}\n\narray.std = function(rowArray) {\n    return Math.sqrt(array.var(rowArray));\n}\n\n\n\nmodule.exports = array;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6-solo/src/arrays.js\n// module id = 0\n// module chunks = 0 1","const int      = Int32Array;\nconst short    = Int16Array;\nconst float    = Float32Array;\nconst double   = Float64Array;\nconst string   = Uint16Array;\nconst time     = Float64Array;\nconst temporal = Float64Array;\nconst integer  = Int32Array;\nconst numeric  = Float32Array;\nconst nominal  = Uint16Array;\n\nexport {\n    int,\n    short,\n    float,\n    double,\n    string,\n    time,\n    temporal,\n    integer,\n    numeric,\n    nominal\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/ctypes.js\n// module id = 1\n// module chunks = 0 1","import p6 from './src/pipeline';\nimport cstore from './src/cstore';\nimport  * as ctypes  from './src/ctypes';\nimport * as ajax from './src/ajax';\nimport parse     from './src/parse';\n\nexport default p6;\n\nvar root = typeof self == 'object' && self.self === self && self ||\n           typeof global == 'object' && global.global === global && global ||\n           this;\n\nroot.p6 = p6;\nroot.p6.ajax = ajax;\nroot.p6.cstore = cstore;\nroot.p6.ctypes = ctypes;\nroot.p6.parse = parse;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/index.js\n// module id = 2\n// module chunks = 0 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0 1","var ArrayOpts = require(\"./arrays.js\");\n\nmodule.exports = function(data, spec, headers){\n    var i,\n        l = data.length,\n        attributes = headers || Object.keys(data[0]),\n        bin,\n        bins = [],\n        binCollection = {},\n        result = [],\n        ks;\n\n    if(!spec.hasOwnProperty('$group') && !spec.hasOwnProperty('$bin')) return result;\n\n    if(typeof spec.$bin == 'object') {\n        var binAttr = Object.keys(spec.$bin)[0],\n            binCount = spec.$bin[binAttr];\n\n        if(attributes.indexOf(binAttr) !== -1) {\n            var column = data.map(function(d){return d[binAttr]}),\n                min = ArrayOpts.min(column),\n                max = ArrayOpts.max(column),\n                binInterval = (max - min) / binCount;\n\n            for(i = 0; i < l; i++){\n                data[i]['bin@' + binAttr] = Math.min(Math.floor(data[i][binAttr]/binInterval), binCount-1);\n            }\n\n            spec.$group = 'bin@' + binAttr;\n            attributes.push('bin@' + binAttr);\n        }\n    }\n\n    for(i = 0; i < l; i++){\n        if(Array.isArray(spec.$group)) {\n            ks = [];\n            spec.$group.forEach(function(si){\n                ks.push(data[i][si]);\n            });\n            bin = JSON.stringify(ks);\n        } else {\n            bin = data[i][spec.$group];\n        }\n        if( bins.indexOf(bin) < 0 ){\n            bins.push(bin);\n            binCollection[bin] = [data[i]];\n        } else {\n            binCollection[bin].push(data[i]);\n        }\n    }\n\n    var bl = bins.length;\n\n    for(i = 0; i < bl; i++){\n        var res = {};\n        if(Array.isArray(spec.$group)) {\n            ks = JSON.parse(bins[i]);\n            spec.$group.forEach(function(s, j){\n                res[s] = ks[j];\n            })\n\n        } else {\n            res[spec.$group] = bins[i];\n        }\n\n        if(spec.$data) {\n            res.data = binCollection[bins[i]];\n        }\n\n        if(spec.$group) {\n            var gkeys = Array.isArray(spec.$group) ? spec.$group : [spec.$group];\n\n            gkeys.forEach(function(gk){\n                if(attributes.indexOf(gk) === -1) {\n                    throw Error('Invalid attribute name: ', gk);\n                }\n            })\n        }\n\n        var out = spec.$collect || spec.$reduce || [];\n        var keys = Object.keys(out);\n        if(keys.length === 0) return result;\n        keys.forEach(function(key){\n            var attr = key,\n                opt = out[key];\n\n            if(opt === \"$count\" || opt === \"$data\") {\n                attr = key;\n            }\n            if(typeof out[key] === 'object'){\n                opt = Object.keys(out[key])[0];\n                attr = out[key][opt];\n\n                if(attributes.indexOf(attr) === -1 && attr !== \"*\" && !Array.isArray(attr)) {\n                    var warnMsg = \"No matching attribute or operation defined for the new attribute \" + key + \":\" + spec[key];\n                    console.warn(warnMsg);\n                    return;\n                }\n            }\n\n            if(typeof opt === \"function\") {\n                // res[key] = binCollection[bins[i]].map(function(a){ return a[attr]; }).reduce(opt);\n                res[key] = opt.call(null, binCollection[bins[i]].map(function(a){ return a[attr]; }));\n            } else if(typeof opt === \"string\") {\n                if(opt === \"$unique\") {\n                    res[key] = ArrayOpts.unique(binCollection[bins[i]].map(function(a){ return a[key]; }));\n                } else if (opt === \"$list\") {\n                    res[key] = binCollection[bins[i]].map(function(a){ return a[attr]; });\n                } else if (opt === \"$first\") {\n                    res[key] = binCollection[bins[i]][0][attr];\n                } else if (opt === \"$merge\") {\n                    var mergedResult = [];\n                    binCollection[bins[i]].map(function(a){ return a[attr]; }).forEach(function(m){\n                        mergedResult = mergedResult.concat(m);\n                    })\n                    res[key] = mergedResult;\n                } else if (opt === \"$count\") {\n                    res[key] = binCollection[bins[i]].length;\n                } else if (opt === \"$data\") {\n\n                    res[key] = (spec[key][opt] == '*')\n                        ? binCollection[bins[i]]\n                        : binCollection[bins[i]].map(function(data){\n                            var row = {};\n                            spec[key][opt].forEach(function(k){ row[k] = data[k] });\n                            return row;\n                        });\n                } else {\n                    var fname = opt.slice(1);\n\n                    if(fname in ArrayOpts) {\n                        res[key] = ArrayOpts[fname].call(null, binCollection[bins[i]].map(function(a){\n                            return a[attr];\n                        }));\n                    }\n                }\n            }\n        });\n        result.push(res);\n    }\n\n    return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6-solo/src/aggregate.js\n// module id = 4\n// module chunks = 0 1","module.exports = function match(data, spec) {\n    var indexes = data[0];\n\n    if(!Array.isArray(indexes)) indexes = [];\n\n    return data.filter(function(a){\n        if(_match(a, spec, indexes)) return a;\n    });\n};\n\nfunction _match(obj, spec, indexes){\n    var match,\n        opt,\n        index,\n        sat = true,\n        keys = Object.keys(spec);\n\n    keys.forEach(function(key){\n        if(key === \"$not\") {\n            match = !_match(obj, spec[key], indexes);\n        } else if(key == \"$or\" || key == \"$and\" ) {\n            match = (key == \"$and\");\n            spec[key].forEach(function(s){\n                match = (key == \"$and\") ? match & _match(obj, s, indexes) : match | _match(obj, s, indexes);\n            });\n        } else {\n            index = (indexes.length > 0) ? indexes.indexOf(key) : key;\n\n            if(typeof spec[key] === 'object'){\n                opt = Object.keys(spec[key])[0];\n\n                if(opt[0] == \"$\" && spec[key][opt] instanceof Array){\n                    if(opt == \"$in\" || opt == \"$nin\"){\n                        match = ((opt == \"$nin\") ^ (spec[key][opt].indexOf(obj[index]) > -1));\n                    } else if(opt == \"$inRange\"){\n                        match =(obj[key] >= spec[key][opt][0] & obj[index] <= spec[key][opt][1]);\n                    } else if(opt == \"$ninRange\"){\n                        match =(obj[key] < spec[key][opt][0] | obj[index] > spec[key][opt][1]);\n                    } else if(opt == \"$inDate\"){\n                        match = (spec[key][opt].map(Number).indexOf(+(obj[index])) > -1);\n                    }\n                } else if(spec[key] instanceof Array) {\n                    match =(obj[key] >= spec[key][0] & obj[index] <= spec[key][1]);\n                }\n            } else {\n                if(spec[key][0] === \"$\") {\n                    match = (obj[spec[key].slice(1)] === obj[index]);\n                } else {\n                    match = (spec[key] == obj[index]);\n                }\n            }\n        }\n        sat = sat & match;\n    });\n\n    return sat;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6-solo/src/match.js\n// module id = 5\n// module chunks = 0 1","import p6 from 'p6';\r\nimport p6Solo from 'p6-solo';\r\n\r\n\r\nconst ajax = p6.ajax;\r\nconst dsv = p6.parse;\r\nconst allocate = p6Solo.allocate;\r\n\r\nconst TERMINAL_METRICS = [\"lp_id\", \"terminal_id\", \"data_size\", \"avg_packet_latency\", \"packets_finished\", \"avg_hops\", \"sat_time\"];\r\nconst LINK_METRICS = [\"group_id\", \"router_id\", \"router_port\", \"sat_time\", \"traffic\"];\r\n\r\nexport default function loadData(args, callback) {\r\n    const DATASET = '/data/' + args.path,\r\n        TERMINAL_PER_ROUTER = args.terminals / args.routers,\r\n        ROUTER_PER_GROUP = args.routers / args.groups,\r\n        LOCAL_LINK_COUNT = args.localLinkPerRouter || ROUTER_PER_GROUP,\r\n        GLOBAL_LINK_COUNT = args.globalLinkPerRouter || TERMINAL_PER_ROUTER,\r\n        GROUP_TOTAL = TERMINAL_PER_ROUTER * ROUTER_PER_GROUP + 1,\r\n        ROUTER_TOTAL = ROUTER_PER_GROUP * GROUP_TOTAL;\r\n\r\n    function calcTargetRouter(group_id, router_id, port) {\r\n        var first = router_id % ROUTER_TOTAL;\r\n        var target_grp = first + port * ROUTER_PER_GROUP;\r\n        if(target_grp == group_id) {\r\n            target_grp = GROUP_TOTAL - 1;\r\n        }\r\n        var my_pos = group_id % ROUTER_PER_GROUP;\r\n        if(group_id == GROUP_TOTAL - 1) {\r\n            my_pos = target_grp % ROUTER_PER_GROUP;\r\n        }\r\n        var target_pos =  target_grp * ROUTER_PER_GROUP + my_pos;\r\n        return target_pos;\r\n    }\r\n\r\n    var datafiles = [\r\n            {url: DATASET + \"/dragonfly-msg-stats\", dataType: \"text\"},\r\n            {url: DATASET + \"/dragonfly-router-stats\", dataType: \"text\"},\r\n            {url: DATASET + \"/dragonfly-router-traffic\", dataType: \"text\"}\r\n        ];\r\n\r\n    var numJobs = 1;\r\n\r\n    if(args.hasOwnProperty('jobAllocation'))\r\n        datafiles.push({url: DATASET + '/' +args.jobAllocation,dataType: \"text\"});\r\n\r\n    return ajax.getAll(datafiles).then(function(text){\r\n        \r\n        var terminals = allocate({\r\n            array: dsv(text[0], \" \"),\r\n            fields: TERMINAL_METRICS,\r\n            types: [\"int\", \"int\", \"int\", \"float\", \"float\", \"float\", \"float\"],\r\n            skip: 1\r\n        }).objectArray();\r\n        terminals.forEach(function(terminal){\r\n            terminal.job_id = -1;\r\n        })\r\n\r\n        if(text.length > 3 && text[3].length) {\r\n            var jobs = text[3].split(\"\\n\").map(function(j){return j.split(\" \")});\r\n            jobs.pop();\r\n\r\n            jobs.forEach(function(job, jobId){\r\n                job.forEach(function(nodeId){\r\n                    var nid = parseInt(nodeId);\r\n                    if(nid >= 0)\r\n                        terminals[nid].job_id = jobId;\r\n                })\r\n\r\n            });\r\n\r\n            numJobs = jobs.length;\r\n        }\r\n\r\n        var busytime = allocate({\r\n            array: dsv(text[1], \" \"),\r\n            fields: [\"lp_id\", \"group_id\", \"router_id\", \"local_sat_time\", \"global_sat_time\"],\r\n            types: [\"int\", \"int\", \"int\", \"veci\"+LOCAL_LINK_COUNT, \"veci\"+GLOBAL_LINK_COUNT],\r\n            skip: 2,\r\n        }).objectArray();\r\n\r\n        var traffic = allocate({\r\n            array: dsv(text[2], \" \"),\r\n            fields: [\"lp_id\", \"group_id\", \"router_id\", \"local_traffic\", \"global_traffic\"],\r\n            types: [\"int\", \"int\", \"int\", \"veci\"+LOCAL_LINK_COUNT, \"veci\"+GLOBAL_LINK_COUNT],\r\n            skip: 2,\r\n        }).objectArray();\r\n\r\n        var localLinks = [],\r\n            globalLinks = [];\r\n\r\n        busytime.forEach(function(l, li){\r\n            l.local_sat_time.forEach(function(b, bi){\r\n                var link = {};\r\n                link.group_id = l.group_id;\r\n                link.router_rank = l.router_id;\r\n                link.router_id = l.group_id * ROUTER_PER_GROUP + l.router_id;\r\n                link.router_port = bi;\r\n                link.sat_time = b;\r\n                link.traffic = traffic[li].local_traffic[bi];\r\n                link.target_router = l.group_id * ROUTER_PER_GROUP + bi;\r\n                localLinks.push(link);\r\n            });\r\n\r\n            l.global_sat_time.forEach(function(g, gi){\r\n                var link = {};\r\n                link.group_id = l.group_id;\r\n                link.router_rank = l.router_id;\r\n                link.router_id = l.group_id * ROUTER_PER_GROUP + l.router_id;\r\n                link.router_port = gi;\r\n                link.sat_time = g;\r\n                link.traffic = traffic[li].global_traffic[gi];\r\n                link.target_router = calcTargetRouter(link.group_id, link.router_rank, link.router_port);\r\n                globalLinks.push(link);\r\n            });\r\n        });\r\n\r\n        terminals.forEach(function(d) {\r\n            d.router_id = Math.floor(d.terminal_id/TERMINAL_PER_ROUTER);\r\n            d.router_rank = Math.floor(d.router_id/ROUTER_PER_GROUP);\r\n            d.router_port = d.terminal_id % TERMINAL_PER_ROUTER;\r\n            d.group_id = Math.floor(d.terminal_id/TERMINAL_PER_ROUTER/ROUTER_PER_GROUP);\r\n        });\r\n\r\n\r\n        if(typeof callback == 'function')\r\n            callback({\r\n                globalLinks: globalLinks,\r\n                localLinks: localLinks,\r\n                terminals: terminals\r\n            });\r\n\r\n        return new Promise(function(resolve, reject) {\r\n            return resolve({\r\n                globalLinks: globalLinks,\r\n                localLinks: localLinks,\r\n                terminals: terminals,\r\n                numJobs: numJobs\r\n            });\r\n        })\r\n    })\r\n}\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/loadData.js\n// module id = 6\n// module chunks = 0 1","import * as ctypes from './ctypes';\n\nexport function seq(dtype, start, end, interval) {\n    var step = interval || 1,\n        size = (end - start) / step + 1,\n        buf;\n\n    buf = new ctypes[dtype](size);\n    for (var i = 0; i < size; i++) {\n        buf[i] = start + i * step;\n    }\n    return buf;\n}\n\nexport let seqInt = seq.bind(null, \"int\");\nexport let seqFloat = seq.bind(null, \"float\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/utils.js\n// module id = 7\n// module chunks = 0 1","export default function Uniform(glContext, name, type, data) {\n\n    var uniform = (this instanceof Uniform) ? this : {},\n        ctx = glContext;\n\n    function serializeArray(arrayOfArray) {\n        var sa = [];\n        arrayOfArray.forEach(function(a){\n            sa = sa.concat(a);\n        })\n        return sa;\n    }\n\n    function setUniform() {\n        var type = this.type,\n            location = this.location,\n            size = this.size,\n            data = this.data;\n\n        if(Array.isArray(data)) {\n            var hasArray = data.filter(function(d){return Array.isArray(d);});\n            if(hasArray)\n                data = serializeArray(data);\n        }\n\n        if((type == 'float' || type == 'int') && !Array.isArray(data) && !ArrayBuffer.isView(data))\n            data = [data];\n\n        var buf;\n        if (type.slice(0,3) == 'vec' || type == 'float') {\n            buf = new Float32Array(data);\n            ctx['uniform' + size + 'fv'](location, buf);\n        } else if(type.slice(0,4) == 'ivec' || type == 'int'){\n            buf = new Int32Array(data);\n            ctx['uniform' + size + 'iv'](location, buf);\n        } else if(type.slice(0,3) == 'mat') {\n            buf = new Float32Array(data);\n            ctx['uniformMatrix' + size + 'fv'](location, false, buf);\n        } else if(type == 'sampler2D') {\n            if(data.hasOwnProperty('resourceType') && data.resourceType == 'texture') {\n                ctx.activeTexture(ctx.TEXTURE0 + data.index);\n                ctx.bindTexture(ctx.TEXTURE_2D, data.ptr);\n                ctx.uniform1i(location, data.index);\n            }\n        }\n    }\n\n    uniform.create = function(name, type, data) {\n\n        if(Array.isArray(data)) {\n            var hasArray = data.filter(function(d){return Array.isArray(d);});\n            if(hasArray)\n                data = serializeArray(data);\n        }\n\n        uniform[name] = {\n            type: type,\n            name: name,\n            data: data,\n            location: null,\n            size: parseInt(type.slice(3,4)) || parseInt(type.slice(4,5)) || 1\n        };\n\n        uniform[name].link = function(program) {\n            if(typeof this.data !== 'undefined' && this.data !== null) {\n                this.location = ctx.getUniformLocation(program, this.name);\n                setUniform.call(this);\n            }\n            return this;\n        };\n\n        uniform[name].load = function(data) {\n            this.data = data;\n            return this;\n        };\n\n        uniform[name].header = function() {\n            var header = 'uniform ' + this.type + ' ' + this.name,\n                len = 0;\n\n            if(this.type != 'sampler2D') {\n                len = this.data.length / this.size;\n            }\n\n            //TODO: fix declaration for matrix\n            if(len > 1 && type != 'mat4') {\n                header += '[' + len + ']';\n            }\n            return header + ';\\n';\n        };\n\n        return uniform[name];\n    }\n\n\n    return uniform;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/flexgl/src/uniform.js\n// module id = 8\n// module chunks = 0 1","import Uniform from \"./uniform\";\n\nexport default function Texture(glContext) {\n\n    var texture = (this instanceof Texture) ? this : {},\n        ctx = glContext,\n        textureID = 0;\n\n    function setTexture(name, texData) {\n        var type = ctx[texture[name].type.toUpperCase()],\n            format = ctx[texture[name].channel.toUpperCase()],\n            width = texture[name].dim[0],\n            height = texture[name].dim[1];\n\n        texture[name].data = texData;\n\n        ctx.bindTexture(ctx.TEXTURE_2D, texture[name].ptr);\n        ctx.texImage2D(ctx.TEXTURE_2D, 0, format, width, height, 0, format, type, texData);\n        ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MIN_FILTER, ctx.NEAREST);\n        ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MAG_FILTER, ctx.NEAREST);\n        ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_WRAP_S, ctx.CLAMP_TO_EDGE);\n        ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_WRAP_T, ctx.CLAMP_TO_EDGE);\n        ctx.bindTexture(ctx.TEXTURE_2D, null);\n    }\n\n    function updateTexture(name, texData, offset, dim) {\n        var type = ctx[texture[name].type.toUpperCase()],\n            format = ctx[texture[name].channel.toUpperCase()],\n            width = dim[0] || texture[name].dim[0],\n            height = dim[1] || texture[name].dim[1];\n\n        ctx.bindTexture(ctx.TEXTURE_2D, texture[name].ptr);\n        ctx.texSubImage2D(ctx.TEXTURE_2D, 0, offset[0], offset[1], width, height, format, type, texData);\n        ctx.bindTexture(ctx.TEXTURE_2D, null);\n    }\n\n    // TODO: Add support for texture compression\n    // function compressTexture(texData) {\n    //\n    //     var ext = (\n    //       ctx.getExtension(\"WEBGL_compressed_texture_s3tc\") ||\n    //       ctx.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\") ||\n    //       ctx.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\")\n    //     );\n    //\n    //     ctx.compressedTexImage2D(ctx.TEXTURE_2D, 0, ext.COMPRESSED_RGBA_S3TC_DXT3_EXT, texture[name].dim[0], texture[name].dim[1], 0, texData);\n    //     ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MAG_FILTER, ctx.LINEAR);\n    //     ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MIN_FILTER, ctx.LINEAR);\n    // }\n\n    texture.create = function(name, type, dim, channel, data, sampler) {\n        var texIndex = (texture.hasOwnProperty(name)) ? texture[name].index : textureID++;\n        texture[name] = {\n            name: name,\n            index: texIndex,\n            type: type || \"float\",\n            dim: dim || [512, 512],\n            channel: channel || \"alpha\",\n            data: null,\n            location: null,\n            sampler: sampler || null,\n            ptr: ctx.createTexture()\n        };\n\n        // if(data !== null && data.length)\n        setTexture(name, data);\n\n        if (texture[name].sampler === null) {\n            texture[name].sampler = Uniform(ctx).create(name, 'sampler2D', texture[name]);\n        } else {\n            texture[name].sampler.data = texture[name];\n        }\n\n        texture[name].link = function(program) {\n            if (this.data !== null) {\n                // ctx.activeTexture(ctx.TEXTURE0 + this.index);\n                // ctx.bindTexture(ctx.TEXTURE_2D, this.ptr);\n                // this.location = ctx.getUniformLocation(program, this.name);\n                // ctx.uniform1i(this.location, this.index);\n                if (typeof(this.sampler.data) == 'undefined' || this.sampler.data === null)\n                    this.sampler.data = texture[name];\n\n                this.sampler.link(program);\n            }\n            return this;\n        }\n\n        texture[name].load = function(texData) {\n            setTexture(this.name, texData);\n            return this;\n        }\n\n        texture[name].copyFromFBO = function() {\n            ctx.bindTexture(ctx.TEXTURE_2D, this.ptr);\n            ctx.copyTexImage2D(\n                ctx.TEXTURE_2D,\n                0,\n                ctx.RGBA,\n                0,\n                0,\n                this.dim[0],\n                this.dim[1],\n                0\n            );\n            ctx.bindTexture(ctx.TEXTURE_2D, null);\n        }\n\n        texture[name].update = function(texData, offset, dim) {\n            updateTexture(this.name, texData, offset, dim);\n            return this;\n        }\n\n        texture[name].resize = function(dim, data) {\n            this.dim = dim;\n            setTexture(this.name, data);\n        }\n\n        texture[name].delete = function() {\n            glContext.deleteTexture(this.ptr);\n        }\n\n        texture[name].header = function() {\n            if (this.name == this.sampler.name)\n                return 'uniform sampler2D ' + this.sampler.name + ';\\n';\n            else\n                return '';\n        }\n\n        return texture[name];\n    }\n\n    return texture;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/flexgl/src/texture.js\n// module id = 9\n// module chunks = 0 1","export default function Shader(glContext, glResource) {\n    \n    var shader = (this instanceof Shader) ? this : {},\n        ctx = glContext,\n        resource = glResource,\n        parameters = ctx._dict || {};\n\n    shader.vertex = {};\n    shader.fragment = {};\n\n    var shaderType = {\n        vertex: ctx.VERTEX_SHADER,\n        fragment: ctx.FRAGMENT_SHADER\n    };\n\n    // Convert JS functions to GLSL codes\n    function toGLSL(returnType, name, fn){\n\n        var glsl = returnType + ' ' +\n            name + '(' + applyEnvParameters(fn.toString())\n            .replace(\n                /var\\s+([\\w|\\d]+)\\s*=\\s*new\\s+([\\w|\\d]+)\\((.*)\\)/g,\n                function(expr, name, dtype, value){\n                    var parts;\n                    if(value)\n                        parts = [dtype.toLowerCase(), name, '=', value];\n                    else\n                        parts = [dtype.toLowerCase(), name];\n\n                    return parts.join(' ')\n                }\n            )\n            .replace(/for\\s*\\(\\s*var\\s+/g, 'for(int ')\n            .replace(/var\\s/g, 'float ')\n            .replace(/this./g, '')\n            .replace(/\\$(.*)\\((.*)\\)\\s*(=|;)/g, \"$1 $2 $3\");\n            // .replace(/\\$(.*?)\\./g, \"$1 \")\n\n        if(name == \"main\") {\n            glsl = glsl.replace(/function.*\\(\\s*([\\s\\S]*?)\\s*{/, '){') + \"\\n\";\n        } else {\n            var args = glsl.match(/function.*\\(\\s*([\\s\\S]*?)\\s*\\)/)[1];\n\n            if(args != \"\") {\n                args = args.replace(/\\$([\\w|\\d]+)_/g, \"$1 \");\n            }\n            glsl = glsl\n                .replace(/function.*\\(\\s*([\\s\\S]*?)\\s*\\)/, args+')') + \"\\n\";\n        }\n        return glsl;\n    }\n\n    //set parameters in JS functions before converting to GLSL codes\n    function applyEnvParameters(str){\n        //find all $(...) and replace them with parameters\n        var envParam = Object.keys(parameters);\n        if(envParam.length > 0){\n            var re = new RegExp(\"\\\\$\\\\((\"+envParam.join(\"|\")+\")\\\\)\",\"g\");\n            str = str.replace(re, function(matched){\n                return parameters[matched.slice(2,matched.length-1)];\n            });\n        }\n\n        // Make uniforms to be used as parameters in shaders, like $(uniformName)\n        // var envUniforms = Object.keys(resource.uniform);\n        // re = new RegExp(\"\\\\$\\\\((\"+envUniforms.join(\"|\")+\")\\\\)\",\"g\");\n        // str = str.replace(re, function(matched){\n        //     return resource.uniform[matched.slice(2,matched.length-1)].data;\n        // });\n\n        return str;\n    }\n\n    function compile(shaderType, shaderSource) {\n        if (shaderType !== ctx.VERTEX_SHADER && shaderType !== ctx.FRAGMENT_SHADER) {\n            throw (\"Error: unknown shader type\");\n        }\n        var _shader = ctx.createShader(shaderType);\n        ctx.shaderSource(_shader, shaderSource);\n        ctx.compileShader(_shader);\n\n        // Check the compile status, get compile error if any\n        var compiled = ctx.getShaderParameter(_shader, ctx.COMPILE_STATUS);\n        if (!compiled) {\n            var lastError = ctx.getShaderInfoLog(_shader);\n            console.log(shaderSource + '\\n ====================================================');\n            throw new Error(\"Error compiling shader '\" + _shader + \"':\" + lastError);\n\n            ctx.deleteShader(_shader);\n            return null;\n        }\n\n        return _shader;\n    }\n\n    function getDeps(fn) {\n        var deps = [],\n            sourceCode = fn.toString(),\n            shaderArgs = sourceCode.match(/function\\s.*?\\(([^)]*)\\)/),\n            args = (shaderArgs !== null && shaderArgs.length) ? shaderArgs[1] : [];\n        // args = args.replace(/(?:\\r\\n|\\r|\\n|\\s)/g, '');\n        //\n        if(args.length) {\n            deps = args.split(',').map(function(arg) {\n                return arg.replace(/\\/\\*.*\\*\\//, '').trim();\n            }).filter(function(arg) {\n                return arg;\n            });\n        }\n\n        var extraDeps = getExtraDeps(sourceCode);\n        if(extraDeps.length) {\n            deps = deps.concat(extraDeps\n            .filter(function(d){\n                return deps.indexOf(d) === -1;\n            }))\n        }\n\n        return deps;\n    }\n\n    function getExtraDeps(fnString) {\n        var extraDeps = fnString.match(/this\\.(\\w+)/g);\n        if(extraDeps !== null) {\n            extraDeps = extraDeps.map(function(d){\n                return d.slice(5);\n            });\n        }\n        return extraDeps || [];\n    }\n\n    function declareDep(dep) {\n        var res = resource.get(dep);\n        if(typeof res === 'undefined')\n            throw new Error('Resource/dependence \"' + dep + '\" is not found.');\n        if(res.resourceType == 'subroutine')\n            return toGLSL(res.type, res.name, res.fn);\n        else\n            return res.header();\n    }\n\n    function uniqueDeps(deps) {\n        var names = {};\n        deps.forEach(function(d, i){\n            names[d] = i;\n        });\n\n        return Object.keys(names);\n    }\n\n    shader.create = function(arg, fn){\n        var option = arg || {},\n            name = option.name || \"default\",\n            type = option.type || \"vertex\",\n            deps = option.require || option.deps || [],\n            precision = option.precision || \"high\",\n            debug = option.debug || false,\n            main = option.main || fn || function() {};\n\n        var shaderSource = 'precision ' + precision + 'p float;\\n';\n\n        if(deps.length === 0) deps = uniqueDeps(getDeps(main));\n\n        //get dependence from subroutines if any\n        var extraDeps = [],\n            subRoutines = [];\n\n        deps.forEach(function(dep){\n            var res = resource.get(dep);\n            if(typeof res == 'undefined') {\n                console.log(dep);\n                throw Error ('Error! Undefined variable in shader: '+  dep.name);\n            }\n            if(res.resourceType == 'subroutine') {\n                subRoutines.push(res.name);\n                var subDeps = getExtraDeps(res.fn.toString());\n                if(subDeps.length) {\n                    //TODO: make this recursive to check all subroutine deps\n                    subDeps.forEach(function(sdep){\n                        var sres = resource.get(sdep);\n                        if(sres.resourceType == 'subroutine')\n                            extraDeps = extraDeps.concat(getExtraDeps(sres.fn.toString()));\n                    })\n\n                    extraDeps = extraDeps.concat(subDeps);\n                }\n            }\n        })\n\n        if(extraDeps.length) {\n            var allDeps = extraDeps\n            // .filter(function(d){\n            //     return deps.indexOf(d) === -1;\n            // })\n            .concat(deps.filter(function(d){\n                return subRoutines.indexOf(d) === -1;\n            }))\n            .concat(subRoutines);\n\n            deps = uniqueDeps(allDeps);\n        }\n\n\n        if(Array.isArray(deps)){\n            deps.forEach(function(dep){\n                shaderSource += declareDep(dep);\n            });\n        } else if(typeof(deps) == 'object') {\n            Object.keys(deps).forEach(function(resourceType){\n                deps[resourceType].forEach(function(dep){\n                    shaderSource += declareDep(dep);\n                });\n            })\n        }\n\n        shaderSource += toGLSL('void', 'main', main);\n        if(debug)\n            console.log(shaderSource);\n        var _shader = compile(shaderType[type], shaderSource);\n        _shader._shaderType = shaderType[type];\n        _shader.deps = deps;\n        _shader.source = shaderSource;\n        shader[type][name] = _shader;\n        return _shader;\n    }\n\n    return shader;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/flexgl/src/shader.js\n// module id = 10\n// module chunks = 0 1","\nexport default function derive($p, spec) {\n\n    var derive = {},\n        dataDimension = $p.uniform.uDataDim.data,\n        deriveMax = $p.uniform.uDeriveCount.data,\n        derivedFields = Object.keys(spec);\n\n    var fields = $p.fields;\n\n    var marco = \"\\t\";\n\n    derivedFields.forEach(function(d, i){\n        var re = new RegExp(\"(\"+fields.join(\"|\")+\")\",\"g\");\n        // var formula = spec[d].replace(/@([\\w|\\d|_]+)/g, function(matched){\n        var formula = spec[d].replace(re, function(matched){\n            // console.log(matched);\n            var index = fields.indexOf(matched);\n            return 'this.getData('  + index + ', pos.x, pos.y)';\n        });\n        marco += 'if (index == ' + i + ') return ' + formula + \"; \\n \\telse \";\n    });\n\n    marco += \" return 0.0;\"\n\n    $p.uniform(\"uOptMode\", \"float\", 0)\n        .uniform(\"uDeriveId\", \"int\", 0)\n        .subroutine(\"getDerivedValue\", \"float\", new Function(\"$int_index\", \"$vec2_pos\", marco));\n\n\n    function vertexShader() {\n        gl_PointSize = 1.0;\n\n        var i, j;\n\n        i = (this.aDataIdx+0.5) / this.uDataDim.x;\n        j = (this.aDataIdy+0.5) / this.uDataDim.y;\n\n        this.vResult = this.getDerivedValue(this.uDeriveId, vec2(i, j));\n        if(this.uFilterFlag == 1) {\n            if(texture2D(this.fFilterResults, vec2(i, j)).a == 0.0)\n                this.vResult = 0.0;\n        }\n        var x, y;\n        if(this.uOptMode == 0.0){\n            x = 0.5;\n            y = 0.5;\n        } else {\n            x = i * 2.0 - 1.0;\n            y = j * 2.0 - 1.0;\n        }\n\n        gl_Position = vec4(x, y, 0.0, 1.0);\n    }\n\n    function fragmentShader() {\n        if(this.vResult == 0.0) discard;\n        if(this.uOptMode > 0.0 || this.vResult >= 0.0)\n            gl_FragColor = vec4(0.0, 0.0, 1.0, this.vResult);\n        else\n            gl_FragColor = vec4(-1.0, this.vResult, 0.0, 0.0);\n    }\n\n    var vs = $p.shader.vertex(vertexShader),\n        fs = $p.shader.fragment(fragmentShader),\n        gl = $p.createProgram(\"derive\", vs, fs);\n\n    // gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n    // gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n    // gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n    // gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n\n    function _execute() {\n\n        var gl = $p.program(\"derive\");\n        $p.framebuffer.enableRead(\"fFilterResults\");\n        $p.bindFramebuffer(\"fDerivedValues\");\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable( gl.BLEND );\n        gl.blendFunc( gl.ONE, gl.ONE );\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n\n        // $p.uniform.uDeriveCount = deriveFieldCount;\n        var deriveDomains = [];\n        derivedFields.forEach(function(d, i){\n            $p.uniform.uDeriveId = i;\n            gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n            gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n            gl.viewport(0, 0, 1,  1);\n\n            var result = new Float32Array(8);\n\n            gl.blendEquation(gl.MAX_EXT);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n            // gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, max);\n\n            gl.viewport(1, 0, 1,  1);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n\n            gl.blendEquation(gl.MIN_EXT);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n            gl.readPixels(0, 0, 2, 1, gl.RGBA, gl.FLOAT, result);\n\n            var minValue = (result[4] < 0) ? result[5] : result[7],\n                maxValue = (result[2] > 0) ? result[3] : result[1];\n            deriveDomains[i] = [minValue, maxValue];\n\n            // deriveDomains[i] = [Math.min(min[0], min[3]), Math.max(max[0], max[3])];\n        });\n        gl.viewport(0, 0, dataDimension[0], dataDimension[1]*deriveMax);\n        gl.disable( gl.BLEND );\n        gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n\n        $p.uniform.uOptMode = 1.0;\n\n        derivedFields.forEach(function(d, i){\n            $p.uniform.uDeriveId = i;\n            gl.viewport(0, dataDimension[1]*i, dataDimension[0], dataDimension[1]);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n        });\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        return deriveDomains;\n    }\n\n    derive.execute = function(spec) {\n        var derivedFields = Object.keys(spec);\n        var newDerivedDomains = _execute();\n        if(!$p._update) {\n            newDerivedDomains.forEach(function(d, i) {\n                var fieldId = $p.fields.indexOf(derivedFields[i]);\n                if(fieldId === -1) {\n                    $p.fields.push(derivedFields[i]);\n                    fieldId = $p.fields.indexOf(derivedFields[i]);\n                    $p.deriveCount += 1;\n                }\n\n                $p.fieldDomains[fieldId] = d;\n                $p.fieldWidths[fieldId] = d[1] - d[0] + 1;\n            });\n\n            $p.uniform.uFieldDomains.data = $p.fieldDomains;\n            $p.uniform.uFieldWidths.data = $p.fieldWidths;\n        }\n    }\n\n    derive.result = function(arg) {\n        var options = arg || {},\n            offset = options.offset || [0, 0],\n            resultSize = options.size || $p.dataDimension[0]* $p.dataDimension[1],\n            fid = options.fieldId || options.deriveFieldId || 0,\n            rowSize = Math.min(resultSize, $p.dataDimension[0]),\n            colSize = Math.ceil(resultSize/$p.dataDimension[0]);\n\n        var result = new Float32Array(rowSize * colSize * 4);\n        gl.readPixels(0, dataDimension[1]*fid, rowSize, colSize, gl.RGBA, gl.FLOAT, result);\n        return result.filter(function(d, i){ return i%4===3;} ); //return channel alpha in rgba\n    }\n\n    return derive;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/derive.js\n// module id = 11\n// module chunks = 0 1","\nexport default function reveal($p) {\n    var viewport = $p.viewport,\n        padding = $p.padding;\n\n    $p.uniform('uRevealMode', 'int', 1)\n        .framebuffer(\"offScreenFBO\", \"float\", $p.viewport)\n        .framebuffer(\"visStats\", \"float\", [1, 1]);\n\n    var aViewX = new Float32Array($p.viewport[0]).map((d, i) => i);\n    var aViewY = new Float32Array($p.viewport[1]).map((d, i) => i);\n\n    $p.attribute(\"aViewX\", \"float\", aViewX)\n        .attribute(\"aViewY\", \"float\", aViewY);\n\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aViewX.location, 0);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aViewY.location, 1);\n\n    var vs = $p.shader.vertex(function(){\n        var i, j;\n        i = (this.aViewX+0.5) / this.uViewDim.x;\n        j = (this.aViewY+0.5) / this.uViewDim.y;\n        this.vColorRGBA = texture2D(this.offScreenFBO, vec2(i, j));\n        gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n    });\n\n    var fs = $p.shader.fragment(function() {\n        gl_FragColor = this.vColorRGBA;\n    });\n\n    $p.program(\"post-processing\", vs, fs);\n\n    var vs2 = $p.shader.vertex(function () {\n         gl_Position = vec4(this._square, 0, 1);\n    });\n\n    var fs2 = $p.shader.fragment(function() {\n        var x, y, a;\n        var value = new Vec4();\n        x = (gl_FragCoord.x+0.5) / this.uViewDim.x;\n        y = (gl_FragCoord.y+0.5) / this.uViewDim.y;\n        value = texture2D(this.offScreenFBO, vec2(x, y));\n\n        if(value.a == 0.0) discard;\n        // a = pow(((value.a - this.uDefaultAlpha) / (this.uMaxRGBA.a -this.uDefaultAlpha)), 0.33) * 0.85 + 0.15;\n        a = pow((value.a / this.uMaxRGBA.a), 0.33) * 0.9 + 0.1;\n        // a = value.a / this.uMaxRGBA.a;\n\n        if(this.uRevealMode == 0) {\n            gl_FragColor = vec4(this.uDefaultColor*a, a);\n        } else {\n            gl_FragColor = vec4(texture2D(this.tColorGraident, vec2(1.-a, 1.0)).rgb*this.uDefaultAlpha, this.uDefaultAlpha);\n        }\n    });\n\n    $p.program(\"vis-render\", vs2, fs2);\n\n    return function(options) {\n        var gl,\n            viewIndex = options.viewIndex,\n            viewDim = options.dim,\n            offset = options.offset || [0, 0],\n            padding = options.padding || {left: 0, right: 0, left: 0, right:0};\n\n        if(!$p._update) {\n            $p.framebuffer(\"visStats\", \"float\", [1, 1]);\n            gl = $p.program(\"post-processing\");\n            $p.framebuffer.enableRead(\"offScreenFBO\");\n            $p.bindFramebuffer(\"visStats\");\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aViewX.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aViewY.location, 1);\n            gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n            gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n            gl.disable(gl.CULL_FACE);\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable( gl.BLEND );\n            gl.blendFunc( gl.ONE, gl.ONE );\n            gl.blendEquation(gl.MAX_EXT);\n            gl.viewport(0, 0, 1, 1);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0,  viewDim[0], viewDim[1]);\n\n            var max = new Float32Array(4);\n            gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, max);\n            if(max[3] == 0) {\n                max[3] = Math.sqrt($p.dataSize) * Math.log2($p.dataSize);\n            }\n            $p.views[viewIndex].maxRGBA = max;\n        }\n\n        $p.uniform.uMaxRGBA = $p.views[viewIndex].maxRGBA;\n\n        $p.bindFramebuffer(null);\n        gl = $p.program(\"vis-render\");\n        gl.ext.vertexAttribDivisorANGLE($p.attribute._square.location, 0);\n        $p.framebuffer.enableRead(\"offScreenFBO\");\n\n        gl.viewport(\n            offset[0] + padding.left,\n            offset[1] + padding.bottom,\n            viewDim[0] - padding.left - padding.right,\n            viewDim[1] - padding.top - padding.bottom\n        );\n        // gl.blendEquation(gl.FUNC_ADD);\n        gl.disable( gl.BLEND );\n        // gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        // gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/reveal.js\n// module id = 12\n// module chunks = 0 1","\nimport Brush from './metavis/brush';\nexport default function interact($p, options) {\n    var viewTags = options.view || [$p.views[0].id];\n\n    if(!Array.isArray(viewTags)) viewTags = [viewTags];\n\n    var actions = options.actions || options.events || [],\n        condition = options.condition || {},\n        callback = options.callback || function() {};\n\n    if($p._update) return;\n\n    viewTags.forEach(function(viewTag){\n        var vis = $p.views.filter(v=>v.id == viewTag)[0];\n\n        if(!Array.isArray(actions)) {\n            actions = [actions];\n        }\n        var vmap = vis.vmap,\n            p = vis.padding || $p.padding,\n            w = vis.width - p.left - p.right,\n            h = vis.height - p.top - p.bottom;\n\n        var interactor = vis.chart.svg.append(\"g\")\n                .attr(\"class\", \"selector\")\n\n        var rect = interactor.append(\"rect\")\n          .attr(\"x\", 0)\n          .attr(\"y\", 0)\n          .attr(\"width\", w)\n          .attr(\"height\", h)\n          .attr(\"fill-opacity\", 0)\n          .attr(\"stroke\", \"none\");\n\n        var svg = interactor.svg,\n            box = rect.svg.getBoundingClientRect();\n\n        var sx, sy,\n            tx = 0, ty = 0,\n            dy = 1;\n\n        function updatePos(e) {\n            tx += (e.clientX - sx) / dy;\n            ty += (e.clientY - sy) / dy;\n            sx = e.clientX;\n            sy = e.clientY;\n            $p.uniform.uPosOffset.data = [tx / w, ty / h];\n        }\n\n        function getSelection(e) {\n            var dx = e.clientX - box.left;\n            var dy = e.clientY - box.top;\n            var selection = {};\n            if(vmap.x) {\n                selection[vmap.x] = [vis.chart.x.invert(dx)];\n            }\n            if(vmap.y) {\n                selection[vmap.y] = [vis.chart.y.invert(dy)];\n            }\n            return selection;\n        }\n\n        actions.forEach(function(action){\n            if(action == 'brush') {\n                svg.style.cursor = \"crosshair\";\n                var brushOptions = {\n                    container: interactor,\n                    width: w,\n                    height: h\n                };\n\n                if(!Array.isArray(vmap.x) && !Array.isArray(vmap.y)) {\n                    if(!condition.x && !condition.y) {\n                        condition.x = condition.y = true;\n                    }\n                    brushOptions.brush = function(d) {\n                        var selection = {};\n                        if(vmap.x && d.x) selection[vmap.x] = d.x;\n                        if(vmap.y && d.y) selection[vmap.y] = d.y.reverse();\n                        callback(selection);\n                    }\n                    if(condition.x && typeof(vis.chart.x.invert) == 'function')\n                        brushOptions.x = vis.chart.x.invert;\n\n                    if(condition.y && typeof(vis.chart.y.invert) == 'function')\n                        brushOptions.y = vis.chart.y.invert\n\n                    new Brush(brushOptions);\n                }\n\n                var dims = ['x', 'y'],\n                    selections = {};\n\n                dims.forEach(function(dim){\n                    if(Array.isArray(vmap[dim]) && Array.isArray(vis.chart[dim])){\n                        var axisDist = (dim == 'x') ? h : w,\n                            selectors = vis.chart.svg.append('g');\n\n                        axisDist =  axisDist / (vmap[dim].length-1);\n\n                        vmap[dim].forEach(function(d, i) {\n\n                            var axisSelect = selectors.append(\"g\");\n                            if(dim == 'x') {\n                                brushOptions.height = axisDist * 0.2;\n                                axisSelect.translate(0, axisDist * (i - 0.1));\n                                brushOptions.brush = function(range) {\n                                    selections[d] = range[dim];\n                                    callback(selections);\n                                }\n                            } else {\n                                brushOptions.width = axisDist * 0.2;\n                                axisSelect.translate(axisDist * (i - 0.1), 0);\n                                brushOptions.brush = function(range) {\n                                    selections[d] = range[dim].reverse();\n                                    callback(selections);\n                                }\n                            }\n                            brushOptions.container = axisSelect;\n                            brushOptions[dim] = vis.chart[dim][i].invert;\n\n                            new Brush(brushOptions);\n                        });\n                    }\n                })\n            } else if(action == 'zoom') {\n                svg.onmousewheel = function(e) {\n                    sx = e.clientX - box.left;\n                    sy = e.clientY - box.top;\n                    var ny =  dy * Math.exp(e.deltaY / 1000);\n                    var delta = ny - dy;\n                    dy = ny;\n                    $p.uniform.uPosOffset.data = [-sx * delta / w, -sy * delta / h];\n                    $p.uniform.uVisScale.data = [dy, dy];\n\n                    callback();\n                }\n\n            } else if(action == 'pan') {\n                svg.style.cursor = 'move';\n                svg.onmousedown = function(e) {\n                    sx = e.clientX;\n                    sy = e.clientY;\n                    svg.style.cursor = 'move';\n\n                    svg.onmousemove = function(e) {\n                        tx += (e.clientX - sx) / dy;\n                        ty += (e.clientY - sy);\n\n                        callback();\n                    }\n\n                    svg.onmouseup = function(e) {\n                        updatePos(e);\n                        svg.style.cursor = 'default';\n                        svg.onmousemove = null;\n                        svg.onmouseup = null;\n                    }\n                }\n\n            } else if(action == 'click') {\n                svg.onclick = function(e) {\n                    callback(getSelection(e));\n                }\n            } else if(action == 'hover') {\n                svg.onmouseover = function(e) {\n                    callback(getSelection(e));\n                    svg.onmousemove = function(e) {\n                        callback(getSelection(e));\n                    }\n\n                    // svg.onmouseout = function(e) {\n                    //     updatePos(e);\n                    //     svg.style.cursor = 'default';\n                    //     svg.onmousemove = null;\n                    //     svg.onmouseover = null;\n                    // }\n                }\n            }\n        })\n    })\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/interact.js\n// module id = 13\n// module chunks = 0 1","function setAttr(elem, attr) {\n    for( var key in attr ){\n        var value = attr[key],\n            c = key.match(/[A-Z]/);\n        if(c !== null) key = key.replace(c[0], \"-\"+c[0].toLowerCase())\n        elem.setAttribute(key, value);\n    }\n}\n\nfunction setStyle(elem, style) {\n    for( var key in style ){\n        var value = style[key],\n            c = key.match(/[A-Z]/);\n        if(c !== null) key = key.replace(c[0], \"-\"+c[0].toLowerCase())\n        elem.style[key] = value;\n    }\n}\n\nexport default function Svg(arg){\n    'use strict';\n    var self = (this instanceof Svg) ? this: {},\n        option = arg || {},\n        type = option.type || 'svg',\n        svgNS = 'http://www.w3.org/2000/svg',\n        svg = document.createElementNS(svgNS, type),\n        width = option.width || 400,\n        height = option.height || 300,\n        parent = option.parent || option.container || this.parent,\n        attr = option.attr || {},\n        style = option.style || {},\n        padding = option.padding || {left: 0, right: 0, top: 0, bottom: 0};\n\n    if(type === 'svg') {\n        var defaultAttr = {\n            width   : width + padding.left + padding.right,\n            height  : height + padding.top + padding.bottom,\n            viewBox : [0, 0, width + padding.left + padding.right , height + padding.top + padding.bottom].join(' '),\n            preserveAspectRatio: 'none'\n        };\n        setAttr(svg, defaultAttr);\n    }\n\n    self.innerWidth = function() {\n        return width;\n    }\n\n    self.innerHeight = function() {\n        return height;\n    }\n\n    self.padding = function() {\n        return padding;\n    }\n\n    if(style) setStyle(svg, style);\n    if(attr) setAttr(svg, attr);\n\n    if(parent) {\n        parent = (typeof parent == \"string\") ? document.getElementById(parent) : parent;\n        parent.appendChild(svg);\n    }\n\n    self.svg = svg;\n    self.parent = parent;\n\n    if(self instanceof Svg)\n        publicMethods(Svg.prototype);\n    else\n        publicMethods(self);\n\n    return self;\n};\n\nfunction publicMethods(context) {\n    context.append = function(type, attr, style) {\n        var options = {};\n        options.parent = this.svg;\n        options.type = type;\n        options.attr = attr;\n        options.style = style;\n        return new Svg(options);\n    };\n\n    context.remove = function() {\n        this.parent.removeChild(this.svg);\n    };\n\n    context.attr = function(a, v) {\n        if(typeof(a) == \"object\")\n            setAttr(this.svg, a);\n        else\n            this.svg.setAttribute(a, v);\n\n        return this;\n    }\n\n    context.Attr =  function(a, v) {\n        setAttr(this.svg, a);\n        return this;\n    }\n\n    context.Style =  function(a, v) {\n        setStyle(this.svg, a);\n        return this;\n    }\n\n    context.style = function(a, v) {\n        if(typeof(a) == \"object\")\n            setStyle(this.svg, a);\n        else\n            this.svg.style[a] = v;\n\n        return this;\n    }\n\n    context.css = context.style;\n\n    context.text = function(str){\n        this.svg.appendChild(document.createTextNode(str));\n        return this;\n    };\n\n    context.translate = function(x, y) {\n        var p = this.svg.getAttribute(\"transform\") || \"\";\n        this.svg.setAttribute(\"transform\", p + \"translate(\" + [x,y].join(\",\") + \") \");\n        return this;\n    };\n\n    context.on = function(event, callback) {\n        this.svg.addEventListner(event, callback);\n        return this;\n    }\n\n    return context;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/metavis/svg.js\n// module id = 14\n// module chunks = 0 1","import Scale from './scale';\n\nexport default function axis(arg) {\n\n    var option      = arg || {},\n        svg         = option.container || option.parent,\n        dim         = option.dim || \"x\",\n        color       = option.color || \"#000\",\n        position    = option.position || 0,\n        align       = option.align || \"\",\n        scale       = option.scale || \"linear\",\n        exponent    = option.exponent || 1,\n        metric      = option.metric || null,\n        domain      = option.domain || [0,1],\n        width       = option.width || svg.innerWidth(),\n        height      = option.height || svg.innerHeight(),\n        padding     = option.padding || svg.padding() || {left: 0, right: 0, top: 0, bottom: 0},\n        range       = option.range || (dim == \"x\") ? [0, width] : [height, 0],\n        styles      = {stroke: color, 'stroke-width': 1},\n        ticks       = option.ticks,\n        tickLength  = option.tickLength || 6,\n        tickPosition = option.tickPosition || false,\n        tickInterval= option.tickInterval || \"auto\",\n        tickAlign = option.tickAlign || \"center\",\n        skipLast = option.skipLast || false,\n        tickFormat  = option.tickFormat || null,\n        grid        = option.grid,\n        format      = option.format || function(_){return _;},\n        visable    = option.visable || true,\n        domainIntervals,\n        labelPos    = null,\n        labelAngle  = option.labelAngle || 0,\n        X = [],\n        Y = [];\n\n    if(typeof(ticks) != \"number\") {\n        ticks = (dim == \"x\") ? Math.ceil(width/50) : Math.ceil(height/50);\n    }\n    var tickLabelAlign = option.tickLabelAlign || \"end\";\n    switch (align) {\n        case \"left\" || \"center\":\n            labelPos = option.labelPos || {x: -tickLength/2, y: -5};\n            tickLabelAlign =  option.tickLabelAlign ||\"end\";\n            break;\n        case \"right\":\n            labelPos = {x: tickLength, y: -5};\n            tickLabelAlign = option.tickLabelAlign || \"start\";\n            if(!tickPosition) tickPosition = [ tickLength/2, 0];\n            break;\n        case \"top\":\n            labelPos = {x: 0, y: 0};\n            tickLabelAlign = \"middle\";\n            if(!tickPosition) tickPosition = [0, -tickLength];\n            break;\n        case \"bottom\" || \"middle\":\n            labelPos = option.labelPos || {x: 0, y: -tickLength*3};\n            tickLabelAlign =  option.tickLabelAlign || \"middle\";\n            break;\n        default:\n            labelPos = option.labelPos || option.labelPosition || {x: 0, y: 0};\n            break;\n    }\n    if(!tickPosition) tickPosition = [0,0];\n\n    function getTickInterval(){\n        var vDomain = Math.abs(domain[1] - domain[0]),\n            intv = vDomain / ticks,\n            pow = Math.ceil(Math.log10(intv)),\n            intv = intv / Math.pow(10, pow);\n\n        if(intv > 0.2 && intv <= 0.25){\n            intv = 0.25;\n        } else if(intv > 0.7 && intv <= 0.75) {\n            intv = 0.75;\n        } else {\n            intv = Math.ceil(intv * 10) / 10;\n        }\n        return intv * Math.pow(10, pow);\n    }\n\n\n    if (scale == \"categorical\" || scale == \"ordinal\") {\n        domainIntervals = function() {\n            var len = domain.length,\n                step = Math.ceil(len / ticks),\n                intervals = [],\n                i;\n            for(i = 0; i < len; i += step) {\n                intervals.push(domain[i])\n            }\n            // if(intervals[i] != domain[len-1]) intervals.push(domain[len-1]);\n\n            return intervals;\n        };\n    } else {\n        var intv;\n\n        if(tickInterval == \"auto\"){\n            intv = getTickInterval();\n\n        } else {\n            if(typeof(tickInterval) == \"number\") {\n                intv = tickInterval;\n            } else {\n                // intv = Math.abs(domain[1] - domain[0]) / ticks;\n                intv = getTickInterval();\n                domain[0] = intv * Math.floor(domain[0]/intv);\n                domain[1] = intv * Math.ceil(domain[1]/intv);\n            }\n        }\n\n        domainIntervals = function() {\n            var di = [];\n\n            if(domain[0] > domain[1]) {\n                domain[0] += intv;\n                for(var i = domain[0]; i > domain[1]; i=i-intv)\n                    di.push(i);\n            } else {\n                for(var i = domain[0]; i < domain[1]; i=i+intv)\n                    di.push(i);\n            }\n\n            if(di[di.length-1]!=domain[1] && !isNaN(domain[1]) && !skipLast){\n\n                if((domain[1] - di[di.length-1]) < 0.4 * intv)\n                    di[di.length-1] = domain[1];\n                else\n                    di.push(domain[1]);\n            }\n            return di;\n        }\n    }\n\n    if (metric === null) {\n\n        var scaleOptions = {\n            align: tickAlign,\n            type: scale,\n            domain: domain,\n            range: range\n        };\n\n        if(scale == \"power\") {\n            scaleOptions.exponent = exponent;\n        }\n\n        metric = Scale(scaleOptions)\n    } else {\n        domain = metric.domain();\n    }\n\n    var axis = svg.append(\"g\");\n\n    if(dim == 'x') {\n        if(!position && align) {\n            position = [0,height/2,height];\n            position = position[[\"top\", \"middle\", \"bottom\"].indexOf(align)];\n        }\n        Y[0] = Y[1] = position;\n        X[0] = 0;\n        X[1] = Math.abs(range[1] - range[0]);\n    } else {\n        if(!position && align) {\n            position = [0, width/2, width];\n            position = position[[\"left\", \"center\", \"right\"].indexOf(align)];\n        }\n        X[0] = X[1] = position;\n        Y[0] = 0;\n        Y[1] = Math.abs(range[1] - range[0]);\n    }\n\n    metric.show = metric.axis = function() {\n        axis.append(\"g\")\n            .append(\"line\")\n            .Attr({x1: X[0], x2: X[1], y1: Y[0], y2: Y[1]})\n            .Style(styles);\n\n        var di = domainIntervals();\n\n        for(var i = 0; i < di.length; i++) {\n            var x1,x2,y1,y2;\n            if(dim == 'x'){\n                x1 = x2 = metric(di[i]) + tickPosition[0];\n                y1 = position + tickPosition[1] + tickLength;\n                y2 = y1 - tickLength;\n            } else {\n                if(scale == \"categorical\" || scale == \"ordinal\")\n                    y1 = y2 = height - metric(di[i]);\n                else\n                    y1 = y2 = metric(di[i]) + tickPosition[1];\n                x1 = position + tickPosition[0] ;\n                x2 = x1 - tickLength;\n            }\n\n            var svgTicks = axis.append(\"g\");\n            svgTicks.append(\"line\", {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2,\n            }, styles);\n\n\n            // if (dim == 'x') tickLabelAlign = \"middle\";\n            // if (dim == 'x' && labelAngle) tickLabelAlign = \"end\";\n\n            var tickLabel = svgTicks.append(\"text\")\n                .Attr({\n                    x: x2 + labelPos.x,\n                    y: y2 - labelPos.y,\n                    // class: \"labels\",\n                    class: \"i2v-axis-label\",\n                    \"font-size\": \"0.9em\",\n                    textAnchor: tickLabelAlign\n                });\n            if(labelAngle) tickLabel.attr(\"transform\", \"rotate(\" + [labelAngle, (x2 + labelPos.x), (y2 - labelPos.y)].join(\",\")+\")\");\n\n            var labelText = (typeof(tickFormat) == \"function\") ? format(tickFormat(di[i])) : format(di[i]) ;\n            // tickLabel.appendChild( document.createTextNode(labelText) );\n            tickLabel.text(labelText);\n\n            if(grid) {\n                var gx1, gx2, gy1, gy2;\n                if(dim == 'x'){\n                    gx1 = gx2 = metric(di[i]);\n                    gy1 = 0;\n                    gy2 =height;\n                } else {\n                    gy1 = gy2 = metric(di[i]);\n                    gx1 = 0;\n                    gx2 = width;\n                }\n                axis.append(\"line\",\n                    {\n                        x1: gx1,\n                        x2: gx2,\n                        y1: gy1,\n                        y2: gy2,\n                        class: \"grid-lines\"\n                    },\n                    {\n                        \"stroke\": color,\n                        // \"stroke-width\": 0.5,\n                        \"stroke-opacity\": 0.33\n                    });\n            }\n        }\n        axis.translate(padding.left, padding.top);\n        return axis;\n    };\n\n    metric.remove = function() {\n        axis.remove();\n    }\n\n    if(visable) {\n        metric.svg = metric.show();\n    }\n\n    return metric;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/metavis/axis.js\n// module id = 15\n// module chunks = 0 1","export default function Scale(arg) {\n    var option = arg || {},\n        align = option.align || 'center',\n        type = option.type || 'linear',\n        domain = option.domain || [0,1],\n        margin = option.margin || 0,\n        exponent = option.exponent || 1,\n        range = option.range || [0,1];\n\n    function getInterpolateFunction() {\n        //intercepts and slopes for domain and range\n        var d0 = -domain[0] / (domain[1] - domain[0]),\n            d1 = 1 / (domain[1] - domain[0]),\n            r0 = range[0],\n            r1 = range[1] - range[0];\n\n        if(type == \"linear\") {\n            return function(v) { return r0 + (d0 + v * d1) * r1 };\n        } else if(type == \"power\") {\n            d0 = -Math.pow(-d0, exponent);\n            d1 = Math.pow(d1, exponent);\n            return function(v) { return r0 + (d0 + Math.pow(v, exponent) * d1) * r1 };\n        } else if (type == \"log\") {\n            exponent = option.exponent || 10;\n            d0 = -(Math.log(-d0) / Math.log(exponent));\n            d1 = (Math.log(d1) / Math.log(exponent));\n\n            return function(v) { return r0 + (d0 + Math.log(v) / Math.log(exponent) * d1) * r1 };\n\n        } else if(type == \"ordinal\" || type == \"categorical\") {\n            return function(v) {\n                if(align == 'outer')\n                    return r0 + (domain.indexOf(v)) / (domain.length-1) * r1;\n                else\n                    return r0 + (domain.indexOf(v)+0.5) / domain.length * r1;\n            };\n        } else {\n            return function(v) { return v };\n        }\n    }\n\n    var scale = getInterpolateFunction();\n\n    scale.interval = function(ticks) {\n        if (type == \"ordinal\" || type == \"categorical\") {\n            return (1 / domain.length * Math.abs(range[1] - range[0]));\n        } else {\n            var s = Math.pow(10, Math.floor(Math.log10(Math.abs(range[1] - range[0])))-1);\n            return Math.floor( Math.abs(range[1] - range[0]) / (ticks * s) )  * s;\n        }\n    };\n\n    scale.domainLength = function() {\n        if(type == \"linear\")\n            return Math.abs(domain[1] - domain[0]);\n        else if(type == \"ordinal\" || type == \"categorical\")\n            return domain.length;\n    };\n\n    scale.rangeLength = function() {\n        return Math.abs(range[1] - range[0]);\n    };\n\n    scale.invert = function(r) {\n        if(type == \"linear\") {\n            return domain[0] + (r - range[0]) / (range[1] - range[0]) * (domain[1] - domain[0]);\n        } else if(type == \"ordinal\" || type == \"categorical\") {\n            var intv = intv = r / scale.rangeLength();\n            return domain[Math.floor(intv * (domain.length))];\n        }\n    }\n\n    scale.domain = function() {\n        return domain;\n    }\n\n    return scale;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/metavis/scale.js\n// module id = 16\n// module chunks = 0 1","import {seq} from '../arrays';\n\nexport default function printformat(spec) {\n    return function(value){\n        if(typeof value !== \"number\") return value;\n        var ret,\n            convert,\n            numericSymbols = ['y', 'z', 'a', 'f', 'p', 'n', 'µ', 'm', '', 'k', 'M','G', 'T', 'P', 'E', 'Z', 'Y'],\n            n = seq(-24,24,3),\n            i = numericSymbols.length-1,\n            parts,\n            precision = spec.match(/\\d+/)[0] || 3,\n            number = Number(value),\n            exp,\n            suffix;\n\n        if(spec[spec.length-1] == 's')\n            precision--;\n\n        parts = number.toExponential(precision).toString().match(/^(-{0,1})(\\d+)\\.?(\\d*)[eE]([+-]?\\d+)$/);\n        exp = parseInt(parts[4]) || 0;\n\n        while (i--) {\n            if (exp >= n[i]) {\n                if(i==7 && (exp-n[i]) > 1) {\n                    // console.log(exp-n[i]);\n                    suffix = numericSymbols[i+1];\n                    exp -= n[i+1];\n                    break\n                } else {\n                    suffix = numericSymbols[i];\n                    exp -= n[i];\n                    break;\n                }\n            }\n        }\n        ret = parseFloat(parts[1] + parts[2] + '.' + (parts[3]||0) + 'e' + exp.toString());\n        return ret.toString() + suffix;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/metavis/format.js\n// module id = 17\n// module chunks = 0 1","var root = typeof self == 'object' && self.self === self && self ||\n           typeof global == 'object' && global.global === global && global ||\n           this;\n\nvar p6Solo = {\n    allocate    : require('./src/allocate'),\n    arrays      : require('./src/arrays'),\n    aggregate   : require('./src/aggregate'),\n    pipeline    : require('./src/pipeline'),\n    derive      : require('./src/derive'),\n    match       : require('./src/match'),\n    join        : require('./src/join'),\n    stats       : require('./src/stats'),\n    embed       : require('./src/embed'),\n    toArray     : require('./src/toarray')\n};\n\nif(typeof root.p6 == 'object') {\n    root.p6.solo = p6Solo;\n} else {\n    root.p6Solo = p6Solo;\n}\n\nif(typeof module != 'undefined' && module.exports)\n    module.exports = root.p6Solo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6-solo/index.js\n// module id = 18\n// module chunks = 0 1","var $ = require('./arrays.js');\n\nmodule.exports = function(data, spec){\n    if(!Array.isArray(data))\n        throw new Error(\"Inproper input data format.\");\n\n    if(typeof(spec) === \"function\") {\n        data.forEach(spec);\n    } else {\n        var result = [],\n            tranfs = {};\n\n        Object.keys(spec).forEach(function(s){\n            if(typeof(spec[s]) == \"function\") {\n                tranfs[s] = function(d) { d[s] = spec[s](d) };\n            } else {\n                tranfs[s] = Function(\"attr\", \"attr.\" + s + \"=\" + spec[s].replace(/@/g, 'attr.').replace(/\\$/g, '$.') + \";\");\n            }\n        });\n\n        data.forEach(function(d){\n            Object.keys(spec).forEach(function(s){\n                tranfs[s](d);\n            });\n        });\n    }\n\n    return data;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6-solo/src/derive.js\n// module id = 19\n// module chunks = 0 1","var root = typeof self == 'object' && self.self === self && self ||\n           typeof global == 'object' && global.global === global && global ||\n           this;\n\nimport button      from './src/button';\nimport buttonGroup from './src/button-group';\nimport checkbox    from './src/checkbox';\nimport dropdown    from './src/dropdown';\nimport fileInput   from './src/fileinput.js';\nimport icon        from './src/icon';\nimport list        from './src/list';\nimport layout      from './src/layout';\nimport panel       from './src/panel';\nimport progressBar from './src/progress';\nimport radios      from './src/radios';\nimport table       from './src/table';\n\nlet dashi = {\n    button,\n    buttonGroup,\n    checkbox,\n    dropdown,  \n    fileInput,\n    icon,  \n    list,       \n    layout,\n    panel, \n    progressBar,\n    radios,\n    table \n};\n\nroot.dashi = dashi;\n\n// export default dashi;\nexport {default as Button} from './src/button';\nexport {default as ButtonGroup} from './src/button-group';\nexport {default as Checkbox} from './src/checkbox';\nexport {default as Dropdown} from './src/dropdown';\nexport {default as FileInput} from './src/fileinput';\nexport {default as Icon} from './src/icon';\nexport {default as List} from './src/list';\nexport {default as Layout} from './src/layout';\nexport {default as Panel} from './src/panel';\nexport {default as ProgressBar} from './src/progress';\nexport {default as Table} from './src/table';\nexport {default as Radios} from './src/radios';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dashi/index.js\n// module id = 20\n// module chunks = 0 1","export default function Button(arg) {\n    var button = document.createElement('div'),\n        options = arg || {},\n        container = options.container || document.body,\n        callback = options.onclick || function() {},\n        text = options.text || options.label || null,\n        icon = options.icon || false,\n        title = options.title || false,\n        type = options.type,\n        fontSize = options.fontSize || options.size || null,\n        background = options.background || null,\n        fileInput = options.fileInput || false,\n        value = options.value || null,\n        types = options.types || [];\n\n    if(type) types.push(type);\n    types.push('ui button');\n    button.className = types.join(' ');\n    button.onclick = callback;\n    button.style.textAlign = 'center';\n    button.style.verticalAlign = 'top';\n\n    if(icon) {\n        var i = document.createElement('i');\n        i.className = icon + ' icon';\n        i.style.marginRight = \"10px\";\n        button.className += ' icon';\n        button.appendChild(i);\n    }\n\n    if(value !== null) {\n        button.setAttribute('value', value);\n    }\n\n    if(fileInput) {\n        var input = document.createElement('input'),\n            inputName = fileInput.name || 'files[]';\n\n        input.setAttribute('type', 'file');\n        input.setAttribute('multiple', '');\n        if(fileInput.hasOwnProperty('id')){\n            input.setAttribute('id', fileInput.id);\n        }\n        input.style.display = 'none';\n        if(typeof fileInput.onchange === 'function') {\n            input.addEventListener('change', function(evt) {\n                // fileInput.onchange(evt.target.files);\n                fileInput.onchange(evt);\n                return false;\n            }, false);\n        }\n\n        button.appendChild(input);\n        button.onclick = function(evt) {\n            input.click();\n            return false;\n        }\n\n        button.fileInput = input;\n    }\n\n    if(text !== null) button.innerHTML += text;\n    if(fontSize !== null) button.style.fontSize = fontSize;\n    if(title) button.title = title;\n    if(container) container.appendChild(button);\n\n    button.showLoading = function() {\n        if((' ' + button.className + ' ').indexOf(' loading ') === -1)\n            button.className += ' loading';\n    }\n\n    button.hideLoading = function() {\n        button.className = button.className.replace(/\\bloading\\b/, '');\n    }\n\n    button.toggleLoading = function() {\n        if((' ' + button.className + ' ').indexOf(' loading ') === -1)\n            button.className += ' loading';\n        else\n            button.hideLoading();\n    }\n\n\n    return button;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dashi/src/button.js\n// module id = 21\n// module chunks = 0 1","export default function ButtonGroup(arg) {\n    var buttonGroup = document.createElement('div'),\n        options = arg || {},\n        buttons = options.buttons || [],\n        container = options.container || null,\n        type = options.type,\n        id = options.id || false,\n        types = options.types || [];\n\n    if(type) types.push(type);\n    if(id) buttonGroup.setAttribute('id', id);\n    buttonGroup.className = 'ui buttons ' + types.join(' ');\n    function addButtons(buttons) {\n        buttons.forEach(function(b) {\n            buttonGroup.appendChild(b);\n        });\n    }\n    addButtons(buttons);\n\n    if(container) container.appendChild(buttonGroup);\n\n    buttonGroup.add = function(buttons) {\n        if(Array.isArray(buttons)) buttons = [buttons];\n        addButtons(buttons);\n    }\n    buttonGroup.append = buttonGroup.add;\n\n    if(types.indexOf('dropdown')!==-1) {\n        var dropdown = document.createElement('div'),\n            icon = document.createElement('div'),\n            menu = document.createElement('div');\n\n        dropdown.className = 'ui floating dropdown icon button';\n        icon.className = 'dropdown icon';\n        menu.className = 'menu';\n\n        dropdown.appendChild(icon);\n        dropdown.appendChild(menu);\n        buttonGroup.appendChild(dropdown);\n\n        buttonGroup.menu.append = function(items) {\n            items.forEach(function(item){\n                var label = item.label || item.name || '',\n                    callback = item.onclick || function(){};\n                var itemDiv = document.createElement('div'),\n                    ic = document.createElement('i'),\n                    text = document.createTextNode(label);\n                ic.className = item.icon + ' icon';\n                itemDiv.appendChild(ic);\n                itemDiv.appendChild(text);\n                itemDiv.onclick = callback.call(this, arg);\n                itemDiv.className = 'item';\n                menu.appendChild(itemDiv);\n            })\n        }\n    }\n\n    return buttonGroup;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dashi/src/button-group.js\n// module id = 22\n// module chunks = 0 1","export default function Checkbox(arg) {\n    var checkbox = document.createElement('div'),\n        options = arg || {},\n        container = options.container || document.body,\n        name = options.name || options.variable || \"\",\n        callback = options.onchange ||  function() {},\n        text = options.text || options.label || null,\n        type = options.type,\n        types = options.types || [];\n\n    if(type) types.push(type);\n    var input = document.createElement('input'),\n        label = document.createElement('label');\n\n    checkbox.className = 'ui checkbox ' + types.join(' ');\n    checkbox.style.margin = '10px';\n    label.innerHTML = text;\n    input.setAttribute('type', 'checkbox');\n    input.setAttribute('name', name);\n    input.onchange = callback;\n\n    checkbox.appendChild(label);\n    checkbox.appendChild(input);\n\n    if(container) container.appendChild(checkbox);\n\n    var jquery = window.jQuery || window.$;\n    if(typeof jquery == 'function') {\n        jquery(checkbox).checkbox();\n    }\n\n    Object.defineProperty(checkbox, 'onchange', {\n        set: function(f) { callback = f; }\n    })\n\n    return checkbox;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dashi/src/checkbox.js\n// module id = 23\n// module chunks = 0 1","export default function Dropdown(arg) {\n    var dropdown = document.createElement('div'),\n        wrapper = document.createElement('div');\n        options = arg || {},\n        container = options.container || null,\n        type = options.type,\n        id = options.id || false,\n        label = options.label,\n        items = options.items || options.menu || [],\n        types = options.types || [];\n\n    if(type) types.push(type);\n    if(id) dropdown.setAttribute('id', id);\n    dropdown.className = 'ui buttons ' + types.join(' ');\n\n    if(container) container.appendChild(dropdown);\n    var icon = document.createElement('div'),\n        menu = document.createElement('div');\n\n    dropdown.className = 'ui compact menu';\n    wrapper.className = 'ui simple dropdown item'\n\n    icon.className = 'dropdown icon';\n    menu.className = 'menu';\n\n    wrapper.appendChild(document.createTextNode(label));\n    wrapper.appendChild(icon);\n    wrapper.appendChild(menu);\n    dropdown.appendChild(wrapper);\n\n    dropdown.append = function(items) {\n        if(!Array.isArray) items = [items];\n        items.forEach(function(item){\n            var label = item.label || item.name || '',\n                callback = item.onclick || function(){};\n            var itemDiv = document.createElement('div'),\n                ic = document.createElement('i'),\n                text = document.createTextNode(label);\n            ic.className = item.icon + ' icon';\n            itemDiv.appendChild(ic);\n            itemDiv.appendChild(text);\n            itemDiv.onclick = callback.bind(this, arg);\n            itemDiv.className = 'item';\n            menu.appendChild(itemDiv);\n        })\n    }\n    dropdown.menu = function(items) {\n        dropdown.append(items);\n    }\n\n    dropdown.menu(items);\n\n    return dropdown;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dashi/src/dropdown.js\n// module id = 24\n// module chunks = 0 1","export default function FileInput(arg) {\n    var button;\n    if(typeof arguments[0] === 'function') {\n        button = arguments[0](arg);\n    } else {\n        button = Button(arg);\n    }\n\n    var button = document.createElement('div'),\n        options = arg || {},\n        container = options.container || document.body,\n        callback = options.onclick || function() {},\n        text = options.text || options.label || null,\n        icon = options.icon || false,\n        title = options.title || false,\n        type = options.type,\n        fontSize = options.fontSize || options.size || null,\n        background = options.background || null,\n        types = options.types || [];\n\n    if(type) types.push(type);\n    button.className = 'ui button ' + types.join(' ');\n    button.onclick = callback;\n    button.style.textAlign = 'center';\n    button.style.verticalAlign = 'top';\n\n    if(icon) {\n        var i = document.createElement('i');\n        i.className = icon + ' icon';\n        i.style.marginRight = \"10px\";\n        button.className += ' icon';\n        button.appendChild(i);\n    }\n    if(text !== null) button.innerHTML += text;\n    if(fontSize !== null) button.style.fontSize = fontSize;\n    if(title) button.title = title;\n    if(container) container.appendChild(button);\n\n    return button;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dashi/src/fileinput.js\n// module id = 25\n// module chunks = 0 1","export default function Icon(arg) {\n    var icon = document.createElement('i'),\n        options = arg || {},\n        callback = options.onclick ||false,\n        type = options.type,\n        types = options.types || [],\n        title = options.title || options.type || false;\n\n    if(type) types.push(type);\n    if(title) icon.title = title;\n    icon.className = 'ui icon ' + types.join(' ');\n    if(callback) {\n         icon.onclick = callback;\n         icon.className += ' link';\n    }\n    icon.change = function(i) {\n        icon.className = icon.className.replace(type, d);\n    };\n    return icon;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dashi/src/icon.js\n// module id = 26\n// module chunks = 0 1","export default function List(arg) {\n    var list= document.createElement('div'),\n        options = arg || {},\n        container = options.container || document.body,\n        type = options.type,\n        selectedColor = options.selectedColor || 'black',\n        selectedIcon = options.selectedIcon || '',\n        types = options.types || [];\n\n    if(type) types.push(type);\n    if(container) container.appendChild(list);\n    list.className = 'ui list ' + types.join(' ');\n    var items = [];\n\n    let setSelected = (itemId, selected) => {\n        if (selected == items[itemId]._selected) {\n            return;\n        }\n        if (selected) {\n            items[itemId]._selected = true;\n            items[itemId].className += ' selected';\n            if(items[itemId].hasOwnProperty('icon'))\n                items[itemId].icon.className +=\n                        ' ' + selectedColor + ' ' + selectedIcon;\n            return;\n        }\n        items[itemId]._selected = false;\n        items[itemId].className =\n                items[itemId].className.replace('selected', '');\n        if(items[itemId].hasOwnProperty('icon'))\n            items[itemId].icon.className =\n                    items[itemId].icon.className.replace(\n                        selectedColor + ' ' + selectedIcon, '');\n    };\n\n    list.onselect = options.onselect || function() {};\n    var onSelect = function(itemId) {\n        if (types.indexOf('single') !== -1) {\n            // single selection only\n            list.clearSelected();\n            setSelected(itemId, true);\n        } else {\n            // multiple selection\n            setSelected(itemId, !items[itemId]._selected);\n        }\n        list.onselect.call(items[itemId], itemId);\n    };\n\n    list.append = function(li) {\n        var item = document.createElement('div'),\n            content = document.createElement('div');\n        item.className = 'item';\n        content.className = 'content';\n\n        if(li.hasOwnProperty('icon')) {\n            var icon = document.createElement('i');\n            icon.className = li.icon + ' icon';\n            item.appendChild(icon);\n            item.icon = icon;\n        }\n\n        if(li.hasOwnProperty('img')) {\n            var img = document.createElement('img');\n            img.className ='ui avatar iamge';\n            img.src = li.img;\n            item.appendChild(img);\n        }\n\n        if(li.hasOwnProperty('header')) {\n            var header = document.createElement('div');\n            header.innerHTML = li.header;\n            content.appendChild(header);\n        }\n\n        if(li.hasOwnProperty('text')) {\n            // var text = document.createElement('div');\n            content.innerHTML += li.text;\n            // content.appendChild(text);\n        }\n        item.appendChild(content);\n        var itemId = items.length;\n        item._selected = false;\n        items.push(item);\n        list.appendChild(item);\n\n        if(types.indexOf('selection') !== -1){\n            item.onclick = onSelect.bind(this, itemId);\n        }\n\n        return list;\n    };\n\n    list.setSelectedItemIds = ids => {\n        list.clearSelected();\n        ids.forEach(id => {\n            setSelected(id, true);\n        });\n    };\n\n    list.clearSelected = () => {\n        items.forEach((item, id) => {\n            setSelected(id, false);\n        });\n    };\n\n    list.getSelectedItemIds = function() {\n        return items\n            .map((d, i) => d._selected === true ? i : -1)\n            .filter(id => id >= 0);\n    };\n\n    list.get = function(i) {\n        return items[i];\n    };\n\n    list.select = function(i) {\n        onSelect(i);\n    };\n\n    list.clear = function() {\n        items = [];\n        list.innerHTML = '';\n    };\n\n    list.remove = function(i) {\n        list.removeChild(items[i]);\n        return list;\n    };\n\n    return list;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dashi/src/list.js\n// module id = 27\n// module chunks = 0 1","export default function Layout(arg) {\n    'use strict';\n    var options = arg || {},\n        layoutId = options.id || false,\n        className = options.class || \"\",\n        margin = options.margin || 0,\n        spacing = options.spacing || 5,\n        padding = options.padding || 0,\n        rows = options.rows || [],\n        cols = options.cols || [],\n        divRows = [],\n        divCols = [],\n        container = options.container || document.body;\n\n    if(typeof container == 'string')\n        container = document.getElementById(container);\n\n    if(container == document.body ) {\n        container.style.height = window.innerHeight + 'px';\n        container.style.padding = 0;\n        container.style.margin = 0;\n        container.style.overflow = 'hidden';\n    }\n\n    var setting = {\n        rowHeights: [],\n        colWidths : [],\n    };\n\n    var width = options.width ||  container.clientWidth || window.innerWidth,\n        height = options.height || container.clientHeight|| window.innerHeight;\n\n    width -= margin*2;\n    height -= margin*2;\n\n    var divs = {},\n        cells = [];\n\n\n    function createRow(w, h) {\n        var row = document.createElement('div');\n        row.style.width = w + 'px';\n        row.style.height = h + 'px';\n        row.className = 'davi-row';\n        row.style.overflow = 'hidden';\n        return row;\n    }\n\n    function createColumn(w, h) {\n        var col = document.createElement('div');\n        col.style.display = 'inline-block';\n        col.className = 'davi-col';\n        col.style.verticalAlign = \"top\";\n        col.style.width = w + 'px';\n        col.style.height = h + 'px';\n        col.style.overflow = 'hidden';\n        return col;\n    }\n\n    function createColumns(spec, container, w, h) {\n      var columns = [],\n          widthTotal = w,\n          widthRemaining = widthTotal;\n\n      spec.forEach(function(cs, i){\n          var colWidth = (cs.width > 1) ? cs.width : cs.width * widthTotal;\n          columns[i] = createColumn(colWidth, h);\n          widthRemaining -= colWidth;\n          if(cs.id !== undefined) {\n              columns[i].setAttribute('id', cs.id)\n              divs[cs.id] = columns[i];\n          }\n          container.appendChild(columns[i]);\n          if(cs.rows) columns[i] = createRows(cs.rows, columns[i], w, h);\n\n      });\n\n      return columns;\n    }\n\n    function createRows(spec, container, w, h) {\n        var rows = [],\n            rowWidth = w,\n            heightTotal = h,\n            heightRemaining = heightTotal;\n\n        spec.forEach(function(rs, i){\n            var rowHeight = (rs.height > 1) ? rs.height : rs.height * heightTotal;\n            rows[i] = createRow(rowWidth, rowHeight);\n            heightRemaining -= rowHeight;\n            if(rs.id !== undefined) {\n                rows[i].setAttribute('id', rs.id)\n                divs[rs.id] = rows[i];\n            }\n            container.appendChild(rows[i]);\n            if(rs.cols) rows[i] = createColumns(rs.cols, rows[i], rowWidth, rowHeight);\n\n        });\n\n        return rows;\n    }\n\n    function createLayout(width, height) {\n\n        var layout = document.createElement('div');\n\n        if(layoutId)\n            layout.setAttribute('id', layoutId);\n\n        if(typeof className == 'string')\n            layout.className = className;\n\n        // container.style.overflow = 'hidden';\n        layout.style.height = height + \"px\";\n        layout.style.width = width + \"px\";\n\n        layout.style.margin = margin + 'px';\n        layout.className = 'davi-layout';\n        // layout.style.overflow = 'hidden';\n        // layout.style.padding = '0';\n\n\n        return layout;\n    }\n\n    var layout = createLayout(width, height);\n\n    if(rows.length) cells = createRows(rows, layout, width, height);\n    if(cols.length) cells = createColumns(cols, layout, width, height);\n\n    Object.keys(divs).forEach(function(k){\n        divs[k].append = divs[k].appendChild;\n    })\n\n    layout.cell = function(id, cid) {\n        if(typeof id === 'number')\n            if(typeof cid === 'number' && typeof cells[id][cid] != 'undefined')\n                return cells[id][cid];\n            else\n                return cells[id];\n        else\n            return divs[id];\n    }\n\n\n    layout.get = layout.cell;\n    container.appendChild(layout);\n    // container.onresize = function() {\n    //     var newLayout = createLayout(container.clientWidth, container.clientHeight);\n    //     layout.replaceWith(newLayout);\n    // }\n    return layout;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dashi/src/layout.js\n// module id = 28\n// module chunks = 0 1","export default function Panel(arg) {\n    'use strict';\n    var panel,\n        option = arg || {},\n        container = option.container || document.body,\n        header = option.header || null,\n        title = option.title || \"\",\n        margin = option.margin || 5,\n        style = option.style || {},\n        padding = option.padding || 0,\n        types = option.types || [],\n        classNames = 'panel ui segment',\n        angularJS = option.AngularJS || option.angularJS || false,\n        headerHeight;\n\n    if (container) {\n        container = (typeof(container) == \"string\") ? document.getElementById(container) : container;\n    }\n\n    if (option.id) {\n        panel = document.getElementById(option.id);\n        if (panel === null) {\n            panel = document.createElement(\"div\");\n            panel.setAttribute('id', option.id);\n            container.appendChild(panel);\n        }\n    } else {\n        panel = document.createElement(\"div\");\n        container.appendChild(panel);\n    }\n\n    var fullScreen = false,\n        width = option.width || container.clientWidth,\n        height = option.height || container.clientHeight;\n\n    width -= margin * 2;\n    height -= margin * 2;\n\n    panel.className = \"ui\";\n    panel.style.margin = margin + 'px';\n\n    panel.style.width = width + \"px\";\n    panel.style.height = height + \"px\";\n    // panel.style.boxSizing = 'border-box';\n\n    if (header) {\n        headerHeight = option.header.height || 0.08 * height;\n        if (headerHeight < 1) headerHeight *= height;\n        panel.header = document.createElement('div');\n        panel.header.className = \"ui top attached block header primary\";\n        panel.header.style.backgroundColor = \"#FFFFFF\";\n        panel.header.style.height = headerHeight + \"px\";\n        panel.header.style.width = width + \"px\";\n        panel.header.style.fontSize = headerHeight * 0.36 + 'px';\n\n        if (option.header.hasOwnProperty('style')) {\n            Object.keys(option.header.style).forEach(function(s) {\n                panel.header.style[s] = option.header.style[s];\n            });\n        }\n        panel.header.style.padding = 0;\n        panel.header.style.paddingLeft = panel.header.style.fontSize;\n\n        var panelTitle = document.createElement('span');\n        panelTitle.innerHTML = title;\n        panelTitle.style.float = 'left';\n        panelTitle.style.marginTop = (headerHeight * 0.25) + 'px';\n\n        panel.header.appendChild(panelTitle);\n        panel.appendChild(panel.header);\n        Object.defineProperty(panel, \"title\", {\n            get: function() {\n                return title;\n            },\n            set: function(title) {\n                panelTitle.innerHTML = title;\n            }\n        });\n        classNames += ' bottom attached';\n\n        if (Array.isArray(option.header.controls)) {\n            option.header.controls.forEach(function(ctrl) {\n                panel.header.appendChild(ctrl);\n            })\n        }\n\n        var controls = document.createElement('div');\n        controls.style.float = 'right';\n        controls.style.marginTop = (headerHeight * 0.25) + 'px';\n        controls.style.marginRight = panel.header.style.fontSize;\n        panel.header.appendChild(controls)\n\n\n        panel.header.append = function(elem) {\n            if (typeof elem == 'string')\n                controls.innerHTML += elem;\n            else\n                controls.appendChild(elem);\n            return panel;\n        };\n\n    } else {\n        headerHeight = 0;\n    }\n\n    panel.body = document.createElement(\"div\");\n    panel.body.className = classNames + ' panel-body ' + types.join(' ');\n    panel.body.style.width = width + \"px\";\n    panel.body.style.height = height - headerHeight + \"px\";\n    panel.body.style.padding = padding + 'px';\n    if (option.hasOwnProperty('style')) {\n\n        Object.keys(option.style).forEach(function(s) {\n            panel.body.style[s] = option.style[s];\n        });\n    }\n\n    panel.appendChild(panel.body);\n\n    if(option.id)\n        panel.body.setAttribute('id', option.id+\"-body\");\n    panel.innerWidth = width - padding * 2;\n    panel.innerHeight = height - headerHeight - padding * 2;\n\n    if (angularJS && angularJS.hasOwnProperty('ng-controller')) {\n        panel.setAttribute('ng-controller', angularJS['ng-controller']);\n        panel.body.setAttribute(angularJS['view'], '');\n        panel.body.setAttribute('id', angularJS['id'])\n    }\n\n    panel.showLoading = function() {\n        if((' ' + panel.body.className + ' ').indexOf(' loading ') === -1)\n            panel.body.className += ' loading';\n    };\n\n    panel.hideLoading = function() {\n        panel.body.className = panel.body.className.replace(/\\bloading\\b/, '');\n    };\n\n    panel.toggleLoading = function() {\n        if((' ' + panel.body.className + ' ').indexOf(' loading ') === -1)\n            panel.body.className += ' loading';\n        else\n            panel.hideLoading();\n    };\n\n    panel.append = function(child) {\n        if (typeof child == 'string')\n            panel.body.innerHTML += child;\n        else\n            panel.body.appendChild(child);\n        return panel;\n    };\n\n    panel.clear = function() {\n        panel.body.innerHTML = \"\";\n    };\n\n    panel.update = function(domArray) {\n        panel.clear();\n        panel.body.appendChild(domArray);\n    };\n\n\n    panel.toggleFullScreen = function() {\n        if (!fullScreen) {\n            panel.style.position = 'fixed';\n            panel.style.top = '1px';\n            panel.style.left = '1px';\n            panel.style.zIndex = 9999;\n            panel.resize(document.body.clientWidth, document.body.clientHeight);\n        } else {\n            panel.style.position = 'relative';\n            panel.style.zIndex = 0;\n            panel.resize(container.clientWidth - margin * 2, container.clientHeight - margin * 2);\n        }\n\n        fullScreen = !fullScreen;\n\n    }\n\n    panel.resize = function(w, h) {\n        if (typeof w == 'undefined' || typeof h == 'undefined') {\n            width = container.clientWidth;\n            height = container.clientHeight;\n        } else {\n            width = w;\n            height = h;\n        }\n\n        panel.style.width = width + \"px\";\n        panel.style.height = height + \"px\";\n        panel.body.style.width = width + \"px\";\n        panel.body.style.height = height - headerHeight + \"px\";\n        if (header) {\n            panel.header.style.height = headerHeight + \"px\";\n            panel.header.style.width = width + \"px\";\n        }\n    }\n\n\n    return panel;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dashi/src/panel.js\n// module id = 29\n// module chunks = 0 1","export default function Progress(arg) {\n    var div = document.createElement('div'),\n        bar = document.createElement('div'),\n        progress = document.createElement('div'),\n        label = document.createElement('div'),\n        options = arg || {},\n        container = options.container || null,\n        percent = options.percentage || 0,\n        type = options.type,\n        text = options.text || '',\n        types = options.types || [];\n\n    if(type) types.push(type);\n    div.className = 'ui progress ' + types.join(' ');\n\n    progress.className = 'progress';\n    bar.className = 'bar';\n    label.className = 'label';\n\n\n    label.innerHTML = text;\n    bar.appendChild(progress);\n    div.appendChild(bar);\n    div.appendChild(label);\n    if(container) container.appendChild(div);\n\n    var jquery = window.jQuery || window.$;\n\n    Object.defineProperty(div, 'percent', {\n        set: function(f) {\n            percent = f;\n            setPercentage(percent);\n            return div;\n        }\n    });\n\n    function setPercentage() {\n        if(typeof jquery == 'function') {\n            jquery(div).progress({percent: percent});\n        }\n    }\n\n    setPercentage(percent);\n\n    div.hide = function() {\n        div.style.display = 'none';\n    };\n\n    div.show = function() {\n        div.style.display = 'block';\n    };\n\n    div.label = function(text) {\n        label.innerHTML = text;\n    };\n\n    return div;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dashi/src/progress.js\n// module id = 30\n// module chunks = 0 1","export default function Radios(arg) {\n    var radios = document.createElement('div'),\n        options = arg || {},\n        container = options.container || document.body,\n        data = options.data || [],\n        name = options.name || options.variable || \"\",\n        field = options.field || 'inline',\n        callback = options.onchange || function() {},\n        text = options.text || options.label || null,\n        icon = options.icon || false,\n        title = options.title || false,\n        type = options.type,\n        checked = options.checked || null,\n        types = options.types || [];\n\n    var choice = null;\n\n    if(type) types.push(type);\n    var wrapper = document.createElement('div'),\n        label = document.createElement('label');\n\n    wrapper.className = 'ui form';\n    radios.className = field + ' fields';\n    label.innerHTML = text;\n    radios.appendChild(label);\n\n    data.forEach(function(d){\n        var box = document.createElement('div'),\n            field = document.createElement('div'),\n            label = document.createElement('label'),\n            input = document.createElement('input');\n\n        field.className = 'field';\n        box.className = 'ui radio checkbox';\n        label.innerHTML = d;\n        input.setAttribute('type', 'radio');\n        input.setAttribute('name', 'test');\n        input.setAttribute('value', d);\n        input.setAttribute('tabindex', '0');\n        if(checked == d) input.setAttribute('checked', 'checked');\n        input.className = 'hidden';\n        input.onchange = function() {\n             callback(this.value);\n        };\n\n        box.appendChild(label);\n        box.appendChild(input);\n        field.appendChild(box)\n        radios.appendChild(field);\n    });\n\n    wrapper.appendChild(radios);\n\n    if(container) container.appendChild(wrapper);\n\n    var jquery = window.jQuery || jQuery || $;\n    if(typeof jquery !== 'undefined') {\n        jquery('.ui.radio.checkbox').checkbox();\n    }\n\n    Object.defineProperty(wrapper, 'onchange', {\n        set: function(f) { callback = f; return radios; }\n    });\n\n    return wrapper;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dashi/src/radios.js\n// module id = 31\n// module chunks = 0 1","export default function Table(arg) {\n    var table = document.createElement('table'),\n        options = arg || {},\n        container = options.container || document.body,\n        rows = options.rows || false,\n        columns = options.columns || options.cols || false,\n        type = options.type,\n        width = options.width || container.clientWidth * 0.9,\n        types = options.types || [];\n\n    if(type) types.push(type);\n    if(container) container.appendChild(table);\n    table.className = 'ui table ' + types.join(' ');\n    table.style.margin = '5px auto';\n    table.style.width = width + 'px';\n    var tableHead = document.createElement('thead'),\n        tableBody = document.createElement('tbody'),\n        tr = document.createElement('tr');\n    tableHead.appendChild(tr);\n    if(columns) {\n        columns.forEach(function(col){\n            var c = document.createElement('th');\n            c.innerHTML = col;\n            tr.appendChild(c);\n        });\n    }\n    table.appendChild(tableHead);\n    table.appendChild(tableBody);\n\n    table.addRow = function(_row) {\n        var row = (Array.isArray(_row)) ? _row : [_row];\n\n        var tr = document.createElement('tr');\n        row.forEach(function(col){\n            var td = document.createElement('td');\n            if(col instanceof HTMLElement)\n                td.appendChild(col);\n            else\n                td.innerHTML = col;\n            tr.appendChild(td);\n        });\n        tableBody.appendChild(tr);\n        return tr;\n    }\n\n    table.updateCell = function(row, col, html) {\n        var tr = tableBody.childNodes[row];\n        var td = tr.childNodes[col];\n        td.innerHTML = html;\n        return td;\n    }\n\n    if (options.hasOwnProperty('style')) {\n        Object.keys(options.style).forEach(function(s) {\n            table.style[s] = options.style[s];\n        });\n    }\n\n    table.tbody = tableBody;\n\n    return table;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dashi/src/table.js\n// module id = 32\n// module chunks = 0 1","import app from './src/main.js';\napp();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 33\n// module chunks = 0 1","import dataManagement from \"./datamgmt\";\nimport stats from \"./stats/app\";\n// import network from \"./network/app\";\n\nexport default function App() {\n    let pageHeaderHeight = $('#page-header').height() + 20;\n\n    $(\"#page-network, #page-stats, #page-tseries\")\n    .css({\n        height: $(\"body\").height() - pageHeaderHeight,\n        'margin-top': pageHeaderHeight + 'px'\n    });\n\n    $('.ui.large.modal')\n        .modal('observeChanges', true).modal('hide');\n\n    $('#page-network').transition('fade down');\n    $('#page-tseries').transition('fade down');\n\n    $('.ui.sidebar')\n        .sidebar({\n            transition: 'overlay',\n            dimPage: false,\n            closable: true\n        });\n\n    $('.data-button').click(function(){\n        $('.ui.large.modal').modal('show');\n    })\n\n    $(\".page-menu > a.item\").click(function(){\n        $(\".page-menu > a.item.active\").each(function(menuID,i){\n            $(this).removeClass('active');\n            $(this.getAttribute('href')).transition('fade down');\n        })\n        var mode = this.getAttribute('href').slice(1);\n\n        $(this).addClass('active');\n        $(this.getAttribute('href')).transition('fade down');\n\n    });\n\n    let boards = {};\n\n    boards.stats = stats({\n        container: 'page-stats',\n    });\n\n    // boards.network = network({\n    //     container: 'page-network',\n    //     onupdate: function(spec) {\n\n    //     }\n    // });\n\n    // boards.tseries = timeseries({\n    //     container: 'page-tseries'\n    // })\n\n    dataManagement({\n        container: 'data-list',\n        onselect: function(data, metadata) {\n            console.log(data)\n            boards.stats.update(data);\n            // boards.network.update(data);\n            // var visSpec = boards.network.getSpec();\n            // boards.network.onUpdate = function(d) {\n            //     console.log(d);\n            //     boards.tseries.update(d, data, metadata);\n            // }\n            // boards.tseries.update(visSpec, data, metadata);\n            $('.ui.large.modal').modal('toggle');\n        },\n        oncancel: function(d) {\n            $('.ui.large.modal').modal('toggle');\n        }\n    });\n    // $('.ui.dropdown').dropdown();\n    // $('.ui.checkbox').checkbox();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.js\n// module id = 34\n// module chunks = 0 1","import loadData from './loadData';\nimport {Layout, Panel, Button, Table, List} from 'dashi';\nimport datasets from '../data/datasets.js';\n\nlet selectedDatasetId = 2;\n\nexport default function dataManagement(arg) {\n    var dataManager = {},\n        options = arg || {},\n        container = options.container,\n        oncancel = options.oncancel || function(){},\n        onselect = options.onselect || function(){};\n\n    dataManager.onselect = onselect;\n    dataManager.data = datasets[Object.keys(datasets)[0]];\n\n    var dataPanel = new Panel({\n        container: document.getElementById(container),\n        padding: 20,\n        margin: 20,\n        id: \"panel-datalist\",\n        title: \"Dataset\",\n        style: {\n            border: 'none',\n            height: 'auto'\n        },\n        header: {height: 0.075, style: {backgroundColor: '#FFF', border: 'none'}}\n    });\n\n\n    // var dataList = new List({\n    //     container: dataPanel.body,\n    //     types: ['selection', 'single', 'divided'],\n    //     selectedColor: 'blue',\n    //     onselect: function(d) {\n    //         selectedDatasetId = d;\n    //         // selectedDataset = d;\n    //         // var ds = datasets[selectedDataset];\n    //         // transform(ds).then(function(d){\n    //         //     data = d;\n    //         //     var newSpec = JSON.parse(editor.getValue());\n    //         //     views.network.clear();\n    //         //     circularVis(config, newSpec, data);\n    //         // });\n    //     }\n    // })\n    // datasets.forEach(function(ds){\n    //     dataList.append({\n    //         header: ds.tag,\n    //         icon: 'cloud download big',\n    //         text: ds.groups + ' groups, ' + ds.routers + ' routers, ' + ds.terminals + ' terminals'\n    //     })\n    // })\n    //\n\n    var dataList = new Table({\n        container: dataPanel.body,\n        width: dataPanel.innerWidth,\n        cols: ['Dataset ID', 'Topology Model', '#Groups', '#Routers', \"#Terminals\", 'Description', 'Action']\n    });\n\n    datasets.forEach(function(ds, di){\n        dataList.addRow([di, ds.topology, ds.groups, ds.routers, ds.terminals, ds.tag, new Button({\n            label: 'Select',\n            types: ['primary'],\n            onclick: update.bind(null, di)})]);\n    })\n\n    // dataList.setSelectedItemIds([selectedDatasetId]);\n\n    function update(dsID) {\n\n        loadData(datasets[dsID])\n        .then(function(data) {\n            dataManager.data = data;\n            dataManager.onselect(data, datasets[dsID]);\n        });\n    }\n\n    // dataPanel.append(new Button({\n    //     label: 'Select',\n    //     types: ['primary'],\n    //     onclick: function() {\n    //         update();\n    //     }\n    // }));\n\n    var actionDiv = document.createElement('div');\n    actionDiv.className = \"actions\";\n\n    var fileUploadButton = new Button({\n        label: ' Open Files ',\n        types: ['primary', 'center'],\n        icon: 'folder open',\n        fileInput: {id: 'testFileUpload', onchange:function() {}}\n    });\n\n    actionDiv.append(fileUploadButton);\n\n    actionDiv.append(new Button({\n        label: 'Cancel',\n        types: ['orange'],\n        onclick: oncancel\n    }))\n    dataPanel.append(actionDiv);\n\n\n    update(0);\n\n    return dataManager;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/datamgmt.js\n// module id = 35\n// module chunks = 0 1","import allocate  from './allocate';\nimport output    from './output';\nimport initialize    from './initialize';\nimport compile   from './compile';\nimport optDerive from './derive';\nimport interact  from './interact';\n\nexport default function pipeline(options) {\n    var $p = initialize(options);\n    $p.views = [];\n    $p.interactions = [];\n    \n    $p.visualization = null;\n    $p.deriveMax = options.deriveMax || 4;\n    $p._responseType = 'unselected';\n    $p._update = false;\n\n    $p.getResult = function() {};\n\n    var pipeline = {},\n        registers = {},\n        profiles  = [],\n        operation = {},\n        response = {},\n        optID = 0;\n\n    function addToPipeline(opt, arg) {\n        if( !$p._update) {\n            var spec = {};\n            spec[opt] = arg;\n            $p.pipeline.push(spec);\n            return optID++;\n        } else {\n            return -1;\n        }\n    }\n\n    pipeline.ctx = $p.ctx;\n\n    pipeline.data = function(dataOptions) {\n        allocate($p, dataOptions);\n        operation = compile($p);\n        if(!$p.hasOwnProperty('fieldDomains')) {\n            var dd = operation.extent($p.fields.map((f, i) => i), $p.dataDimension);\n            $p.uniform.uFieldDomains.data = $p.fieldDomains;\n        }\n        $p.opt = operation;\n        pipeline.register('__init__');\n        return pipeline;\n    }\n\n    pipeline.view = function(views) {\n        $p.views.forEach(function(v){\n            if(v.hasOwnProperty('chart')) {\n                v.chart.svg.remove();\n                delete v.chart;\n            }\n            if(!v.hasOwnProperty('padding')) {\n                v.padding = {left: 30, right: 30, top: 30, bottom: 30};\n            }\n        })\n        $p.views = views;\n        return pipeline;\n    }\n\n    pipeline.register = function(tag) {\n        registers[tag] = {\n            indexes: $p.indexes,\n            dataSize: $p.dataSize,\n            fields: $p.fields,\n            dataDim: $p.uniform.uDataDim.data.slice(),\n            fieldWidths: $p.fieldWidths.slice(),\n            fieldDomains: $p.fieldDomains.slice(),\n            deriveCount: $p.deriveCount,\n            filterFlag: $p.uniform.uFilterFlag.data,\n            filterControls: $p.uniform.uFilterControls.data.slice(),\n            dataInput: $p.uniform.uDataInput.data,\n            attribute: {\n                aDataIdx: {\n                    ids: $p.attribute.aDataIdx.data,\n                    value: $p.attribute.aDataValx.data\n                },\n                aDataIdy: {\n                    ids: $p.attribute.aDataIdy.data,\n                    value: $p.attribute.aDataValy.data\n                },\n                aDataFieldId: $p.attribute.aDataFieldId.data,\n                aDataItemId: $p.attribute.aDataItemId.data\n            }\n        }\n        return pipeline;\n    }\n\n    pipeline.resume = function(tag) {\n        addToPipeline('resume', tag);\n        if (!registers.hasOwnProperty(tag))\n            throw new Error('\"' + tag + '\" is not found in regesters.');\n\n        var reg = registers[tag];\n        //resume CPU registers\n        $p.indexes = reg.indexes;\n        $p.dataSize = reg.dataSize;\n        $p.deriveCount = reg.deriveCount;\n        $p.fieldCount = reg.fields.length - reg.indexes.length - reg.deriveCount;\n        $p.fields = reg.fields.slice();\n        $p.fieldWidths = reg.fieldWidths.slice();\n        $p.fieldDomains = reg.fieldDomains.slice();\n        $p.dataDimension = reg.dataDim.slice();\n\n        //resume GPU Uniforms\n        $p.uniform.uFieldCount.data = $p.fieldCount;\n        $p.uniform.uDataSize.data = $p.dataSize;\n        $p.uniform.uDataDim.data = reg.dataDim;\n        $p.uniform.uIndexCount.data = reg.indexes.length;\n        $p.uniform.uFieldDomains.data = reg.fieldDomains;\n        $p.uniform.uFieldWidths.data = reg.fieldWidths;\n        $p.uniform.uFilterFlag.data = reg.filterFlag;\n        // $p.uniform.uFilterControls.data = reg.filterControls;\n        $p.uniform.uDataInput.data = reg.dataInput;\n\n        //resume GPU Attribute Buffers\n        $p.attribute['aDataIdx'] = reg.attribute['aDataIdx'].ids;\n        $p.attribute['aDataIdy'] = reg.attribute['aDataIdy'].ids;\n        $p.attribute['aDataValx'] = reg.attribute['aDataIdx'].value;\n        $p.attribute['aDataValy'] = reg.attribute['aDataIdy'].value;\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataIdx'].location, 0);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataIdy'].location, 1);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataValx'].location, 0);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataValy'].location, 1);\n\n        $p.attribute['aDataFieldId'] = reg.attribute['aDataFieldId'];\n        $p.attribute['aDataItemId'] = reg.attribute['aDataItemId'];\n\n        return pipeline;\n    }\n\n    pipeline.bin = function (spec) {\n        var deriveSpec = {},\n            binAttr,\n            binCount;\n\n        if (typeof spec == 'object') {\n            binAttr = Object.keys(spec)[0];\n            binCount = spec[binAttr];\n        } else {\n            binAttr = spec;\n            //Apply Sturges' formula for determining the number of bins\n            binCount = Math.ceil(Math.log2($p.dataSize)) + 1;\n        }\n\n        var binDomain = $p.fieldDomains[$p.fields.indexOf(binAttr)];\n        var binInterval = (binDomain[1] - binDomain[0]) / binCount;\n\n        var histFunction = (function() {max(ceil((binAttr - binMin) / float(binInterval)), 1.0) })\n            .toString()\n            .slice(13, -1) // remove \"function () {\" from function.toString\n            .replace('binAttr', binAttr)\n            .replace('binMin', binDomain[0] + '.0')\n            .replace('binInterval', binInterval)\n\n        deriveSpec['bin@'+binAttr] = histFunction;\n        $p.intervals[binAttr] = {};\n        $p.intervals[binAttr].dtype = 'historgram';\n        $p.intervals[binAttr].interval = binInterval;\n        $p.intervals[binAttr].min = binDomain[0];\n        $p.intervals[binAttr].max = binDomain[1];\n        $p.intervals[binAttr].align = 'right';\n        pipeline.derive(deriveSpec);\n        // var deriveFields = $p.fields.slice(-$p.deriveCount),\n        //     dfid = deriveFields.indexOf('bin@'+binAttr);\n        // $p.deriveDomains[dfid] = [stats[binAttr].min, stats[binAttr].max];\n        return 'bin@'+binAttr;\n    }\n\n    pipeline.aggregate = function(spec) {\n        if(spec.$bin) {\n            spec.$group = pipeline.bin(spec.$bin);\n            delete spec.$bin;\n        }\n\n        addToPipeline('aggregate', spec);\n        if(Object.keys($p.crossfilters).length)\n            $p.uniform.uFilterFlag = 1;\n\n        operation.aggregate.execute(spec);\n        // console.log(JSON.stringify(pipeline.result('row')));\n        return pipeline;\n    }\n\n    pipeline.filter = function(spec) {\n        addToPipeline('filter', spec);\n        operation.match.execute(spec);\n        $p.getResult = operation.match.result;\n        return pipeline;\n    }\n\n    pipeline.match = pipeline.filter;\n\n    pipeline.derive = function(spec) {\n        addToPipeline('derive', spec);\n\n        //TODO: support JS function as expression for deriving new variable\n        //.replace(/function\\s*[\\w|\\d]+\\s*\\((.+)\\)/g, \"$1\")\n        // if (!opt.hasOwnProperty('derive')) {\n            operation.derive = optDerive($p, spec);\n        // }\n        operation.derive.execute(spec);\n        $p.getResult = operation.derive.result;\n        return pipeline;\n    }\n\n    pipeline.cache = function(tag) {\n        operation.cache.execute(tag);\n        return pipeline;\n    }\n\n    pipeline.clear = function() {\n        console.log($p.visLayers);\n    }\n\n    pipeline.read = function() {\n        console.log(\"Read>>\", $p.getResult());\n        return pipeline;\n    }\n\n    pipeline.result = output($p);\n\n    pipeline.output = function(callback) {\n        addToPipeline('output', callback);\n        callback(pipeline.result('row'));\n        return pipeline;\n    }\n\n    var branchID = 0;\n    pipeline.branch = function(branches) {\n        pipeline.register('_branch'+branchID);\n        branches.forEach(function(b){\n            var operations = Object.keys(b).map(function(o) {\n                var obj = {};\n                obj[o] = b[o];\n                return obj;\n            });\n            pipeline.run(operations);\n            pipeline.resume('_branch' + branchID);\n        })\n        branchID++;\n    }\n\n    $p.readResult = pipeline.result;\n\n    pipeline.getResult = function (d) {\n        return $p.getResult(d);\n    }\n\n    pipeline.readPixels = function(arg) {\n        var options = arg || {},\n            offset = options.offset || [0, 0],\n            resultSize = options.size || $p.dataDimension[0]* $p.dataDimension[1],\n            rowSize = Math.min(resultSize, $p.dataDimension[0]),\n            colSize = Math.ceil(resultSize/$p.dataDimension[0]);\n\n        $p.bindFramebuffer(null);\n        var gl = $p.ctx,\n            result = new Uint8Array(rowSize * colSize * 4);\n\n        gl.readPixels(offset[0], offset[1], rowSize, colSize, gl.RGBA, gl.UNSIGNED_BYTE, result);\n        return result.filter(function(d, i){ return i%4===3;} );\n    }\n\n    pipeline.clearViews = function() {\n        $p.bindFramebuffer(\"offScreenFBO\");\n        $p.ctx.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        $p.ctx.clear( $p.ctx.COLOR_BUFFER_BIT | $p.ctx.DEPTH_BUFFER_BIT );\n        $p.bindFramebuffer(\"visStats\");\n        $p.ctx.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        $p.ctx.clear( $p.ctx.COLOR_BUFFER_BIT | $p.ctx.DEPTH_BUFFER_BIT );\n        $p.bindFramebuffer(null);\n        $p.ctx.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        $p.ctx.clear( $p.ctx.COLOR_BUFFER_BIT | $p.ctx.DEPTH_BUFFER_BIT );\n    }\n\n    pipeline.runSpec = function(specs) {\n        pipeline.head();\n        pipeline.clearViews();\n        $p.interactions = [];\n        response = {};\n        $p.pipeline = [];\n        $p.crossfilters = [];\n        $p.uniform.uFilterFlag.data = 0;\n        // $p.uniform.uFilterRanges = $p.fieldDomains.concat($p.deriveDomains);\n        specs.forEach(function(spec){\n            var opt = Object.keys(spec)[0],\n                arg = spec[opt];\n\n            opt = opt.slice(1);\n            if(typeof pipeline[opt] == 'function') {\n                pipeline[opt](arg);\n            }\n        })\n    }\n\n    pipeline.head = function() {\n        pipeline.resume('__init__');\n        return pipeline;\n    }\n\n    pipeline.run = function(opts) {\n        var operations = opts || $p.pipeline;\n        operations.forEach(function(p, i){\n            var opt = Object.keys(p)[0];\n            pipeline[opt](p[opt]);\n        })\n\n        return pipeline;\n    }\n\n    pipeline.visualize = function(vmap) {\n        var optID = addToPipeline('visualize', vmap);\n        var viewIndex = 0,\n            filters = {};\n        if(typeof vmap.id == 'string') {\n            viewIndex = $p.views.map(d=>d.id).indexOf(vmap.id);\n            if(viewIndex == -1) {\n                //find the next available view slot in all views\n                for(var vi = 0; vi < $p.views.length; vi++){\n                    if(!$p.views[vi].id) {\n                        viewIndex = vi;\n                        $p.views[viewIndex].id = vmap.id;\n                        break;\n                    }\n                }\n            }\n        }\n        if(vmap.mark == 'bar') vmap.zero = true;\n        $p.views[viewIndex].vmap = vmap;\n        var encoding = vmap,\n            viewTag = $p.views[viewIndex].id;\n\n        if($p._update && response.hasOwnProperty(viewTag)) {\n            if(response[viewTag].hasOwnProperty($p._responseType)) {\n                encoding = Object.assign({}, vmap, response[viewTag][$p._responseType]);\n            }\n        }\n        if(encoding.opacity != 0){\n            operation.visualize({\n                vmap: encoding,\n                viewIndex: viewIndex\n            });\n            pipeline.interact();\n\n        }\n        return pipeline;\n    }\n\n    pipeline.interact = function(spec) {\n        if(typeof(spec) != 'undefined') $p.interactions.push(spec);\n        $p.interactions.forEach(function(interaction){\n            interact($p, {\n                actions: interaction.event,\n                view: interaction.from,\n                condition: interaction.condition,\n                callback: function(selection) {\n                    response = interaction.response;\n                    if(!$p._update) {\n                        $p._update = true;\n                        $p.crossfilters = {};\n                        if(typeof selection == 'object') {\n                            Object.keys(selection).forEach(function(k) {\n                                if(selection[k].length < 2) {\n                                    if($p.intervals.hasOwnProperty(k)) {\n                                        var value = (Array.isArray(selection[k]))\n                                            ? selection[k][0]\n                                            : selection[k];\n                                        selection[k] = [value-$p.intervals[k].interval, value];\n                                    } else if(!$p.categoryLookup.hasOwnProperty(k)) {\n                                        selection[k] = [selection[k][0] + selection[k][0] + 1];\n                                    }\n                                }\n                                $p.crossfilters[k] = selection[k];\n                            });\n                        }\n                        $p._responseType = 'unselected';\n                        $p.uniform.uFilterLevel.data = 0.2;\n                        $p.uniform.uVisLevel.data = 0.1;\n                        pipeline.head().run();\n                        $p._responseType = 'selected';\n                        $p.uniform.uVisLevel.data = 0.2;\n                        pipeline.head().filter({}).run();\n                        $p._responseType = 'unselected';\n                        $p._update = false;\n                        $p.uniform.uFilterLevel.data = 0.1;\n                        $p.uniform.uVisLevel.data = 0.1;\n                    }\n                }\n            })\n        })\n    }\n\n    pipeline.exportImage = function(beforeExport) {\n        var beforeExport = beforeExport || function() { pipeline.head().run() };\n        if(typeof operation.visualize.chart.exportImage === 'function') {\n            return operation.visualize.chart.exportImage(beforeExport);\n        } else {\n            return pipeline;\n        }\n    }\n\n    if(options.hasOwnProperty('data')) {\n        pipeline.data(options.data);\n    }\n\n    return pipeline;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/pipeline.js\n// module id = 36\n// module chunks = 0 1","import {seqFloat} from './utils';\nconst vecId = ['x', 'y', 'z'];\nexport default function($p, dataProps) {\n    var data = dataProps || [];\n\n    $p.indexes = data.indexes || [];\n    $p.categoryIndex = data.strHashes || {};\n    $p.categoryLookup = data.strLists || {};\n    $p.dkeys =  data.keys || [];\n    $p.dtypes =  data.dtypes || data.types || [];\n    $p.intervals =  data.intervals || {};\n    $p.cachedResult = [];\n    $p.pipeline = [];\n    $p.crossfilters = {};\n    $p.deriveCount = 0;\n    $p.resultDimension = [1, 1];\n    $p.dataSize = 0;\n\n    var dkeys = $p.dkeys,\n        dtypes = $p.dtypes,\n        stats =  data.stats || null;\n\n    if (data.hasOwnProperty(\"size\"))\n        $p.dataSize = data.size;\n    else if (Array.isArray(data))\n        $p.dataSize = Math.max.apply(null, data.map(function(d) {\n            return d.length;\n        }));\n\n    var rowSize = Math.min($p.dataSize, 8192),\n        colSize = Math.ceil($p.dataSize / rowSize);\n\n    $p.dataDimension = [rowSize, colSize];\n\n    $p.fields = $p.indexes.concat(dkeys.filter(function(k) {\n        return $p.indexes.indexOf(k) === -1;\n    }));\n    $p.fieldWidths = new Array($p.fields.length).concat(new Array($p.deriveMax).fill(1));\n    $p.fieldCount = $p.fields.length - $p.indexes.length;\n\n\n    function getDataWidth(fid, range) {\n        var range = Math.abs(range[1] - range[0]);\n        if (dtypes[fid] == \"index\" || dtypes[fid] == \"int\" || dtypes[fid] == \"string\") {\n            return range + 1;\n        } else if (dtypes[fid] == \"histogram\") {\n            return range;\n        } else if (dtypes[fid] == \"time\") {\n            var interval = stats[$p.fields[fid]].min;\n            if (interval === 0) interval = (data[fid][1] - data[fid][0]) || 1;\n            $p.intervals[dkeys[fid]] = {};\n            $p.intervals[dkeys[fid]].dtype = 'time';\n            $p.intervals[dkeys[fid]].interval = interval;\n            $p.intervals[dkeys[fid]].min = stats[dkeys[fid]].min;\n            $p.intervals[dkeys[fid]].max = stats[dkeys[fid]].max;\n            return range / interval + 1;\n        } else if ([\"nominal\", \"ordinal\", \"categorical\"].indexOf(dtypes[fid]) > -1) {\n            return data.TLB.length;\n        } else if (dtypes[fid] in [\"float\", \"double\", \"numeric\"]) {\n            return 10;\n        } else {\n            return range+1;\n        }\n    }\n    $p.fields.forEach(function(field) {\n        var min = stats[field].min,\n            max = stats[field].max,\n            fi = dkeys.indexOf(field);\n        $p.fieldWidths[fi] = getDataWidth(fi, [min, max]);\n    });\n    $p.getDataWidth = getDataWidth;\n    $p.deriveDomains = new Array($p.deriveMax).fill([0, 1]);\n    $p.deriveWidths = new Array($p.deriveMax).fill(1);\n    $p.deriveFieldCount = 0;\n\n    if ($p.indexes.length === 0) {\n        $p.attribute(\"aDataIdx\", \"float\", seqFloat(0, $p.dataDimension[0] - 1));\n        $p.attribute(\"aDataIdy\", \"float\", seqFloat(0, $p.dataDimension[1] - 1));\n        $p.attribute(\"aDataValx\", \"float\", seqFloat(0, $p.dataDimension[0] - 1));\n        $p.attribute(\"aDataValy\", \"float\", seqFloat(0, $p.dataDimension[1] - 1));\n    } else {\n\n        $p.indexes.forEach(function(id, i) {\n            var indexAttrData = arrays.unique(data[id]).sort(function(a, b) {\n                return a - b;\n            });\n            $p.attribute(\"aDataVal\" + vecId[i], \"float\", new Float32Array(indexAttrData));\n            $p.attribute(\"aDataId\" + vecId[i], \"float\", seqFloat(0, indexAttrData.length - 1));\n            $p.fieldWidths[i] = indexAttrData.length;\n            $p.dataDimension[i] = indexAttrData.length;\n        });\n    }\n\n    $p.attribute(\"aDataItemVal0\", \"float\", null);\n    $p.attribute(\"aDataItemVal1\", \"float\", null);\n    $p.attribute(\"aDataItemId\", \"float\", new Float32Array($p.dataSize).map((d,i)=>i));\n    $p.attribute(\"aDataFieldId\", \"vec2\", new Float32Array($p.fields.length * 2).map((d,i)=>i));\n    $p.attribute(\"aVertexId\", \"float\", [0, 1, 2, 3, 4, 5]);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aVertexId.location, 0);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataFieldId.location, 0);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemId.location, 1);\n\n    $p.attribute(\"_square\", \"vec2\", new Float32Array([-1.0, -1.0,\n        1.0, -1.0, -1.0, 1.0, -1.0, 1.0,\n        1.0, -1.0,\n        1.0, 1.0\n    ]));\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute._square.location, 1);\n\n    //setup all attribute, uniform, texture, varying needed by all the shaders\n    $p.uniform(\"uDataSize\",    \"float\", $p.dataSize);\n    $p.uniform(\"uDataDim\",     \"vec2\",  $p.dataDimension);\n    $p.uniform(\"uResultDim\",   \"vec2\",  $p.dataDimension);\n    $p.uniform(\"uIndexCount\",  \"int\",   $p.indexes.length);\n    $p.uniform(\"uFieldWidths\", \"float\", $p.fieldWidths);\n    $p.uniform(\"uFieldCount\",  \"int\",   $p.fieldCount);\n    $p.uniform(\"uFieldId\",     \"int\",   0);\n    $p.uniform(\"uFilterFlag\",  \"int\",   0);\n    $p.uniform(\"uGroupFields\", \"int\",   [0, -1]);\n    $p.uniform(\"uDataInput\",   \"sampler2D\");\n    $p.uniform(\"uDeriveCount\", \"int\", $p.deriveMax);\n    // $p.uniform(\"uDeriveDomains\", \"vec2\", $p.deriveDomains);\n    // $p.uniform(\"uDeriveWidths\", \"float\", $p.deriveWidths);\n\n    $p.uniform(\"uFilterLevel\", \"float\", 0.1)\n    $p.uniform('uVisLevel',    \"float\", 0.1)\n\n    $p.varying(\"vResult\", \"float\");\n    $p.varying(\"vDiscardData\", \"float\");\n    $p.texture(\n        \"tData\",\n        \"float\",\n        new Float32Array($p.dataDimension[0] * $p.dataDimension[1] * $p.fieldCount), [$p.dataDimension[0], $p.dataDimension[1] * $p.fieldCount],\n        \"alpha\"\n    );\n    $p.framebuffer(\"fFilterResults\", \"unsigned_byte\", $p.dataDimension);\n    $p.framebuffer(\"fGroupResults\", \"float\", [1024, 1]);\n    $p.framebuffer(\"fDerivedValues\", \"float\", [$p.dataDimension[0], $p.dataDimension[1] * $p.deriveMax]);\n\n    $p.parameter({\n        fieldCount: $p.fields.length - $p.indexes.length,\n        indexCount: $p.indexes.length\n    });\n\n    $p.fields.slice($p.indexes.length).forEach(function(attr, ai) {\n        var buf = new Float32Array($p.dataDimension[0] * $p.dataDimension[1]);\n        for (var i = 0, l = data[attr].length; i < l; i++) {\n            buf[i] = data[attr][i];\n        }\n        $p.texture.tData.update(\n            buf, [0, $p.dataDimension[1] * ai], $p.dataDimension\n        );\n    });\n\n    //TODO: get data statistics using the GPU\n    if(stats !== null) {\n        $p.fieldDomains = $p.fields.map(function(k, i) {\n            return [stats[k].min, stats[k].max];\n        })\n        .concat(new Array($p.deriveMax).fill([0, 1]));\n\n        $p.uniform(\"uFieldDomains\", \"vec2\",  $p.fieldDomains);\n\n    } else {\n        $p.uniform(\"uFieldDomains\", \"vec2\",  $p.fields.map(f => [0, 1]));\n    }\n\n\n    // $p.texture.tData.sampler = $p.uniform.uDataInput;\n    $p.uniform.uDataInput = $p.texture.tData;\n\n    function getFieldWidth($int_fid) {\n        return this.uFieldWidths[fid];\n    }\n\n    function getFieldDomain($int_fid) {\n        return this.uFieldDomains[fid];\n    }\n\n    function getData($int_fid, $float_r, $float_s) {\n        var t, value;\n        if (fid >= this.uFieldCount + this.uIndexCount) {\n            t = (float(fid - this.uFieldCount - this.uIndexCount) + s) /\n                float(this.uDeriveCount);\n            value = texture2D(this.fDerivedValues, vec2(r, t)).a;\n        } else {\n            if (this.uIndexCount > 0 && fid == 0) value = this.aDataValx;\n            else if (this.uIndexCount > 1 && fid == 1) value = this.aDataValy;\n            else {\n                t = (float(fid - this.uIndexCount) + s) / float(this.uFieldCount);\n                value = texture2D(this.uDataInput, vec2(r, t)).a;\n            }\n        }\n        return value;\n    }\n\n    function getNonIndexedData($int_fieldId, $float_addrX, $float_addrY) {\n        var offsetY, value;\n        if (fieldId >= this.uFieldCount + this.uIndexCount) {\n            offsetY = (float(fieldId - this.uFieldCount - this.uIndexCount) + addrY) /\n                float(this.uDeriveCount);\n            value = texture2D(this.fDerivedValues, vec2(addrX, offsetY)).a;\n        } else {\n            offsetY = (float(fieldId - this.uIndexCount) + addrY) / float(this.uFieldCount);\n            value = texture2D(this.uDataInput, vec2(addrX, offsetY)).a;\n        }\n        return value;\n    }\n\n    $p.subroutine(\"getFieldWidth\", \"float\", getFieldWidth);\n    $p.subroutine(\"getFieldDomain\", \"vec2\", getFieldDomain);\n    $p.subroutine(\"getData\", \"float\", getData);\n    $p.subroutine(\"getNonIndexedData\", \"float\", getNonIndexedData);\n\n    var gl = $p.ctx;\n    gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n    gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n    gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n    gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/allocate.js\n// module id = 37\n// module chunks = 0 1","export default function output($p) {\n    return function(format) {\n        var buf = $p.getResult(),\n            res = {},\n            offset = 0;\n\n        var rs = 0;\n\n        if ($p.resultDimension[0] > 1) {\n            res[$p.fields[rs]] = $p.attribute.aDataValx.data;\n            rs++;\n        }\n\n        if ($p.resultDimension[1] > 1) {\n            var bx = $p.attribute.aDataValx.data;\n            var by = $p.attribute.aDataValy.data;\n            var ax = new Array($p.resultDimension[0] * $p.resultDimension[1]),\n                ay = new Array($p.resultDimension[0] * $p.resultDimension[1]);\n\n            for (var y = 0; y < $p.resultDimension[1]; y++) {\n                for (var x = 0; x < $p.resultDimension[0]; x++) {\n\n                    ax[y * $p.resultDimension[0] + x] = bx[x];\n                    ay[y * $p.resultDimension[0] + x] = by[y]\n                }\n            }\n            res[$p.fields[0]] = ax;\n            res[$p.fields[rs]] = ay;\n            rs++;\n        }\n\n        var arraySize = $p.resultDimension[0] * $p.resultDimension[1];\n\n        for (var i = rs; i < $p.fields.length; i++) {\n            res[$p.fields[i]] = buf.subarray(offset, offset + arraySize);\n            offset += arraySize;\n        };\n\n        if (format == 'row') {\n            var objectArray = new Array(arraySize);\n\n            for (var i = 0; i < arraySize; i++) {\n                var obj = {};\n                Object.keys(res).forEach(function(f) {\n                    var kid = $p.dkeys.indexOf(f),\n                        dtype = $p.dtypes[kid];\n\n                    if (dtype == 'string' && $p.categoryLookup.hasOwnProperty(f)) {\n                        obj[f] = $p.categoryLookup[f][res[f][i]];\n                    } else if ($p.intervals.hasOwnProperty(f) && $p.intervals[f].dtype == 'historgram') {\n                        obj[f] = $p.intervals[f].min + res[f][i] * $p.intervals[f].interval;\n                    } else {\n                        obj[f] = res[f][i];\n                    }\n                });\n                objectArray[i] = obj;\n            }\n\n            return objectArray;\n\n        } else {\n            return res;\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/output.js\n// module id = 38\n// module chunks = 0 1","import FlexGL from '../flexgl/src/flexgl';\n\nexport default function init(options) {\n    var $p = options.context || null,\n        container = options.container || document.body,\n        viewport = options.viewport || [800, 450],\n        padding = {left:0, right: 0,top: 0, bottom: 0};\n\n    var defaultLayout = [\n        {\n            width: viewport[0],\n            height: viewport[1],\n            padding: {left: 30, right: 30, top: 30, bottom: 30},\n            offset: [0, 0]\n        }\n    ];\n    if ($p === null) {\n        $p = new FlexGL({\n            container: container,\n            width: viewport[0],\n            height: viewport[1],\n            padding: padding\n        });\n        $p.padding = padding;\n        $p.viewport = viewport;\n    }\n    $p.container = container;\n    $p.views = options.views || defaultLayout;\n    return $p;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/initialize.js\n// module id = 39\n// module chunks = 0 1","import Resource from './resource';\nimport ProgramManager from './program';\nimport Shader from './shader';\nimport Framebuffer from './framebuffer';\n\nexport default function FlexGL(arg) {\n\n    var flexgl = (this instanceof FlexGL) ? this : {},\n        options = arg || {},\n        container = options.container || null,\n        canvas = options.canvas || document.createElement(\"canvas\"),\n        width = options.width || null,\n        height = options.height || null,\n        padding = options.padding || {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        },\n        ctx = options.context || options.ctx || null,\n        kernels = {},\n        program = null,\n        sharedFunction = options.sharedFunction || {};\n\n\n    if (typeof(canvas) == \"string\") {\n        if (canvas[0] == \"#\") canvas = document.getElementById(cavnas.substring(1));\n        else canvas = document.getElementById(cavnas);\n    }\n    if (container) {\n        container = (typeof(container) == \"string\") ? document.getElementById(container) : container;\n        if (width === null) width = container.clientWidth;\n        if (height === null) height = container.clientHeight;\n    }\n    // width -= padding.left + padding.right;\n    // height -= padding.top + padding.bottom;\n    canvas.width = width;\n    canvas.height = height;\n    canvas.style.position = \"absolute\";\n    canvas.style.marginLeft = padding.left + \"px\";\n    canvas.style.marginTop = padding.top + \"px\";\n\n    if (ctx === null)\n        ctx = setupWebGL(canvas);\n    flexgl.ctx = ctx;\n    flexgl.canvas = canvas;\n\n    ctx._dict = options.env || options.dict || options.dictionary || {};\n\n\n    var resources = new Resource(ctx),\n        framebuffers = new Framebuffer(ctx),\n        programManager = new ProgramManager(ctx, resources),\n        shaders = new Shader(ctx, resources);\n\n    var blendExt = ctx.getExtension(\"EXT_blend_minmax\");\n    if (blendExt) {\n        ctx.MAX_EXT = blendExt.MAX_EXT;\n        ctx.MIN_EXT = blendExt.MIN_EXT;\n    }\n\n    ctx.ext = ctx.getExtension(\"ANGLE_instanced_arrays\");\n    enableExtension([\n        \"OES_texture_float\",\n        \"OES_texture_float_linear\",\n        // \"OES_texture_half_float\",\n        // \"OES_texture_half_float_linear\"\n    ]);\n\n    if (container)\n        container.appendChild(canvas);\n\n    function setupWebGL(canvas) {\n        var names = [\"webgl\", \"experimental-webgl\"];\n        var gl = null;\n        for (var i = 0; i < names.length; ++i) {\n            try {\n                gl = canvas.getContext(names[i]);\n            } catch (e) {}\n            if (gl) break;\n        }\n        return gl;\n    }\n\n    function enableExtension(extensions) {\n        if (!Array.isArray(extensions)) extensions = [extensions];\n        extensions.forEach(function(extension) {\n            var extProps = ctx.getExtension(extension);\n            if (extProps !== null) {\n                Object.keys(extProps).forEach(function(ep) {\n                    if (!ext.hasOwnProperty(ep)) {\n                        ctx.ext[ep] = extProps[ep];\n                    }\n                })\n            }\n        });\n    };\n\n    flexgl.enableExtension = enableExtension;\n\n    /**\n     * Allocate Attributes in vertex buffer array stored in GPU memory\n     * @param  {String} name attribute name\n     * @param  {String} type attribute type: float, vec2, ...\n     * @param  {Array} data data values\n     * @return {Object}      FLexGL object\n     */\n    flexgl.attribute = function(name, type, data) {\n        resources.allocate(\"attribute\", name, type, data);\n        Object.defineProperty(flexgl.attribute, name, {\n            get: function() {\n                return resources.attribute[name];\n            },\n            set: function(data) {\n                resources.attribute[name].load(data);\n            }\n        });\n        return flexgl;\n    };\n    flexgl.buffer = flexgl.attribute; //alias\n\n    /**\n     * Create a Uniform variable for WebGL shader programs\n     * @param  {String} name attribute name\n     * @param  {String} type uniform variable type: float, vec2, ...\n     * @param  {Array} data data values\n     * @return {Object}      FLexGL object\n     */\n    flexgl.uniform = function(name, type, data) {\n        resources.allocate(\"uniform\", name, type, data);\n        if (!flexgl.uniform.hasOwnProperty(name)) {\n            Object.defineProperty(flexgl.uniform, name, {\n                get: function() {\n                    return resources.uniform[name];\n                },\n                set: function(data) {\n                    resources.uniform[name].load(data);\n                    if (ctx.isProgram(program))\n                        resources.uniform[name].link(program);\n                }\n            });\n        }\n        return flexgl;\n    };\n\n    flexgl.uniform.serialize = function(aoa) {\n        var sa = [];\n        aoa.forEach(function(a) {\n            sa = sa.concat(a);\n        })\n        return sa;\n    }\n\n    /**\n     * Create a Uniform variable for WebGL shader programs\n     * @param  {String} name attribute name\n     * @param  {String} type texture type: unsigned_byte or float, ...\n     * @param  {Array} data data values\n     * @param  {Array} dim [width, height]\n     * @param  {String} [channel='alpha'] WebGL formats (rgba, alpha)\n     * @param  {Object} [sampler=null] FLexGL Uniform Object\n     * @return {Object}      FLexGL object\n     */\n    flexgl.texture = function(name, type, data, dim, channel, sampler) {\n        resources.allocate(\"texture\", name, type, dim, channel, data, sampler);\n        Object.defineProperty(flexgl.texture, name, {\n            get: function() {\n                return resources.texture[name];\n            },\n            set: function(data) {\n                resources.texture[name].load(data);\n            }\n        });\n        return flexgl;\n    }\n\n    flexgl.texture.update = function(name, data, offset, dim) {\n        resources.texture[name].update(data, offset, dim);\n    }\n\n    /**\n     * Create a Uniform variable for WebGL shader programs\n     * @param  {String} name attribute name\n     * @param  {String} [type] Varying variable type: float, vec2, ...\n     * @param  {Number} [size=1] data array\n     * @return {Object}      FLexGL object\n     */\n    flexgl.varying = function(name, type, size) {\n        resources.allocate(\"varying\", name, type, size);\n        return flexgl;\n    };\n\n    /**\n     * Create a Uniform variable for WebGL shader programs\n     * @param  {String} name attribute name\n     * @param  {String} type attribute type: float, vec2, ...\n     * @param  {Array} dim [width, height]\n     * @param  {Object} [texture=null] FLexGL Texture Object\n     * @return {Object}      FLexGL object\n     */\n    flexgl.framebuffer = function(name, type, dim, texture) {\n        var texture = texture || resources.allocate('texture', name, type, dim, 'rgba', null);\n\n        framebuffers.create(name, type, dim, texture);\n        if (!flexgl.framebuffer.hasOwnProperty(name)) {\n            Object.defineProperty(flexgl.framebuffer, name, {\n                get: function() {\n                    return framebuffers[name];\n                }\n            });\n        }\n        return flexgl;\n    }\n\n    flexgl.framebuffer.enableRead = function(name) {\n        framebuffers[name].enableRead(program);\n    }\n\n    flexgl.bindFramebuffer = function(fbName) {\n        if (fbName === null)\n            ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\n        else\n            ctx.bindFramebuffer(ctx.FRAMEBUFFER, framebuffers[fbName].ptr);\n    }\n\n    flexgl.subroutine = function(name, type, fn) {\n        resources.allocate(\"subroutine\", name, type, fn);\n        return flexgl;\n    }\n\n    flexgl.parameter = function(keyValuePairs) {\n        Object.keys(keyValuePairs).forEach(function(key) {\n            ctx._dict[key] = keyValuePairs[key];\n            if (Array.isArray(ctx._dict[key])) {\n                var i = 0;\n                Object.defineProperty(ctx._dict, key, {\n                    get: function() {\n                        return keyValuePairs[key][i++];\n                    },\n                    set: function(newArray) {\n                        i = 0;\n                        ctx._dict[key] = newArray;\n                    }\n                });\n            } else if(typeof(ctx._dict[key]) == 'object') {\n                var dictKeys = Object.keys(ctx._dict[key]);\n                fxgl.uniform('dict'+key, 'float', dictKeys.map(d=>ctx._dict[key][d]));\n            }\n        })\n        return flexgl;\n    }\n\n    flexgl.dictionary = flexgl.parameter;\n\n    flexgl.shader = programManager.shader;\n\n    flexgl.program = function(name, vs, fs) {\n        program = programManager.program(name, vs, fs);\n        return ctx;\n    }\n\n    flexgl.createProgram = function(name, vs, fs) {\n        program = programManager.create(name, vs, fs);\n        return ctx;\n    }\n\n    flexgl.app = function(name, props) {\n        var vs = flexgl.shader.vertex(props.vs),\n            fs = flexgl.shader.fragment(props.fs),\n            fb = props.framebuffer || null;\n\n        flexgl.program(name, vs, fs);\n\n        var draw = props.render || props.draw;\n\n        return function(args) {\n            var gl = flexgl.program(name);\n            return draw.call(gl, args);\n        }\n    }\n\n    flexgl.dimension = function() {\n        return [canvas.width, canvas.height];\n    }\n\n    flexgl.resources = resources;\n\n    return flexgl;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/flexgl/src/flexgl.js\n// module id = 40\n// module chunks = 0 1","import Uniform from './uniform';\nimport Attribute from './attribute';\nimport Texture from './texture';\nimport Varying from './varying';\nimport Subroutine from './subroutine';\n\nexport default function Resource(glContext) {\n    var resource = (this instanceof Resource) ? this : {},\n        gpuResources = {};\n\n    resource.uniform = new Uniform(glContext);\n    resource.attribute = new Attribute(glContext);\n    resource.texture = new Texture(glContext);\n    resource.varying = new Varying(glContext);\n    resource.subroutine = new Subroutine();\n\n    var resourceTypes = ['uniform', 'attribute', 'texture', 'varying', 'subroutine'];\n\n    resource.allocate = function(type, props) {\n        if (resourceTypes.indexOf(type) === -1) {\n            throw Error(\"Error: Invalid resource type: \" + type);\n        }\n        var res = resource[type].create.apply(null, Array.prototype.slice.call(arguments, 1));\n        res.resourceType = type;\n        gpuResources[res.name] = res;\n        if (!gpuResources.hasOwnProperty(res.name)) {\n            Object.defineProperty(gpuResources, res.name, {\n                get: function() {\n                    return gpuResources[res.name];\n                },\n                set: function(data) {\n                    gpuResources[res.name].load(data);\n                }\n            });\n        }\n        return res;\n    };\n\n    resource.link = function(program, resources) {\n        var requiredResources = (Array.isArray(resources)) ? resources : Object.keys(gpuResources);\n        requiredResources.forEach(function(resourceName) {\n            if (gpuResources.hasOwnProperty(resourceName))\n                gpuResources[resourceName].link(program);\n        })\n    };\n\n    resource.get = function(name) {\n        return gpuResources[name];\n    }\n\n    resource.create = resource.allocate;\n\n    return resource;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/flexgl/src/resource.js\n// module id = 41\n// module chunks = 0 1","export default function Attribute(glContext) {\n    \n    var attribute = (this instanceof Attribute) ? this : {},\n        ctx = glContext,\n        attributeID = 0;\n\n    function setAttribute(name, data) {\n        if(Array.isArray(data) || ArrayBuffer.isView(data)){\n            if(!ArrayBuffer.isView(data)) data = new Float32Array(data);\n            attribute[name].data = data;\n            ctx.bindBuffer(ctx.ARRAY_BUFFER, attribute[name].ptr);\n            ctx.bufferData(ctx.ARRAY_BUFFER, data, ctx.STATIC_DRAW);\n        }\n    }\n    attribute.create = function(name, type, data) {\n        attribute[name] = {\n            name: name,\n            type: type || 'float',\n            data: null,\n            location: attributeID++,\n            ptr: ctx.createBuffer(),\n            size: parseInt(type.slice(3,4)) || 1\n        };\n\n        if(data !== null && data.length) setAttribute(name, data);\n\n        attribute[name].link = function(program) {\n            ctx.bindBuffer(ctx.ARRAY_BUFFER, this.ptr);\n            this.location = ctx.getAttribLocation(program, this.name);\n            ctx.vertexAttribPointer(this.location, this.size, ctx.FLOAT, false, 0, 0);\n            ctx.enableVertexAttribArray(this.location);\n            return this;\n        }\n\n        attribute[name].load = function(arrayBuffer) {\n            setAttribute(this.name, arrayBuffer);\n            return this;\n        }\n\n        attribute[name].header = function() {\n            return 'attribute ' + this.type + ' ' + this.name + ';\\n';\n        }\n\n        attribute[name].delete = function() {\n            ctx.deleteBuffer(this.ptr);\n        }\n\n        return attribute[name];\n    };\n\n    return attribute;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/flexgl/src/attribute.js\n// module id = 42\n// module chunks = 0 1","export default function Varying(glContext) {\n\n    var varying = (this instanceof Varying) ? this : {},\n        ctx = glContext;\n\n    varying.create = function(name, type, size) {\n        varying[name] = {\n            name: name,\n            type: type || 'float',\n            size: size || 1,\n        };\n\n        varying[name].link = function() {};\n\n        varying[name].header = function() {\n            var header = 'varying ' + this.type + ' ' + this.name;\n            if(this.size > 1)\n                header += '[' + this.size + ']';\n            return header + ';\\n';\n        }\n\n        return varying[name];\n    }\n\n    return varying;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/flexgl/src/varying.js\n// module id = 43\n// module chunks = 0 1","export default function Subroutine() {\n\n    var subroutine = (this instanceof Subroutine) ? this : {};\n\n    subroutine.create = function(name, type, fn) {\n        subroutine[name] = {\n            name: name,\n            type: type || 'float',\n            fn: fn,\n            resourceType: \"subroutine\"\n        };\n\n        subroutine[name].link = function(program) {\n            return this;\n        }\n\n        subroutine[name].load = function(fn) {\n            subroutine[name].fn = fn;\n            return this;\n        }\n\n        subroutine[name].header = function() {\n            return this.fn.toString();\n        }\n\n        return subroutine[name];\n    };\n\n    return subroutine;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/flexgl/src/subroutine.js\n// module id = 44\n// module chunks = 0 1","import Shader from './shader';\n\nexport default function Program(glContext, resources) {\n\n    var program,\n        ctx = glContext,\n        pm = {},\n        kernels = {},\n        shaders = new Shader(glContext, resources);\n\n    pm.create = function(name, vs, fs) {\n        var name = name || \"default\",\n            vs = vs || \"default\",\n            fs = fs || \"default\",\n            deps = [];\n\n        if (kernels.hasOwnProperty(name)) {\n            pm.delete(name);\n        }\n\n        kernels[name] = ctx.createProgram();\n\n        kernels[name].vs = (typeof vs == \"object\") ? vs : shaders.vertex[vs];\n        kernels[name].fs = (typeof fs == \"object\") ? fs : shaders.fragment[fs];\n\n        ctx.attachShader(kernels[name], kernels[name].vs);\n        ctx.attachShader(kernels[name], kernels[name].fs);\n        ctx.linkProgram(kernels[name]);\n        var linked = ctx.getProgramParameter(kernels[name], ctx.LINK_STATUS);\n        if (!linked) {\n            var lastError = ctx.getProgramInfoLog(kernels[name]);\n            throw (\"Error in program linking:\" + lastError);\n            ctx.deleteProgram(kernels[name]);\n            return null;\n        }\n\n        deps = deps.concat(kernels[name].vs.deps);\n        deps = deps.concat(kernels[name].fs.deps);\n        kernels[name].deps = deps;\n\n        return kernels[name];\n    }\n\n    pm.use = pm.program = function(name, vs, fs) {\n        if (kernels.hasOwnProperty(name)) {\n            program = kernels[name];\n            ctx.useProgram(program);\n            resources.link(program, program.deps);\n            return program;\n        } else {\n            return pm.create(name, vs, fs);\n        }\n    }\n\n    pm.delete = function(name) {\n        if (kernels.hasOwnProperty(name)) {\n            ctx.detachShader(kernels[name], kernels[name].vs);\n            ctx.detachShader(kernels[name], kernels[name].fs);\n            ctx.deleteProgram(kernels[name]);\n            delete kernels[name];\n        }\n    }\n\n    pm.shader = function(arg, fn) {\n        var options = arg;\n        shaders.create(options, fn);\n        return pm;\n    }\n\n    pm.shader.vertex = function(fn) {\n        var options = {\n            type: \"vertex\"\n        };\n        if (fn.name) options.name = fn.name;\n        return shaders.create(options, fn);\n    }\n\n    pm.shader.fragment = function(fn) {\n        var options = {\n            type: \"fragment\"\n        };\n        if (fn.name) options.name = fn.name;\n        return shaders.create(options, fn);\n    }\n\n    return pm;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/flexgl/src/program.js\n// module id = 45\n// module chunks = 0 1","import Texture from './texture';\n\nexport default function Framebuffer(glContext) {\n\n    var framebuffer = (this instanceof Framebuffer) ? this : {},\n        ctx = glContext;\n\n    framebuffer.create = function(name, type, dim, texture) {\n\n        framebuffer[name] = {\n            ptr: ctx.createFramebuffer(),\n            name: name,\n            type: type || \"float\",\n            width: dim[0] || 1024,\n            height: dim[1] || 1024,\n            texture: texture || null,\n            renderbuffer: ctx.createRenderbuffer(),\n        }\n\n        if (framebuffer[name].texture === null) {\n            var buf = (type == 'float') ?\n                new Float32Array(dim[0] * dim[1] * 4) :\n                new Uint8Array(dim[0] * dim[1] * 4);\n            framebuffer[name].texture = Texture(ctx).create(name, type, dim, \"rgba\", buf);\n        }\n\n        var renderbuffer = framebuffer[name].renderbuffer;\n        ctx.bindFramebuffer(ctx.FRAMEBUFFER, framebuffer[name].ptr);\n        ctx.bindRenderbuffer(ctx.RENDERBUFFER, renderbuffer);\n        ctx.renderbufferStorage(\n            ctx.RENDERBUFFER,\n            ctx.DEPTH_COMPONENT16,\n            framebuffer[name].width,\n            framebuffer[name].height\n        );\n        ctx.framebufferTexture2D(\n            ctx.FRAMEBUFFER,\n            ctx.COLOR_ATTACHMENT0,\n            ctx.TEXTURE_2D,\n            framebuffer[name].texture.ptr,\n            0\n        );\n        ctx.framebufferRenderbuffer(\n            ctx.FRAMEBUFFER,\n            ctx.DEPTH_ATTACHMENT,\n            ctx.RENDERBUFFER,\n            renderbuffer\n        );\n        ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);\n        ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\n\n        framebuffer[name].enableRead = function(program) {\n            ctx.activeTexture(ctx.TEXTURE0 + this.texture.index);\n            ctx.bindTexture(ctx.TEXTURE_2D, this.texture.ptr);\n            this.texture.location = ctx.getUniformLocation(program, this.texture.name);\n            ctx.uniform1i(this.texture.location, this.texture.index);\n        };\n\n        framebuffer[name].delete = function() {\n            ctx.bindRenderbuffer(gl.RENDERBUFFER, null);\n            ctx.bindFramebuffer(gl.FRAMEBUFFER, null);\n            ctx.deleteRenderbuffer(this.renderbuffer);\n            ctx.deleteTexture(this.texture.ptr)\n            ctx.deleteFramebuffer(this.ptr);\n        };\n\n        return framebuffer[name];\n    }\n\n    return framebuffer;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/flexgl/src/framebuffer.js\n// module id = 46\n// module chunks = 0 1","import derive from './derive';\nimport reveal from './reveal';\nimport aggregate from './aggregate';\nimport cache  from './cache';\nimport match from './match';\nimport extent from './extent';\nimport visualize from './visualize';\n\nexport default function compile(fxgl, fields, spec) {\n\n    // if(spec.hasOwnProperty('perceptual'))\n    //     operations.perceptual = kernels.perceptual(fxgl);\n    //\n    // if(spec.hasOwnProperty('derive'))\n    //     operations.derive = kernels.derive(fxgl, spec.derive);\n\n    return {\n        aggregate : aggregate(fxgl),\n        cache     : cache(fxgl),\n        match     : match(fxgl, fields),\n        extent    : extent(fxgl),\n        visualize : visualize(fxgl)\n        // perceive  : kernels.reveal(fxgl)\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/compile.js\n// module id = 47\n// module chunks = 0 1","import {seqFloat} from './utils';\n\nconst vecId = ['x', 'y', 'z'];\nconst aggrOpts = ['$min', '$max', '$count', '$sum', '$avg', '$var', '$std'];\n\nexport default function aggregate($p) {\n    var aggregate = {};\n\n    $p.uniform('uGroupGetStat', 'float', 0.0)\n        .uniform('uAggrOpt', 'int', 2);\n\n    function vertexShader() {\n        gl_PointSize = 1.0;\n\n        var i, j, k;\n        var x, groupKeyValue;\n\n        i = (this.aDataIdx + 0.5) / this.uDataDim.x;\n        j = (this.aDataIdy + 0.5) / this.uDataDim.y;\n        this.vResult = this.getData(this.uFieldId, i, j);\n\n        if (this.aDataIdy * this.uDataDim.x + this.aDataIdx >= this.uDataSize) {\n            this.vResult = 0.0;\n        }\n\n        if (this.uFilterFlag == 1) {\n            if (texture2D(this.fFilterResults, vec2(i, j)).a < this.uVisLevel - 0.01)\n                this.vResult = 0.0;\n        }\n\n        var pos = new Vec2();\n        for (var ii = 0; ii < 2; ii++) {\n            var gid = new Int();\n            gid = this.uGroupFields[ii];\n            if (gid != -1) {\n                if (this.uIndexCount > 0) {\n                    if (gid == 0) {\n                        groupKeyValue = i;\n                    } else if (gid == 1) {\n                        groupKeyValue = j;\n                    }\n                }\n                if (this.uIndexCount == 0 || gid > 1) {\n                    var d = new Vec2();\n                    d = this.getFieldDomain(gid);\n                    groupKeyValue = (this.getData(gid, i, j) - d.x) / (d.y - d.x) * (this.getFieldWidth(gid)) / (this.getFieldWidth(gid) + 1.);\n                    groupKeyValue += 0.5 / this.getFieldWidth(gid);\n                }\n                pos[ii] = groupKeyValue * 2.0 - 1.0;\n            } else {\n                pos[ii] = 0.5;\n            }\n        }\n\n        gl_Position = vec4(pos, 0.0, 1.0);\n    }\n\n    function fragmentShader() {\n        if (this.vResult == 0.0) discard;\n\n        if (this.uAggrOpt == 2)\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        else\n            gl_FragColor = vec4(0.0, 0.0, 1.0, this.vResult);\n    }\n\n    var vs = $p.shader.vertex(vertexShader),\n        fs = $p.shader.fragment(fragmentShader);\n\n    $p.program(\"group\", vs, fs);\n\n    var vs2 = $p.shader.vertex(function main() {\n        gl_Position = vec4(this._square, 0, 1);\n    });\n\n    var fs2 = $p.shader.fragment(function() {\n        var x, y, res;\n        $vec4(value);\n        x = (gl_FragCoord.x) / this.uResultDim.x;\n        y = (gl_FragCoord.y) / this.uResultDim.y;\n        y = (float(this.uFieldId - this.uIndexCount) + y) / float(this.uFieldCount);\n        value = texture2D(this.uDataInput, vec2(x, y));\n        if (this.uAggrOpt > 3)\n            res = value.a / value.b;\n        else\n            res = value.a;\n        gl_FragColor = vec4(0.0, 0.0, 0.0, res);\n    });\n\n    $p.program(\"group2\", vs2, fs2);\n\n    var resultFieldCount,\n        getAvgValues = false,\n        getVarStd = false,\n        resultDomains;\n\n    function _execute(opts, groupFieldIds, resultFieldIds) {\n        resultFieldCount = resultFieldIds.length;\n        var gl = $p.program(\"group\");\n        $p.bindFramebuffer(\"fGroupResults\");\n        $p.framebuffer.enableRead(\"fDerivedValues\");\n        $p.framebuffer.enableRead(\"fFilterResults\");\n\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n\n        $p.uniform.uGroupFields = groupFieldIds;\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE);\n        gl.blendEquation(gl.FUNC_ADD);\n        $p.uniform.uGroupGetStat = 0.0;\n        var resultDomains = new Array(resultFieldIds.length);\n        $p.uniform.uResultDim = $p.resultDimension;\n\n        getAvgValues = false;\n        getVarStd = false;\n        resultFieldIds.forEach(function(f, i) {\n            var opt = aggrOpts.indexOf(opts[i]);\n            if (opt == -1) throw Error(\"unknow operator for aggreation: \" + opts[i]);\n            gl.viewport(0, i * $p.resultDimension[1], $p.resultDimension[0], $p.resultDimension[1]);\n            if (opt == 0) gl.blendEquation(gl.MIN_EXT);\n            else if (opt == 1) gl.blendEquation(gl.MAX_EXT);\n            else gl.blendEquation(gl.FUNC_ADD);\n            $p.uniform.uFieldId = f;\n            $p.uniform.uAggrOpt = opt;\n            gl.ext.drawArraysInstancedANGLE(\n                gl.POINTS, 0,\n                $p.dataDimension[0],\n                $p.dataDimension[1]\n            );\n            if (opt > 3) {\n                getAvgValues = true;\n                if (opt > 4) getVarStd = true;\n            }\n        });\n\n        if (getAvgValues) {\n            // console.log('*** Second Pass for Aggregation');\n            var fieldCount = $p.uniform.uFieldCount.data,\n                preAggrData = $p.uniform.uDataInput.data;\n\n            $p.uniform.uDataInput.data = $p.framebuffer.fGroupResults.texture;\n            $p.uniform.uFieldCount.data = resultFieldIds.length;\n\n\n                $p.framebuffer(\n                    \"fAggrStats\",\n                    \"float\", [$p.resultDimension[0], $p.resultDimension[1] * resultFieldIds.length]\n                );\n                $p.bindFramebuffer(\"fAggrStats\");\n\n\n\n            gl = $p.program(\"group2\");\n            $p.framebuffer.enableRead(\"fGroupResults\");\n            gl.ext.vertexAttribDivisorANGLE($p.attribute._square.location, 0);\n\n            gl.disable(gl.BLEND);\n            resultFieldIds.forEach(function(f, i) {\n                var opt = aggrOpts.indexOf(opts[i]);\n                $p.uniform.uAggrOpt = opt;\n                $p.uniform.uFieldId = i;\n                gl.viewport(0, i * $p.resultDimension[1], $p.resultDimension[0], $p.resultDimension[1]);\n                gl.drawArrays(gl.TRIANGLES, 0, 6);\n            })\n            $p.uniform.uDataInput.data = $p.framebuffer.fAggrStats.texture;\n\n        } else {\n            $p.uniform.uDataInput.data = $p.framebuffer.fGroupResults.texture;\n\n        }\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    aggregate.execute = function(spec) {\n        var groupFields = spec.$by || spec.$group,\n            groupFieldIds = [-1, -1].\n        resultDim = [1, 1];\n\n        if (!Array.isArray(groupFields)) groupFields = [groupFields];\n        if (groupFields.length == 2) {\n            groupFieldIds[0] = $p.fields.indexOf(groupFields[0]);\n            groupFieldIds[1] = $p.fields.indexOf(groupFields[1]);\n            $p.resultDimension = [\n                $p.fieldWidths[groupFieldIds[0]],\n                $p.fieldWidths[groupFieldIds[1]]\n            ];\n        } else {\n            groupFieldIds[0] = $p.fields.indexOf(groupFields[0]);\n            $p.resultDimension = [$p.fieldWidths[groupFieldIds[0]], 1];\n        }\n\n\n        // console.log( groupFieldIds, $p.resultDimension, $p.fieldWidths, $p.fieldDomains);\n        // var resultFields = Object.keys(spec).filter(function(d){return d!='$by' && d!='$group';}),\n        //     resultFieldIds = resultFields.map(function(f) { return fields.indexOf(f); }),\n        //     operators = resultFields.map(function(r){return spec[r]; });\n\n\n        var newFieldSpec = spec.$calculate || spec.$reduce || spec.$out || null;\n\n        if (newFieldSpec === null) {\n            newFieldSpec = {};\n            Object.keys(spec).filter(function(d) {\n                return d != '$by' && d != '$group';\n            }).forEach(function(d) {\n                newFieldSpec[d] = spec[d];\n            });\n        }\n\n        var newFieldNames = Object.keys(newFieldSpec),\n            resultFields = newFieldNames.map(function(f) {\n                return newFieldSpec[f][Object.keys(newFieldSpec[f])[0]];\n            }),\n            resultFieldIds = resultFields.map(function(f) {\n                return $p.fields.indexOf(f);\n            }),\n            operators = resultFields.map(function(f, i) {\n                return Object.keys(newFieldSpec[newFieldNames[i]])[0];\n            });\n\n        if (!$p._update) {\n            $p.framebuffer(\n                \"fGroupResults\",\n                \"float\", [$p.resultDimension[0], $p.resultDimension[1] * resultFields.length]\n            );\n        }\n        _execute(operators, groupFieldIds, resultFieldIds);\n\n        $p.getResult = aggregate.result;\n        $p.indexes = groupFields;\n        $p.dataDimension = $p.resultDimension;\n\n        var newFieldIds = groupFieldIds.filter(function(f) {\n            return f !== -1\n        }).concat(resultFieldIds);\n\n        $p.fields = groupFields\n            .map(function(gf) {\n                return (gf.substring(0, 4) == 'bin@') ? gf.slice(4) : gf;\n            })\n            .concat(newFieldNames);\n\n        $p.uniform.uDataDim.data = $p.resultDimension;\n        $p.uniform.uIndexCount.data = $p.indexes.length;\n        $p.uniform.uFieldCount.data = $p.fields.length - $p.indexes.length;\n\n        // $p.fieldWidths = $p.fieldWidths.concat($p.deriveWidths);\n        // $p.fieldDomains = $p.fieldDomains.concat($p.deriveDomains);\n\n        $p.fieldDomains = newFieldIds.map(function(f) {\n            return $p.fieldDomains[f];\n        });\n        $p.fieldWidths = newFieldIds.map(function(f) {\n            return $p.fieldWidths[f];\n        });\n\n        // $p.uniform.uDataInput.data = $p.framebuffer.fGroupResults.texture;\n\n        $p.attribute.aDataItemId = seqFloat(0, $p.resultDimension[0] * $p.resultDimension[1] - 1);\n        $p.dataSize = $p.resultDimension[0] * $p.resultDimension[1];\n        $p.uniform.uDataSize.data = $p.dataSize;\n\n        $p.indexes.forEach(function(d, i) {\n            // $p.attribute['aDataId' + vecId[i]] = seqFloat(0, $p.resultDimension[i]-1);\n            $p.attribute['aDataId' + vecId[i]] = new Float32Array($p.resultDimension[i]).map(function(d, i) {\n                return i;\n            });\n            $p.attribute['aDataVal' + vecId[i]] = new Float32Array($p.resultDimension[i]).map(function(d, i) {\n                return i;\n            });\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataId' + vecId[i]].location, i);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataVal' + vecId[i]].location, i);\n        });\n\n        if ($p.indexes.length == 1) {\n            $p.attribute.aDataIdy = new Float32Array(1);\n            $p.attribute.aDataValy = new Float32Array(1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n        }\n        if (!$p._update) {\n            resultDomains = $p.opt.extent(resultFieldIds, $p.dataDimension);\n        }\n        for (var ii = $p.indexes.length; ii < $p.indexes.length + resultFieldIds.length; ii++) {\n            $p.fieldDomains[ii] = resultDomains[ii - $p.indexes.length];\n            $p.fieldWidths[ii] = resultDomains[ii - $p.indexes.length][1] - resultDomains[ii - $p.indexes.length][0];\n        }\n\n        $p.uniform.uFieldDomains.data = $p.fieldDomains;\n        $p.uniform.uFieldWidths.data = $p.fieldWidths;\n        $p.uniform.uFilterFlag.data = 0;\n\n        $p.indexes.forEach(function(d, i) {\n            // $p.attribute['aDataId' + vecId[i]] = seqFloat(0, $p.resultDimension[i]-1);\n            var interval = 1;\n\n            if ($p.intervals.hasOwnProperty(d))\n                interval = $p.intervals[d].interval;\n\n            $p.attribute['aDataVal' + vecId[i]] = seqFloat(\n                $p.fieldDomains[i][0],\n                $p.fieldDomains[i][1],\n                interval\n            );\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataId' + vecId[i]].location, i);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataVal' + vecId[i]].location, i);\n        });\n    }\n\n    aggregate.result = function(arg) {\n        var options = arg || {},\n            offset = options.offset || [0, 0],\n            resultSize = options.size || $p.resultDimension[0] * $p.resultDimension[1],\n            rowTotal = Math.min(resultSize, $p.resultDimension[0]),\n            colTotal = Math.ceil(resultSize / $p.resultDimension[0]);\n\n        $p.bindFramebuffer(\"fGroupResults\");\n        var gl = $p.program(\"group\"),\n            result = new Float32Array(rowTotal * colTotal * 4 * resultFieldCount);\n\n        gl.readPixels(offset[0], offset[1], rowTotal, colTotal * resultFieldCount, gl.RGBA, gl.FLOAT, result);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        return result.filter(function(d, i) {\n            return i % 4 === 3;\n        });\n    }\n\n    return aggregate;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/aggregate.js\n// module id = 48\n// module chunks = 0 1","export default function cache(fxgl) {\n    var cache = {},\n        dataDimension = fxgl.uniform.uDataDim.data,\n        fieldCount =  fxgl.uniform.uFieldCount.data,\n        cacheTag;\n\n    var vs = fxgl.shader.vertex(function () {\n         gl_Position = vec4(this._square, 0, 1);\n    });\n\n    var fs = fxgl.shader.fragment(function () {\n        var x, y;\n        $vec4(value);\n        x = (gl_FragCoord.x) / this.uDataDim.x;\n        y = (gl_FragCoord.y) / (this.uDataDim.y * float(this.uFieldCount));\n        value = texture2D(this.uDataInput, vec2(x, y));\n        gl_FragColor = value;\n    });\n\n    fxgl.program(\"cache\", vs, fs);\n\n    cache.execute = function(tag, dataDim, fieldTotal) {\n        cacheTag = tag;\n        dataDimension = dataDim || fxgl.uniform.uDataDim.data;\n        fieldCount = fieldTotal || fxgl.uniform.uFieldCount.data;\n\n        console.log(fieldCount);\n\n        fxgl.framebuffer(tag, \"float\", [dataDimension[0], dataDimension[1]*fieldCount]);\n        fxgl.bindFramebuffer(tag);\n        var gl = fxgl.program(\"cache\");\n\n        // console.log(dataDimension, fieldCount);\n        gl.viewport(0, 0, dataDimension[0], dataDimension[1]*fieldCount);\n        gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.disable(gl.BLEND);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n        var result = new Float32Array(dataDimension[0]*dataDimension[1]*4*fieldCount);\n        gl.readPixels(0, 0, dataDimension[0], dataDimension[1]*fieldCount, gl.RGBA, gl.FLOAT, result);\n        console.log(result.filter(function(d, i){ return i%4===3 } ));\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        fxgl.framebuffer.enableRead(tag);\n        fxgl.uniform.uDataInput = fxgl.framebuffer[tag].texture;\n    }\n\n    cache.result =  function() {\n        fxgl.bindFramebuffer(cacheTag);\n        var gl = fxgl.program(\"cache\"),\n            result = new Float32Array(dataDimension[0]*dataDimension[1]*4*fieldCount);\n\n        gl.readPixels(0, 0, dataDimension[0], dataDimension[1]*fieldCount, gl.RGBA, gl.FLOAT, result);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        return result.filter(function(d, i){ return i%4===0;} );\n    }\n\n    return cache;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/cache.js\n// module id = 49\n// module chunks = 0 1","function vertexShaderFilter(){\n    var i, j, k, value;\n    var filter = new Int(0);\n    var sel = new Int(0);\n    var visSelect = new Bool(false);\n    i = (this.aDataIdx+0.5) / this.uDataDim.x;\n    j = (this.aDataIdy+0.5) / this.uDataDim.y;\n\n    for(var f = 0; f < $(fieldCount)+$(indexCount); f++) {\n        if(this.uFilterControls[f] == 1 || this.uVisControls[f] == 1) {\n            value = this.getData(f, i, j);\n\n            if(this.uFilterControls[f] == 1) {\n                if(value < this.uFilterRanges[f].x || value >= this.uFilterRanges[f].y) {\n                    filter -= 1;\n                }\n            }\n            if(this.uVisControls[f] == 1) {\n                if(value < this.uVisRanges[f].x || value >= this.uVisRanges[f].y) {\n                    sel -= 1;\n                }\n                visSelect = true;\n            }\n\n        }\n    }\n    this.vResult = 0.1;\n    if(filter < 0) {\n        this.vResult = 0.0;\n    } else {\n        if(visSelect)\n            this.vResult = (sel < 0) ? 0.1 : 0.2;\n    }\n    var x = i * 2.0 - 1.0;\n    var y = j * 2.0 - 1.0;\n    gl_PointSize = 1.0;\n    gl_Position = vec4(x, y, 0.0, 1.0);\n}\n\nfunction vertexShaderSelect(){\n    var i, j, k, value;\n    i = (this.aDataIdx+0.5) / this.uDataDim.x;\n    j = (this.aDataIdy+0.5) / this.uDataDim.y;\n    this.vResult = this.uFilterLevel - 0.1;\n    value = this.getData(this.uFieldId, i, j);\n    for(var l = 0; l < 100; l++){\n        if(l < this.uSelectCount) {\n            if(value == this.uInSelections[l]) {\n                this.vResult = this.uFilterLevel;\n            }\n        }\n    }\n    var x = i * 2.0 - 1.0;\n    var y = j * 2.0 - 1.0;\n    gl_PointSize = 1.0;\n    gl_Position = vec4(x, y, 0.0, 1.0);\n}\n\nfunction fragmentShader() {\n    gl_FragColor = vec4(0., 0., 0., this.vResult);\n}\n\nexport default function match($p) {\n    const SELECT_MAX = 100;\n    var match = {},\n        dataDimension = $p.uniform.uDataDim.data,\n        fieldCount = $p.fields.length,\n        filterControls = new Array(fieldCount).fill(0),\n        filterRanges = $p.fieldDomains,\n        visControls = new Array(fieldCount).fill(0),\n        visRanges = $p.fieldDomains,\n        inSelections = new Array(SELECT_MAX);\n\n    $p.uniform(\"uFilterControls\",\"int\", filterControls)\n        .uniform(\"uVisControls\",\"int\", filterControls)\n        .uniform(\"uFilterRanges\",\"vec2\", filterRanges)\n        .uniform(\"uVisRanges\",\"vec2\", filterRanges)\n        .uniform(\"uInSelections\", \"float\", Float32Array.from(inSelections))\n        .uniform(\"uSelectMax\", \"int\", SELECT_MAX)\n        .uniform(\"uSelectCount\", \"int\", 0);\n\n    var filter = {\n        vs: $p.shader.vertex(vertexShaderFilter),\n        fs: $p.shader.fragment(fragmentShader)\n    };\n\n    var sel = {\n        vs: $p.shader.vertex(vertexShaderSelect),\n        fs: $p.shader.fragment(fragmentShader)\n    };\n\n    $p.program(\"filter\", filter.vs, filter.fs);\n    $p.program(\"match\", sel.vs, sel.fs);\n\n    match.control = function(ctrl) {\n        // filterControls = ctrl;\n    }\n\n    function _execute(spec){\n        var fields = $p.fields\n        var gl;\n        var matchFields = Object.keys(spec).filter(function(s){\n            return spec[s].hasOwnProperty('$in');\n        })\n        .concat(Object.keys($p.crossfilters).filter(function(s){\n            return $p.crossfilters[s].hasOwnProperty('$in');\n        }))\n\n\n        $p.bindFramebuffer(\"fFilterResults\");\n        $p.framebuffer.enableRead(\"fDerivedValues\");\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n        if(matchFields.length) {\n            gl = $p.program(\"match\");\n            gl.viewport(0, 0, dataDimension[0], dataDimension[1]);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n            gl.clearColor( 1.0, 1.0, 1.0, 1.0 );\n            gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n            gl.enable( gl.BLEND );\n            gl.blendFunc( gl.ONE, gl.ONE );\n            gl.blendEquation(gl.MIN_EXT);\n\n            matchFields.forEach(function(k){\n                var fieldId = fields.indexOf(k);\n                var inSelections = (spec.hasOwnProperty(k)) ? spec[k].$in :  $p.crossfilters[k].$in;\n                if($p.categoryIndex.hasOwnProperty(k)) {\n                    inSelections = inSelections\n                        .slice(0, SELECT_MAX)\n                        .map(function(v) { return $p.categoryIndex[k][v]; });\n                } else {\n                    inSelections = inSelections.slice(0, SELECT_MAX);\n                }\n                $p.uniform.uSelectCount = inSelections.length;\n                $p.uniform.uInSelections = Float32Array.from(inSelections);\n                $p.uniform.uFieldId = fieldId;\n\n                gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n                // filterRanges[fieldId*2] = Math.min.apply(null, spec[k].$in);\n                // filterRanges[fieldId*2+1] = Math.max.apply(null, spec[k].$in);\n                filterRanges[fieldId] = [Math.min.apply(null, inSelections), Math.max.apply(null, inSelections)];\n            })\n        }\n        // console.log($p._responseType, spec);\n        var filterSelections = Object.keys(spec).filter(function(s){\n            return !spec[s].hasOwnProperty('$in');\n        });\n\n        var viewSelections = Object.keys($p.crossfilters).filter(function(s){\n            return !$p.crossfilters[s].hasOwnProperty('$in');\n        });;\n\n        if(filterSelections.length || viewSelections.length){\n            filterControls = new Array(fieldCount).fill(0);\n\n            filterSelections.forEach(function(k){\n                var fieldId = fields.indexOf(k);\n\n                if(fieldId === -1) {\n                    console.log('Skipped: Matching on invalid data field ' + k);\n                    return;\n                }\n                if(spec[k].length < 2) spec[k][1] = spec[k][0];\n                filterControls[fieldId] = 1;\n                filterRanges[fieldId] = spec[k];\n                // filterRanges[fieldId*2] = spec[k][0];\n                // filterRanges[fieldId*2+1] = spec[k][1];\n            });\n\n            viewSelections.forEach(function(k){\n                var fieldId = fields.indexOf(k);\n                if(fieldId === -1) {\n                    console.log('Skipped: Matching on invalid data field ' + k);\n                    return;\n                }\n                if($p.crossfilters[k].length < 2) $p.crossfilters[k][1] = $p.crossfilters[k][0];\n                visControls[fieldId] = 1;\n                visRanges[fieldId] = $p.crossfilters[k];\n            });\n\n            $p.uniform.uFilterControls.data = filterControls;\n            $p.uniform.uFilterRanges.data = filterRanges;\n            $p.uniform.uVisControls.data = visControls;\n            $p.uniform.uVisRanges.data = visRanges;\n\n            gl = $p.program(\"filter\");\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n            gl.disable(gl.BLEND);\n            // gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n            // gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n\n            gl.viewport(0, 0, dataDimension[0], dataDimension[1]);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n        }\n        $p.ctx.bindFramebuffer($p.ctx.FRAMEBUFFER, null);\n        return filterRanges;\n    }\n\n    match.execute = function(spec) {\n        filterControls = new Array(fieldCount).fill(0);\n        visControls = new Array(fieldCount).fill(0);\n        var filterSpec = spec;\n\n\n        Object.keys($p.crossfilters).forEach(function(k, i) {\n            if($p.categoryIndex.hasOwnProperty(k) && !$p.crossfilters[k].$in) {\n                $p.crossfilters[k] = {$in: $p.crossfilters[k]};\n            }\n        });\n\n\n        Object.keys(filterSpec).forEach(function(k, i) {\n            if($p.categoryIndex.hasOwnProperty(k) && !spec[k].$in) {\n                spec[k] = {$in: spec[k]};\n            }\n        });\n\n        $p.uniform.uFilterFlag = 1;\n        if(!$p._update) {\n            filterRanges = $p.fieldDomains.slice();\n            visRanges = $p.fieldDomains.slice();\n        }\n        var newDomains = _execute(spec);\n\n        if(!$p._update){\n            // console.log('checking filter domains', newDomains);\n            newDomains.forEach(function(domain, fid) {\n                var d = domain;\n                if($p.dtypes[fid] == 'int') d[1] -= 1;\n                $p.fieldDomains[fid] = d;\n                $p.fieldWidths[fid] = $p.getDataWidth(fid, d);\n            });\n\n            $p.uniform.uFieldDomains.data = $p.fieldDomains;\n            $p.uniform.uFieldWidths.data = $p.fieldWidths;\n        }\n    }\n\n    match.result = function(arg) {\n        var options = arg || {},\n            offset = options.offset || [0, 0],\n            resultSize = options.size || $p.dataDimension[0]* $p.dataDimension[1],\n            rowSize = Math.min(resultSize, $p.dataDimension[0]),\n            colSize = Math.ceil(resultSize/$p.dataDimension[0]);\n\n        $p.bindFramebuffer(\"fFilterResults\");\n\n        var gl = $p.ctx;\n        var bitmap = new Uint8Array(rowSize*colSize*4);\n        gl.readPixels(offset[0], offset[1], rowSize, colSize, gl.RGBA, gl.UNSIGNED_BYTE, bitmap);\n        // console.log(result.filter(function(d, i){ return i%4===0;} ));\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        // var result = [];\n        // bitmap.forEach(function(d, i){ if(i%3===0 && d!==0) result.push(d);});\n        // console.log(result);\n        // return result;\n        return  bitmap;\n    }\n\n    return match;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/match.js\n// module id = 50\n// module chunks = 0 1","\nconst smallest = -Math.pow(2, 128);\nexport default function extent(fxgl) {\n\n    var fieldCount = fxgl.uniform.uFieldCount.data;\n    fxgl.framebuffer(\"fStats\", \"float\", [2, fieldCount]);\n\n    var vs = fxgl.shader.vertex(function() {\n        gl_PointSize = 1.0;\n        var i, j;\n        if (this.aDataIdy * this.uDataDim.x + this.aDataIdx >= this.uDataSize) {\n            this.vDiscardData = 1.0;\n        } else {\n            this.vDiscardData = 0.0;\n            i = (this.aDataIdx + 0.5) / this.uDataDim.x;\n            j = (this.aDataIdy + 0.5) / this.uDataDim.y;\n            this.vResult = this.getData(this.uFieldId, i, j);\n        }\n        gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n    });\n\n    var fs = fxgl.shader.fragment(function() {\n        if (this.vDiscardData == 1.0) discard;\n        if (this.vResult >= 0.0) {\n            gl_FragColor = vec4(0.0, 0.0, 1.0, this.vResult);\n        } else {\n            gl_FragColor = vec4(-1.0, this.vResult, 0.0, 0.0);\n        }\n    });\n\n    var gl = fxgl.program(\"stats\", vs, fs);\n\n    return function(fieldIds, dataDimension) {\n        if (!fxgl._update) {\n            fxgl.framebuffer(\"fStats\", \"float\", [2, fieldIds.length]);\n        }\n        var gl = fxgl.program(\"stats\");\n        fxgl.framebuffer.enableRead(\"fGroupResults\");\n\n        gl.ext.vertexAttribDivisorANGLE(fxgl.attribute.aDataIdx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE(fxgl.attribute.aDataValx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE(fxgl.attribute.aDataIdy.location, 1);\n        gl.ext.vertexAttribDivisorANGLE(fxgl.attribute.aDataValy.location, 1);\n\n        fxgl.bindFramebuffer(\"fStats\");\n        gl.clearColor(smallest, smallest, smallest, smallest);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE);\n        // gl.finish();\n        // fxgl.uniform.uDeriveCount = deriveFieldCount;\n        var extents = new Array(fieldIds.length);\n        var start = new Date();\n        var idCount = fxgl.uniform.uIndexCount.data;\n        fieldIds.forEach(function(d, i) {\n            fxgl.uniform.uFieldId = i + idCount;\n            gl.viewport(0, i, 1, 1);\n            gl.blendEquation(gl.MAX_EXT);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n            // gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, max);\n\n            gl.viewport(1, i, 1, 1);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n\n            gl.blendEquation(gl.MIN_EXT);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n\n            // var extent = new Float32Array(8);\n            // gl.readPixels(0, i, 2, 1, gl.RGBA, gl.FLOAT, extent);\n            // console.log(extent);\n            // var ext = extent;\n            // var minValue = (ext[0] > 0) ? ext[1] : ext[7],\n            //     maxValue = (ext[2] > 0) ? ext[3] : ext[5];\n            //  extents[i] = [minValue, maxValue];\n        });\n        var extent = new Float32Array(8 * fieldIds.length);\n        gl.readPixels(0, 0, 2, fieldIds.length, gl.RGBA, gl.FLOAT, extent);\n        fieldIds.forEach(function(d, i) {\n            var ext = extent.slice(i * 8, i * 8 + 8);\n            var minValue = (ext[4] < 0) ? ext[5] : ext[7],\n                maxValue = (ext[2] > 0) ? ext[3] : ext[1];\n            extents[i] = [minValue, maxValue];\n        });\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        return extents;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/extent.js\n// module id = 51\n// module chunks = 0 1","import colors from './color';\nimport ctypes from './ctypes';\nimport render from './render';\nimport reveal from './reveal';\nimport encode from './encode';\nimport interact from './interact';\n\nimport Layout from './metavis/layout';\n\nconst visualEncodings = ['x', 'y', 'color', 'opacity', 'width', 'height', 'size'];\nconst userActions = ['click', 'hover', 'brush', 'zoom', 'pan'];\n\nexport default function visualize($p) {\n\n    var colorManager = colors($p),\n        chartPadding = $p.padding || {left: 0, right: 0, top: 0, bottom: 0},\n        viewport = [\n            $p.viewport[0],\n            $p.viewport[1],\n        ];\n\n    var vis = new Layout({\n        container: $p.container,\n        width: viewport[0] + chartPadding.left + chartPadding.right,\n        height: viewport[1] + chartPadding.top + chartPadding.bottom,\n        canvas: $p.canvas,\n        padding: chartPadding\n    });\n\n    $p.uniform('uVisualEncodings',  'int',   new Array(visualEncodings.length).fill(-1))\n        .uniform('uViewDim',        'vec2',  $p.viewport)\n        .uniform('uVisShape',       'int',   1)\n        .uniform('uInterleaveX',    'int',   0)\n        .uniform('uVisDomains',     'vec2',  $p.fieldDomains.map(d=>d.slice()))\n        .uniform('uVisScale',       'vec2', [1.0, 1.0])\n        .uniform('uPosOffset',      'vec2', [0.0, 0.0])\n        .uniform('uFeatureCount',   'int',   0)\n        .uniform('uMarkSize',       'float', 10.0)\n        .uniform('uMarkSpace',      'vec2',  [0.02, 0.02])\n        .uniform('uDefaultAlpha',   'float', 1.0)\n        .uniform('uDefaultWidth',   'float', 1.0 / $p.viewport[0])\n        .uniform('uDefaultHeight',  'float', 1.0 / $p.viewport[1])\n        .uniform('uMaxRGBA',        'vec4',  [0, 0, 0, 0])\n        .uniform('uDefaultColor',   'vec3',  [0.8, 0, 0])\n        .uniform('uColorMode',      'int',   1)\n        .varying('vColorRGBA',      'vec4'   );\n\n    var enhance = reveal($p);\n\n    $p.framebuffer('offScreenFBO', 'float', $p.viewport);\n    $p.framebuffer('visStats', 'float', [1, 1]);\n\n    // $p.framebuffer.enableRead('offScreenFBO');\n    $p.renderMode = 'instancedXY';\n\n    var renderer = render($p);\n\n    function updateInstancedAttribute(vm) {\n        if(Array.isArray(vm)){\n            $p.uniform.uFeatureCount = vm.length;\n            var fv = new Float32Array(vm.length*2);\n            vm.forEach(function(f, i) {\n                fv[i*2] = $p.fields.indexOf(f);\n                fv[i*2+1] = i;\n            });\n            $p.attribute.aDataFieldId = fv;\n        }\n    }\n\n    var viz = function(options) {\n        $p.renderMode = 'instancedXY';\n        $p.revealDensity = false;\n        var vmap = options.vmap || {},\n            mark = options.mark || vmap.mark || 'line',\n            data = options.data || null,\n            interaction = options.interaction,\n            viewIndex = options.viewIndex,\n            viewTag = $p.views[viewIndex].id;\n\n        var visDomain = {},\n            visDimension = vmap.viewport || [$p.views[viewIndex].width, $p.views[viewIndex].height] || viewport;\n\n        var width = visDimension[0],\n            height =  visDimension[1],\n            padding = $p.views[viewIndex].padding || chartPadding,\n            offset = $p.views[viewIndex].offset || [0, 0];\n\n\n        var dimSetting = encode($p, vmap, colorManager);\n\n        if(!$p._update){\n            $p.fields.forEach(function(f, i){\n                visDomain[f] = $p.fieldDomains[i].slice();\n                if(vmap.zero && (f == vmap.height || f == vmap.width ) && visDomain[f][0]>0) visDomain[f][0] = 0;\n            });\n        }\n\n        var gl = $p.program($p.renderMode);\n        $p.framebuffer.enableRead('fFilterResults');\n        $p.framebuffer.enableRead('fDerivedValues');\n        $p.framebuffer.enableRead('fGroupResults');\n\n        if($p.renderMode == 'instancedXY') {\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n        } else if($p.renderMode == 'interleave') {\n            updateInstancedAttribute(vmap.x);\n            updateInstancedAttribute(vmap.y);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataFieldId.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemId.location, 1);\n        } else {\n            var val0 = new Float32Array($p.dataSize),\n                val1 = new Float32Array($p.dataSize);\n            for(var y = 0; y < $p.dataDimension[1]; y++) {\n                for(var x = 0; x < $p.dataDimension[0]; x++) {\n                    val0[y*$p.dataDimension[0] + x] = $p.attribute.aDataValx.data[x];\n                    val1[y*$p.dataDimension[0] + x] = $p.attribute.aDataValy.data[y];\n                }\n            }\n            $p.attribute.aDataItemVal0 = val0;\n            $p.attribute.aDataItemVal1 = val1;\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aVertexId.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemId.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemVal0.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemVal1.location, 1);\n        }\n\n        // if(typeof data == 'string')\n        //     $p.uniform.uDataInput = $p.framebuffer[data].texture;\n        var viewSetting = {\n            domain: visDomain,\n            width: width,\n            height: height,\n            fields: $p.fields,\n            vmap: vmap,\n            onclick: interaction,\n            categories: $p.categoryLookup,\n            padding: padding,\n            left: offset[0],\n            top: viewport[1] - height - offset[1],\n            colors: colorManager.getColors(),\n            showLegend: $p.views[viewIndex].legend\n        };\n\n        viewSetting = Object.assign(viewSetting, dimSetting);\n\n        if($p.revealDensity) {\n            $p.bindFramebuffer('offScreenFBO');\n            gl.clearColor( 1.0, 1.0, 1.0, 0.0 );\n            gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n            gl.blendFunc(gl.ONE, gl.ONE );\n        } else {\n            $p.bindFramebuffer(null);\n            // gl.clearColor( 1.0, 1.0, 1.0, 0.0 );\n            gl.blendFunc( gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n            // gl.blendFunc(gl.SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        gl.viewport(\n            offset[0] + padding.left,\n            offset[1] + padding.bottom,\n            width-padding.left-padding.right,\n            height-padding.top-padding.bottom\n        );\n        gl.lineWidth(1.0);\n\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable( gl.BLEND );\n        gl.blendEquation(gl.FUNC_ADD);\n\n        if(mark == 'stack') {\n            var result = $p.readResult('row');\n            viewSetting.data = result.filter(d=>d[vmap.y]>0);\n            viewSetting.fields = $p.fields;\n            if($p.intervals.hasOwnProperty(vmap.x))\n                viewSetting.isHistogram = true;\n        }\n\n        //TODO: Maybe just save the needed data domains instead of copying all\n        if(!$p._update) {\n            var pv = $p.views[viewIndex];\n            pv.domains = Object.keys(visDomain).map(f=>visDomain[f]);\n            $p.uniform.uVisDomains = pv.domains;\n            if(pv.hasOwnProperty('chart') && typeof pv.chart.svg.remove == 'function') {\n                pv.chart.svg.remove();\n            }\n            pv.chart = vis.addChart(viewSetting);\n        } else {\n            $p.uniform.uVisDomains = $p.views[viewIndex].domains;\n            if(mark == 'stack'){\n                var result = $p.readResult('row');\n                $p.views[viewIndex].chart.update({\n                    data: result\n                })\n            }\n        }\n        var primitive = gl.POINTS;\n        if(['rect', 'bar'].indexOf(mark) !== -1) primitive = gl.TRIANGLES;\n        else if(mark == 'line') primitive = gl.LINE_STRIP;\n\n        function draw() {\n            if($p.renderMode == 'interleave') {\n                var count = $p.attribute.aDataFieldId.data.length / $p.attribute.aDataFieldId.size;\n                gl.ext.drawArraysInstancedANGLE(primitive, 0, count, $p.dataSize);\n            } else if($p.renderMode == 'polygon'){\n                gl.ext.drawArraysInstancedANGLE(primitive, 0, 6, $p.dataSize);\n            } else {\n                if(primitive == gl.LINE_STRIP) {\n                    console.log($p.dataDimension);\n                    gl.ext.drawArraysInstancedANGLE(primitive, 0, $p.dataDimension[0], $p.dataDimension[1]);\n                } else {\n                    gl.ext.drawArraysInstancedANGLE(primitive, 0, $p.dataDimension[0], $p.dataDimension[1]);\n                }\n            }\n        }\n\n        if(mark!='stack') draw();\n        if($p.revealDensity) enhance({\n            viewIndex: viewIndex,\n            dim: [width, height],\n            offset: offset,\n            padding: padding\n        });\n        $p.bindFramebuffer(null);\n\n        if(!$p._update) {\n            var actions = Object.keys(vmap)\n                .filter(function(act){ return userActions.indexOf(act) !== -1});\n\n            actions.forEach(function(action) {\n                var viewId = vmap.id || $p.views[viewIndex].id,\n                    response = {};\n                response[viewId] = vmap[action];\n                $p.interactions.push({\n                    event: action,\n                    condition: vmap[action].condition,\n                    from: viewId,\n                    response: response\n                })\n            })\n        }\n    }\n    viz.chart = vis;\n    return viz;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/visualize.js\n// module id = 52\n// module chunks = 0 1","import {gradients as colorSchemes} from './gradients';\nimport {colorhex} from './colorhex';\n\nconst colorResolution = 256;\nconst colorSetMax = 32;\nconst defaultColorScheme = colorSchemes['viridis'];\nconst defaultColorSet = [\n    [255,187,120], [255,127, 14], [174,199,232], [ 44,160, 44],\n    [ 31,119,180], [255,152,150], [214, 39, 40], [197,176,213],\n    [152,223,138], [148,103,189], [247,182,210], [227,119,194],\n    [196,156,148], [140, 86, 75], [127,127,127], [219,219,141],\n    [199,199,199], [188,189, 34], [158,218,229], [ 23,190,207]\n];\n\nvar gradient = defaultColorScheme,\n    colorset = defaultColorSet;\n\nexport default function color($p) {\n    var colorManager = {};\n\n    $p.uniform('uColorMode',       'int',   0) // 0=categorical, 1=numeric\n        .uniform('uColorCount',    'int',   colorSetMax)\n        .uniform('uColorSet',      'vec3',  setColorTable(colorset))\n        .texture('tColorGraident', 'float', setColorScheme(gradient),  [colorResolution, 1], 'rgba')\n        .subroutine('mapColorRGB', 'vec3',  mapColorRGB);\n\n    colorManager.updateScheme = function(newColors) {\n        if(typeof newColors == 'string' && colorSchemes.hasOwnProperty(newColors)) {\n            gradient = colorSchemes[newColors];\n        } else if(Array.isArray(newColors)) {\n            gradient = newColors;\n        }\n        $p.texture.tColorGraident = setColorScheme(gradient);\n    }\n\n    colorManager.updateTable = function(colors) {\n        colorset = colors;\n        $p.uniform.uColorSet = setColorTable(colors);\n    }\n\n    colorManager.colorTable = defaultColorSet.map(function(t){\n        return rgba2hex(t);\n    });\n\n    colorManager.getColors = function() {\n        if($p.uniform.uColorMode == 0) {\n            return colorset;\n        } else {\n            return gradient;\n        }\n    }\n\n    colorManager.rgb = rgb;\n    colorManager.rgba = rgba;\n\n    return colorManager;\n}\n\nfunction colorStrToHex(colorStr) {\n    if (typeof colorhex[colorStr.toLowerCase()] != 'undefined')\n        return colorhex[colorStr.toLowerCase()];\n    else\n        return false;\n}\n\nfunction rgb(hexStr) {\n    var hex, r, g, b;\n\n    if(hexStr.slice(0,1) == '#')\n        hex = hexStr.slice(1);\n    else\n        hex = colorStrToHex(hexStr).slice(1);\n\n    r = parseInt(hex.substring(0,2), 16) / 255;\n    g = parseInt(hex.substring(2,4), 16) / 255;\n    b = parseInt(hex.substring(4,6), 16) / 255;\n    return [r, g, b];\n}\n\nfunction rgba(hexStr, alpha) {\n    var a = alpha || 1.0,\n        c = rgb(hexStr);\n\n    return [c[0], c[1], c[2], a];\n}\n\nfunction rgba2hex(c) {\n    var r = c[0],\n        g = c[1],\n        b = c[2],\n        a = 1;\n    if (r > 255 || g > 255 || b > 255 || a > 255)\n        throw 'Invalid color component';\n    return (256 + r).toString(16).substr(1) +((1 << 24) + (g << 16) | (b << 8) | a).toString(16).substr(1);\n}\n\nfunction setColorScheme(colors) {\n    var cc = colors.length - 1,\n        step = (cc >= 0) ? colorResolution / (cc+1) : 1,\n        colorGradient = new Float32Array(colorResolution * 4);\n\n    colors.push(colors[cc]);\n    for(var i = 0; i < cc+1; i++) {\n        var c0 = rgba(colors[i]),\n            c1 = rgba(colors[i+1]),\n            offset = Math.floor(i * step)*4;\n\n        for(var x = 0; x < step; x++) {\n            var xi = x / (step);\n            colorGradient[offset+x*4]   = c0[0] + (c1[0] - c0[0]) * xi;\n            colorGradient[offset+x*4+1] = c0[1] + (c1[1] - c0[1]) * xi;\n            colorGradient[offset+x*4+2] = c0[2] + (c1[2] - c0[2]) * xi;\n            colorGradient[offset+x*4+3] = c0[3] + (c1[3] - c0[3]) * xi;\n        }\n    }\n    colors.pop();\n    return colorGradient;\n}\n\nfunction setColorTable(colors) {\n    var colorTable = new Float32Array(colorSetMax * 3),\n        isRgb = false;\n\n    if(colors[0].length == 3) isRgb = true;\n    colors.forEach(function(c, i){\n        var colorValue = c;\n        if(!isRgb) colorValue = rgb(c) * 255;\n        colorTable[i*3] = colorValue[0] / 255;\n        colorTable[i*3+1] = colorValue[1] / 255;\n        colorTable[i*3+2] = colorValue[2] / 255;\n    });\n\n    return colorTable;\n}\n\nfunction mapColorRGB($int_fieldId, $float_value) {\n    var d = new Vec2();\n    var colorRGB = new Vec3();\n    var intValue = new Int();\n    if(fieldId == -1) {\n        colorRGB = this.uDefaultColor;\n    } else {\n        if(this.uColorMode == 1) {\n            colorRGB = texture2D(this.tColorGraident, vec2(value, 1.0)).rgb;\n        } else {\n            d = this.uVisDomains[fieldId];\n            intValue = int(value * (d.y - d.x) + d.x);\n            if(intValue >= this.uColorCount) {\n                colorRGB = vec3(0.0, 0.0, 0.0);\n            } else {\n                colorRGB = this.uColorSet[intValue];\n            }\n        }\n    }\n    return colorRGB;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/color.js\n// module id = 53\n// module chunks = 0 1","export const gradients = {\n    \"inferno\": [\"#000004\", \"#010005\", \"#010106\", \"#010108\", \"#02010a\", \"#02020c\", \"#02020e\", \"#030210\", \"#040312\", \"#040314\", \"#050417\", \"#060419\", \"#07051b\", \"#08051d\", \"#09061f\", \"#0a0722\", \"#0b0724\", \"#0c0826\", \"#0d0829\", \"#0e092b\", \"#10092d\", \"#110a30\", \"#120a32\", \"#140b34\", \"#150b37\", \"#160b39\", \"#180c3c\", \"#190c3e\", \"#1b0c41\", \"#1c0c43\", \"#1e0c45\", \"#1f0c48\", \"#210c4a\", \"#230c4c\", \"#240c4f\", \"#260c51\", \"#280b53\", \"#290b55\", \"#2b0b57\", \"#2d0b59\", \"#2f0a5b\", \"#310a5c\", \"#320a5e\", \"#340a5f\", \"#360961\", \"#380962\", \"#390963\", \"#3b0964\", \"#3d0965\", \"#3e0966\", \"#400a67\", \"#420a68\", \"#440a68\", \"#450a69\", \"#470b6a\", \"#490b6a\", \"#4a0c6b\", \"#4c0c6b\", \"#4d0d6c\", \"#4f0d6c\", \"#510e6c\", \"#520e6d\", \"#540f6d\", \"#550f6d\", \"#57106e\", \"#59106e\", \"#5a116e\", \"#5c126e\", \"#5d126e\", \"#5f136e\", \"#61136e\", \"#62146e\", \"#64156e\", \"#65156e\", \"#67166e\", \"#69166e\", \"#6a176e\", \"#6c186e\", \"#6d186e\", \"#6f196e\", \"#71196e\", \"#721a6e\", \"#741a6e\", \"#751b6e\", \"#771c6d\", \"#781c6d\", \"#7a1d6d\", \"#7c1d6d\", \"#7d1e6d\", \"#7f1e6c\", \"#801f6c\", \"#82206c\", \"#84206b\", \"#85216b\", \"#87216b\", \"#88226a\", \"#8a226a\", \"#8c2369\", \"#8d2369\", \"#8f2469\", \"#902568\", \"#922568\", \"#932667\", \"#952667\", \"#972766\", \"#982766\", \"#9a2865\", \"#9b2964\", \"#9d2964\", \"#9f2a63\", \"#a02a63\", \"#a22b62\", \"#a32c61\", \"#a52c60\", \"#a62d60\", \"#a82e5f\", \"#a92e5e\", \"#ab2f5e\", \"#ad305d\", \"#ae305c\", \"#b0315b\", \"#b1325a\", \"#b3325a\", \"#b43359\", \"#b63458\", \"#b73557\", \"#b93556\", \"#ba3655\", \"#bc3754\", \"#bd3853\", \"#bf3952\", \"#c03a51\", \"#c13a50\", \"#c33b4f\", \"#c43c4e\", \"#c63d4d\", \"#c73e4c\", \"#c83f4b\", \"#ca404a\", \"#cb4149\", \"#cc4248\", \"#ce4347\", \"#cf4446\", \"#d04545\", \"#d24644\", \"#d34743\", \"#d44842\", \"#d54a41\", \"#d74b3f\", \"#d84c3e\", \"#d94d3d\", \"#da4e3c\", \"#db503b\", \"#dd513a\", \"#de5238\", \"#df5337\", \"#e05536\", \"#e15635\", \"#e25734\", \"#e35933\", \"#e45a31\", \"#e55c30\", \"#e65d2f\", \"#e75e2e\", \"#e8602d\", \"#e9612b\", \"#ea632a\", \"#eb6429\", \"#eb6628\", \"#ec6726\", \"#ed6925\", \"#ee6a24\", \"#ef6c23\", \"#ef6e21\", \"#f06f20\", \"#f1711f\", \"#f1731d\", \"#f2741c\", \"#f3761b\", \"#f37819\", \"#f47918\", \"#f57b17\", \"#f57d15\", \"#f67e14\", \"#f68013\", \"#f78212\", \"#f78410\", \"#f8850f\", \"#f8870e\", \"#f8890c\", \"#f98b0b\", \"#f98c0a\", \"#f98e09\", \"#fa9008\", \"#fa9207\", \"#fa9407\", \"#fb9606\", \"#fb9706\", \"#fb9906\", \"#fb9b06\", \"#fb9d07\", \"#fc9f07\", \"#fca108\", \"#fca309\", \"#fca50a\", \"#fca60c\", \"#fca80d\", \"#fcaa0f\", \"#fcac11\", \"#fcae12\", \"#fcb014\", \"#fcb216\", \"#fcb418\", \"#fbb61a\", \"#fbb81d\", \"#fbba1f\", \"#fbbc21\", \"#fbbe23\", \"#fac026\", \"#fac228\", \"#fac42a\", \"#fac62d\", \"#f9c72f\", \"#f9c932\", \"#f9cb35\", \"#f8cd37\", \"#f8cf3a\", \"#f7d13d\", \"#f7d340\", \"#f6d543\", \"#f6d746\", \"#f5d949\", \"#f5db4c\", \"#f4dd4f\", \"#f4df53\", \"#f4e156\", \"#f3e35a\", \"#f3e55d\", \"#f2e661\", \"#f2e865\", \"#f2ea69\", \"#f1ec6d\", \"#f1ed71\", \"#f1ef75\", \"#f1f179\", \"#f2f27d\", \"#f2f482\", \"#f3f586\", \"#f3f68a\", \"#f4f88e\", \"#f5f992\", \"#f6fa96\", \"#f8fb9a\", \"#f9fc9d\", \"#fafda1\", \"#fcffa4\"],\n    \"magma\": [\"#000004\", \"#010005\", \"#010106\", \"#010108\", \"#020109\", \"#02020b\", \"#02020d\", \"#03030f\", \"#030312\", \"#040414\", \"#050416\", \"#060518\", \"#06051a\", \"#07061c\", \"#08071e\", \"#090720\", \"#0a0822\", \"#0b0924\", \"#0c0926\", \"#0d0a29\", \"#0e0b2b\", \"#100b2d\", \"#110c2f\", \"#120d31\", \"#130d34\", \"#140e36\", \"#150e38\", \"#160f3b\", \"#180f3d\", \"#19103f\", \"#1a1042\", \"#1c1044\", \"#1d1147\", \"#1e1149\", \"#20114b\", \"#21114e\", \"#221150\", \"#241253\", \"#251255\", \"#271258\", \"#29115a\", \"#2a115c\", \"#2c115f\", \"#2d1161\", \"#2f1163\", \"#311165\", \"#331067\", \"#341069\", \"#36106b\", \"#38106c\", \"#390f6e\", \"#3b0f70\", \"#3d0f71\", \"#3f0f72\", \"#400f74\", \"#420f75\", \"#440f76\", \"#451077\", \"#471078\", \"#491078\", \"#4a1079\", \"#4c117a\", \"#4e117b\", \"#4f127b\", \"#51127c\", \"#52137c\", \"#54137d\", \"#56147d\", \"#57157e\", \"#59157e\", \"#5a167e\", \"#5c167f\", \"#5d177f\", \"#5f187f\", \"#601880\", \"#621980\", \"#641a80\", \"#651a80\", \"#671b80\", \"#681c81\", \"#6a1c81\", \"#6b1d81\", \"#6d1d81\", \"#6e1e81\", \"#701f81\", \"#721f81\", \"#732081\", \"#752181\", \"#762181\", \"#782281\", \"#792282\", \"#7b2382\", \"#7c2382\", \"#7e2482\", \"#802582\", \"#812581\", \"#832681\", \"#842681\", \"#862781\", \"#882781\", \"#892881\", \"#8b2981\", \"#8c2981\", \"#8e2a81\", \"#902a81\", \"#912b81\", \"#932b80\", \"#942c80\", \"#962c80\", \"#982d80\", \"#992d80\", \"#9b2e7f\", \"#9c2e7f\", \"#9e2f7f\", \"#a02f7f\", \"#a1307e\", \"#a3307e\", \"#a5317e\", \"#a6317d\", \"#a8327d\", \"#aa337d\", \"#ab337c\", \"#ad347c\", \"#ae347b\", \"#b0357b\", \"#b2357b\", \"#b3367a\", \"#b5367a\", \"#b73779\", \"#b83779\", \"#ba3878\", \"#bc3978\", \"#bd3977\", \"#bf3a77\", \"#c03a76\", \"#c23b75\", \"#c43c75\", \"#c53c74\", \"#c73d73\", \"#c83e73\", \"#ca3e72\", \"#cc3f71\", \"#cd4071\", \"#cf4070\", \"#d0416f\", \"#d2426f\", \"#d3436e\", \"#d5446d\", \"#d6456c\", \"#d8456c\", \"#d9466b\", \"#db476a\", \"#dc4869\", \"#de4968\", \"#df4a68\", \"#e04c67\", \"#e24d66\", \"#e34e65\", \"#e44f64\", \"#e55064\", \"#e75263\", \"#e85362\", \"#e95462\", \"#ea5661\", \"#eb5760\", \"#ec5860\", \"#ed5a5f\", \"#ee5b5e\", \"#ef5d5e\", \"#f05f5e\", \"#f1605d\", \"#f2625d\", \"#f2645c\", \"#f3655c\", \"#f4675c\", \"#f4695c\", \"#f56b5c\", \"#f66c5c\", \"#f66e5c\", \"#f7705c\", \"#f7725c\", \"#f8745c\", \"#f8765c\", \"#f9785d\", \"#f9795d\", \"#f97b5d\", \"#fa7d5e\", \"#fa7f5e\", \"#fa815f\", \"#fb835f\", \"#fb8560\", \"#fb8761\", \"#fc8961\", \"#fc8a62\", \"#fc8c63\", \"#fc8e64\", \"#fc9065\", \"#fd9266\", \"#fd9467\", \"#fd9668\", \"#fd9869\", \"#fd9a6a\", \"#fd9b6b\", \"#fe9d6c\", \"#fe9f6d\", \"#fea16e\", \"#fea36f\", \"#fea571\", \"#fea772\", \"#fea973\", \"#feaa74\", \"#feac76\", \"#feae77\", \"#feb078\", \"#feb27a\", \"#feb47b\", \"#feb67c\", \"#feb77e\", \"#feb97f\", \"#febb81\", \"#febd82\", \"#febf84\", \"#fec185\", \"#fec287\", \"#fec488\", \"#fec68a\", \"#fec88c\", \"#feca8d\", \"#fecc8f\", \"#fecd90\", \"#fecf92\", \"#fed194\", \"#fed395\", \"#fed597\", \"#fed799\", \"#fed89a\", \"#fdda9c\", \"#fddc9e\", \"#fddea0\", \"#fde0a1\", \"#fde2a3\", \"#fde3a5\", \"#fde5a7\", \"#fde7a9\", \"#fde9aa\", \"#fdebac\", \"#fcecae\", \"#fceeb0\", \"#fcf0b2\", \"#fcf2b4\", \"#fcf4b6\", \"#fcf6b8\", \"#fcf7b9\", \"#fcf9bb\", \"#fcfbbd\", \"#fcfdbf\"],\n    \"plasma\": [\"#0d0887\", \"#100788\", \"#130789\", \"#16078a\", \"#19068c\", \"#1b068d\", \"#1d068e\", \"#20068f\", \"#220690\", \"#240691\", \"#260591\", \"#280592\", \"#2a0593\", \"#2c0594\", \"#2e0595\", \"#2f0596\", \"#310597\", \"#330597\", \"#350498\", \"#370499\", \"#38049a\", \"#3a049a\", \"#3c049b\", \"#3e049c\", \"#3f049c\", \"#41049d\", \"#43039e\", \"#44039e\", \"#46039f\", \"#48039f\", \"#4903a0\", \"#4b03a1\", \"#4c02a1\", \"#4e02a2\", \"#5002a2\", \"#5102a3\", \"#5302a3\", \"#5502a4\", \"#5601a4\", \"#5801a4\", \"#5901a5\", \"#5b01a5\", \"#5c01a6\", \"#5e01a6\", \"#6001a6\", \"#6100a7\", \"#6300a7\", \"#6400a7\", \"#6600a7\", \"#6700a8\", \"#6900a8\", \"#6a00a8\", \"#6c00a8\", \"#6e00a8\", \"#6f00a8\", \"#7100a8\", \"#7201a8\", \"#7401a8\", \"#7501a8\", \"#7701a8\", \"#7801a8\", \"#7a02a8\", \"#7b02a8\", \"#7d03a8\", \"#7e03a8\", \"#8004a8\", \"#8104a7\", \"#8305a7\", \"#8405a7\", \"#8606a6\", \"#8707a6\", \"#8808a6\", \"#8a09a5\", \"#8b0aa5\", \"#8d0ba5\", \"#8e0ca4\", \"#8f0da4\", \"#910ea3\", \"#920fa3\", \"#9410a2\", \"#9511a1\", \"#9613a1\", \"#9814a0\", \"#99159f\", \"#9a169f\", \"#9c179e\", \"#9d189d\", \"#9e199d\", \"#a01a9c\", \"#a11b9b\", \"#a21d9a\", \"#a31e9a\", \"#a51f99\", \"#a62098\", \"#a72197\", \"#a82296\", \"#aa2395\", \"#ab2494\", \"#ac2694\", \"#ad2793\", \"#ae2892\", \"#b02991\", \"#b12a90\", \"#b22b8f\", \"#b32c8e\", \"#b42e8d\", \"#b52f8c\", \"#b6308b\", \"#b7318a\", \"#b83289\", \"#ba3388\", \"#bb3488\", \"#bc3587\", \"#bd3786\", \"#be3885\", \"#bf3984\", \"#c03a83\", \"#c13b82\", \"#c23c81\", \"#c33d80\", \"#c43e7f\", \"#c5407e\", \"#c6417d\", \"#c7427c\", \"#c8437b\", \"#c9447a\", \"#ca457a\", \"#cb4679\", \"#cc4778\", \"#cc4977\", \"#cd4a76\", \"#ce4b75\", \"#cf4c74\", \"#d04d73\", \"#d14e72\", \"#d24f71\", \"#d35171\", \"#d45270\", \"#d5536f\", \"#d5546e\", \"#d6556d\", \"#d7566c\", \"#d8576b\", \"#d9586a\", \"#da5a6a\", \"#da5b69\", \"#db5c68\", \"#dc5d67\", \"#dd5e66\", \"#de5f65\", \"#de6164\", \"#df6263\", \"#e06363\", \"#e16462\", \"#e26561\", \"#e26660\", \"#e3685f\", \"#e4695e\", \"#e56a5d\", \"#e56b5d\", \"#e66c5c\", \"#e76e5b\", \"#e76f5a\", \"#e87059\", \"#e97158\", \"#e97257\", \"#ea7457\", \"#eb7556\", \"#eb7655\", \"#ec7754\", \"#ed7953\", \"#ed7a52\", \"#ee7b51\", \"#ef7c51\", \"#ef7e50\", \"#f07f4f\", \"#f0804e\", \"#f1814d\", \"#f1834c\", \"#f2844b\", \"#f3854b\", \"#f3874a\", \"#f48849\", \"#f48948\", \"#f58b47\", \"#f58c46\", \"#f68d45\", \"#f68f44\", \"#f79044\", \"#f79143\", \"#f79342\", \"#f89441\", \"#f89540\", \"#f9973f\", \"#f9983e\", \"#f99a3e\", \"#fa9b3d\", \"#fa9c3c\", \"#fa9e3b\", \"#fb9f3a\", \"#fba139\", \"#fba238\", \"#fca338\", \"#fca537\", \"#fca636\", \"#fca835\", \"#fca934\", \"#fdab33\", \"#fdac33\", \"#fdae32\", \"#fdaf31\", \"#fdb130\", \"#fdb22f\", \"#fdb42f\", \"#fdb52e\", \"#feb72d\", \"#feb82c\", \"#feba2c\", \"#febb2b\", \"#febd2a\", \"#febe2a\", \"#fec029\", \"#fdc229\", \"#fdc328\", \"#fdc527\", \"#fdc627\", \"#fdc827\", \"#fdca26\", \"#fdcb26\", \"#fccd25\", \"#fcce25\", \"#fcd025\", \"#fcd225\", \"#fbd324\", \"#fbd524\", \"#fbd724\", \"#fad824\", \"#fada24\", \"#f9dc24\", \"#f9dd25\", \"#f8df25\", \"#f8e125\", \"#f7e225\", \"#f7e425\", \"#f6e626\", \"#f6e826\", \"#f5e926\", \"#f5eb27\", \"#f4ed27\", \"#f3ee27\", \"#f3f027\", \"#f2f227\", \"#f1f426\", \"#f1f525\", \"#f0f724\", \"#f0f921\"],\n    \"viridis\": [\"#440154\", \"#440256\", \"#450457\", \"#450559\", \"#46075a\", \"#46085c\", \"#460a5d\", \"#460b5e\", \"#470d60\", \"#470e61\", \"#471063\", \"#471164\", \"#471365\", \"#481467\", \"#481668\", \"#481769\", \"#48186a\", \"#481a6c\", \"#481b6d\", \"#481c6e\", \"#481d6f\", \"#481f70\", \"#482071\", \"#482173\", \"#482374\", \"#482475\", \"#482576\", \"#482677\", \"#482878\", \"#482979\", \"#472a7a\", \"#472c7a\", \"#472d7b\", \"#472e7c\", \"#472f7d\", \"#46307e\", \"#46327e\", \"#46337f\", \"#463480\", \"#453581\", \"#453781\", \"#453882\", \"#443983\", \"#443a83\", \"#443b84\", \"#433d84\", \"#433e85\", \"#423f85\", \"#424086\", \"#424186\", \"#414287\", \"#414487\", \"#404588\", \"#404688\", \"#3f4788\", \"#3f4889\", \"#3e4989\", \"#3e4a89\", \"#3e4c8a\", \"#3d4d8a\", \"#3d4e8a\", \"#3c4f8a\", \"#3c508b\", \"#3b518b\", \"#3b528b\", \"#3a538b\", \"#3a548c\", \"#39558c\", \"#39568c\", \"#38588c\", \"#38598c\", \"#375a8c\", \"#375b8d\", \"#365c8d\", \"#365d8d\", \"#355e8d\", \"#355f8d\", \"#34608d\", \"#34618d\", \"#33628d\", \"#33638d\", \"#32648e\", \"#32658e\", \"#31668e\", \"#31678e\", \"#31688e\", \"#30698e\", \"#306a8e\", \"#2f6b8e\", \"#2f6c8e\", \"#2e6d8e\", \"#2e6e8e\", \"#2e6f8e\", \"#2d708e\", \"#2d718e\", \"#2c718e\", \"#2c728e\", \"#2c738e\", \"#2b748e\", \"#2b758e\", \"#2a768e\", \"#2a778e\", \"#2a788e\", \"#29798e\", \"#297a8e\", \"#297b8e\", \"#287c8e\", \"#287d8e\", \"#277e8e\", \"#277f8e\", \"#27808e\", \"#26818e\", \"#26828e\", \"#26828e\", \"#25838e\", \"#25848e\", \"#25858e\", \"#24868e\", \"#24878e\", \"#23888e\", \"#23898e\", \"#238a8d\", \"#228b8d\", \"#228c8d\", \"#228d8d\", \"#218e8d\", \"#218f8d\", \"#21908d\", \"#21918c\", \"#20928c\", \"#20928c\", \"#20938c\", \"#1f948c\", \"#1f958b\", \"#1f968b\", \"#1f978b\", \"#1f988b\", \"#1f998a\", \"#1f9a8a\", \"#1e9b8a\", \"#1e9c89\", \"#1e9d89\", \"#1f9e89\", \"#1f9f88\", \"#1fa088\", \"#1fa188\", \"#1fa187\", \"#1fa287\", \"#20a386\", \"#20a486\", \"#21a585\", \"#21a685\", \"#22a785\", \"#22a884\", \"#23a983\", \"#24aa83\", \"#25ab82\", \"#25ac82\", \"#26ad81\", \"#27ad81\", \"#28ae80\", \"#29af7f\", \"#2ab07f\", \"#2cb17e\", \"#2db27d\", \"#2eb37c\", \"#2fb47c\", \"#31b57b\", \"#32b67a\", \"#34b679\", \"#35b779\", \"#37b878\", \"#38b977\", \"#3aba76\", \"#3bbb75\", \"#3dbc74\", \"#3fbc73\", \"#40bd72\", \"#42be71\", \"#44bf70\", \"#46c06f\", \"#48c16e\", \"#4ac16d\", \"#4cc26c\", \"#4ec36b\", \"#50c46a\", \"#52c569\", \"#54c568\", \"#56c667\", \"#58c765\", \"#5ac864\", \"#5cc863\", \"#5ec962\", \"#60ca60\", \"#63cb5f\", \"#65cb5e\", \"#67cc5c\", \"#69cd5b\", \"#6ccd5a\", \"#6ece58\", \"#70cf57\", \"#73d056\", \"#75d054\", \"#77d153\", \"#7ad151\", \"#7cd250\", \"#7fd34e\", \"#81d34d\", \"#84d44b\", \"#86d549\", \"#89d548\", \"#8bd646\", \"#8ed645\", \"#90d743\", \"#93d741\", \"#95d840\", \"#98d83e\", \"#9bd93c\", \"#9dd93b\", \"#a0da39\", \"#a2da37\", \"#a5db36\", \"#a8db34\", \"#aadc32\", \"#addc30\", \"#b0dd2f\", \"#b2dd2d\", \"#b5de2b\", \"#b8de29\", \"#bade28\", \"#bddf26\", \"#c0df25\", \"#c2df23\", \"#c5e021\", \"#c8e020\", \"#cae11f\", \"#cde11d\", \"#d0e11c\", \"#d2e21b\", \"#d5e21a\", \"#d8e219\", \"#dae319\", \"#dde318\", \"#dfe318\", \"#e2e418\", \"#e5e419\", \"#e7e419\", \"#eae51a\", \"#ece51b\", \"#efe51c\", \"#f1e51d\", \"#f4e61e\", \"#f6e620\", \"#f8e621\", \"#fbe723\", \"#fde725\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/gradients.js\n// module id = 54\n// module chunks = 0 1","export const colorhex = {\n    \"aliceblue\": \"#f0f8ff\",\n    \"antiquewhite\": \"#faebd7\",\n    \"aqua\": \"#00ffff\",\n    \"aquamarine\": \"#7fffd4\",\n    \"azure\": \"#f0ffff\",\n    \"beige\": \"#f5f5dc\",\n    \"bisque\": \"#ffe4c4\",\n    \"black\": \"#000000\",\n    \"blanchedalmond\": \"#ffebcd\",\n    \"blue\": \"#0000ff\",\n    \"blueviolet\": \"#8a2be2\",\n    \"brown\": \"#a52a2a\",\n    \"burlywood\": \"#deb887\",\n    \"cadetblue\": \"#5f9ea0\",\n    \"chartreuse\": \"#7fff00\",\n    \"chocolate\": \"#d2691e\",\n    \"coral\": \"#ff7f50\",\n    \"cornflowerblue\": \"#6495ed\",\n    \"cornsilk\": \"#fff8dc\",\n    \"crimson\": \"#dc143c\",\n    \"cyan\": \"#00ffff\",\n    \"darkblue\": \"#00008b\",\n    \"darkcyan\": \"#008b8b\",\n    \"darkgoldenrod\": \"#b8860b\",\n    \"darkgray\": \"#a9a9a9\",\n    \"darkgreen\": \"#006400\",\n    \"darkkhaki\": \"#bdb76b\",\n    \"darkmagenta\": \"#8b008b\",\n    \"darkolivegreen\": \"#556b2f\",\n    \"darkorange\": \"#ff8c00\",\n    \"darkorchid\": \"#9932cc\",\n    \"darkred\": \"#8b0000\",\n    \"darksalmon\": \"#e9967a\",\n    \"darkseagreen\": \"#8fbc8f\",\n    \"darkslateblue\": \"#483d8b\",\n    \"darkslategray\": \"#2f4f4f\",\n    \"darkturquoise\": \"#00ced1\",\n    \"darkviolet\": \"#9400d3\",\n    \"deeppink\": \"#ff1493\",\n    \"deepskyblue\": \"#00bfff\",\n    \"dimgray\": \"#696969\",\n    \"dodgerblue\": \"#1e90ff\",\n    \"firebrick\": \"#b22222\",\n    \"floralwhite\": \"#fffaf0\",\n    \"forestgreen\": \"#228b22\",\n    \"fuchsia\": \"#ff00ff\",\n    \"gainsboro\": \"#dcdcdc\",\n    \"ghostwhite\": \"#f8f8ff\",\n    \"gold\": \"#ffd700\",\n    \"goldenrod\": \"#daa520\",\n    \"gray\": \"#808080\",\n    \"green\": \"#008000\",\n    \"greenyellow\": \"#adff2f\",\n    \"honeydew\": \"#f0fff0\",\n    \"hotpink\": \"#ff69b4\",\n    \"indianred \": \"#cd5c5c\",\n    \"indigo\": \"#4b0082\",\n    \"ivory\": \"#fffff0\",\n    \"khaki\": \"#f0e68c\",\n    \"lavender\": \"#e6e6fa\",\n    \"lavenderblush\": \"#fff0f5\",\n    \"lawngreen\": \"#7cfc00\",\n    \"lemonchiffon\": \"#fffacd\",\n    \"lightblue\": \"#add8e6\",\n    \"lightcoral\": \"#f08080\",\n    \"lightcyan\": \"#e0ffff\",\n    \"lightgoldenrodyellow\": \"#fafad2\",\n    \"lightgrey\": \"#d3d3d3\",\n    \"lightgreen\": \"#90ee90\",\n    \"lightpink\": \"#ffb6c1\",\n    \"lightsalmon\": \"#ffa07a\",\n    \"lightseagreen\": \"#20b2aa\",\n    \"lightskyblue\": \"#87cefa\",\n    \"lightslategray\": \"#778899\",\n    \"lightsteelblue\": \"#b0c4de\",\n    \"lightyellow\": \"#ffffe0\",\n    \"lime\": \"#00ff00\",\n    \"limegreen\": \"#32cd32\",\n    \"linen\": \"#faf0e6\",\n    \"magenta\": \"#ff00ff\",\n    \"maroon\": \"#800000\",\n    \"mediumaquamarine\": \"#66cdaa\",\n    \"mediumblue\": \"#0000cd\",\n    \"mediumorchid\": \"#ba55d3\",\n    \"mediumpurple\": \"#9370d8\",\n    \"mediumseagreen\": \"#3cb371\",\n    \"mediumslateblue\": \"#7b68ee\",\n    \"mediumspringgreen\": \"#00fa9a\",\n    \"mediumturquoise\": \"#48d1cc\",\n    \"mediumvioletred\": \"#c71585\",\n    \"midnightblue\": \"#191970\",\n    \"mintcream\": \"#f5fffa\",\n    \"mistyrose\": \"#ffe4e1\",\n    \"moccasin\": \"#ffe4b5\",\n    \"navajowhite\": \"#ffdead\",\n    \"navy\": \"#000080\",\n    \"oldlace\": \"#fdf5e6\",\n    \"olive\": \"#808000\",\n    \"olivedrab\": \"#6b8e23\",\n    \"orange\": \"#ffa500\",\n    \"orangered\": \"#ff4500\",\n    \"orchid\": \"#da70d6\",\n    \"palegoldenrod\": \"#eee8aa\",\n    \"palegreen\": \"#98fb98\",\n    \"paleturquoise\": \"#afeeee\",\n    \"palevioletred\": \"#d87093\",\n    \"papayawhip\": \"#ffefd5\",\n    \"peachpuff\": \"#ffdab9\",\n    \"peru\": \"#cd853f\",\n    \"pink\": \"#ffc0cb\",\n    \"plum\": \"#dda0dd\",\n    \"powderblue\": \"#b0e0e6\",\n    \"purple\": \"#800080\",\n    \"red\": \"#ff0000\",\n    \"rosybrown\": \"#bc8f8f\",\n    \"royalblue\": \"#4169e1\",\n    \"saddlebrown\": \"#8b4513\",\n    \"salmon\": \"#fa8072\",\n    \"sandybrown\": \"#f4a460\",\n    \"seagreen\": \"#2e8b57\",\n    \"seashell\": \"#fff5ee\",\n    \"sienna\": \"#a0522d\",\n    \"silver\": \"#c0c0c0\",\n    \"skyblue\": \"#87ceeb\",\n    \"slateblue\": \"#6a5acd\",\n    \"slategray\": \"#708090\",\n    \"snow\": \"#fffafa\",\n    \"springgreen\": \"#00ff7f\",\n    \"steelblue\": \"#4682b4\",\n    \"tan\": \"#d2b48c\",\n    \"teal\": \"#008080\",\n    \"thistle\": \"#d8bfd8\",\n    \"tomato\": \"#ff6347\",\n    \"turquoise\": \"#40e0d0\",\n    \"violet\": \"#ee82ee\",\n    \"wheat\": \"#f5deb3\",\n    \"white\": \"#ffffff\",\n    \"whitesmoke\": \"#f5f5f5\",\n    \"yellow\": \"#ffff00\",\n    \"yellowgreen\": \"#9acd32\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/colorhex.js\n// module id = 55\n// module chunks = 0 1","function visMap(\n    $int_fieldId,\n    $float_addrX,\n    $float_addrY,\n    $float_indexedValue0,\n    $float_indexedValue1,\n    $float_defaultValue,\n    $float_exp\n){\n    var value;\n    var d = new Vec2();\n    if(fieldId > -1) {\n        if(fieldId >= this.uIndexCount) {\n            value = this.getNonIndexedData(fieldId, addrX, addrY);\n        } else if(fieldId < this.uIndexCount) {\n            value = (fieldId == 0) ? indexedValue0 : indexedValue1;\n        }\n        if(exp != 0.0) {\n            value = pow(value, exp);\n        }\n        d = this.uVisDomains[fieldId];\n        value = (value - d.x) / (d.y - d.x);\n    } else {\n        value = defaultValue;\n    }\n    return value;\n};\n\nvar instancedXY = {};\ninstancedXY.vs  = function() {\n    var i, j, posX, posY, color, alpha, width, height, size;\n    var rgb = new Vec3();\n\n    i = (this.aDataIdx+0.5) / this.uDataDim.x;\n    j = (this.aDataIdy+0.5) / this.uDataDim.y;\n\n    if(this.uFilterFlag == 1) {\n        this.vResult = texture2D(this.fFilterResults, vec2(i, j)).a;\n    } else {\n        this.vResult = this.uVisLevel;\n    }\n\n    posX = this.visMap(this.uVisualEncodings[0], i, j, this.aDataValx, this.aDataValy, 0.0, 0.0);\n    posY = this.visMap(this.uVisualEncodings[1], i, j, this.aDataValx, this.aDataValy, 0.0,  0.0);\n    color = this.visMap(this.uVisualEncodings[2], i, j, this.aDataValx, this.aDataValy, -1.0,  0.0);\n    alpha = this.visMap(this.uVisualEncodings[3], i, j, this.aDataValx, this.aDataValy, this.uDefaultAlpha, 0.0);\n    size = this.visMap(this.uVisualEncodings[6], i, j, this.aDataValx, this.aDataValy, 1.0,  0.0);\n\n    posX = posX * 2.0 - 1.0;\n    posY = posY * 2.0 - 1.0;\n\n    rgb = this.mapColorRGB(this.uVisualEncodings[2], color);\n    gl_PointSize = size * this.uMarkSize;\n    this.vColorRGBA = vec4(rgb, alpha);\n    gl_Position = vec4(posX, posY , 0.0, 1.0);\n};\n\ninstancedXY.fs = function() {\n    var valid = new Bool();\n    valid = this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01;\n    if(this.uVisShape == 1) {\n        var dist = length(gl_PointCoord.xy - vec2(0.5, 0.5));\n        if (dist > 0.5) discard;\n        var delta = 0.15;\n        var alpha = this.vColorRGBA.a - smoothstep(0.5-delta, 0.5, dist);\n        if( this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01) {\n            gl_FragColor = vec4(this.vColorRGBA.rgb*alpha, alpha);\n        } else {\n            discard;\n        }\n    } else {\n        if( this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01) {\n            gl_FragColor = vec4(this.vColorRGBA.rgb * this.vColorRGBA.a,  this.vColorRGBA.a);\n        } else {\n            discard;\n        }\n    }\n\n}\n\nvar interleave = {};\ninterleave.vs = function(){\n    var i, j;\n    var rgb = new Vec3();\n    var posX, posY, size, color, alpha;\n    gl_PointSize = this.uMarkSize;\n    i = (mod(this.aDataItemId, this.uDataDim.x) + 0.5) / this.uDataDim.x;\n    j = (floor(this.aDataItemId / this.uDataDim.x) + 0.5) / this.uDataDim.y;\n\n    this.vResult = this.uVisLevel;\n    if(this.uFilterFlag == 1) {\n        this.vResult = texture2D(this.fFilterResults, vec2(i, j)).a;\n    }\n    if(this.uInterleaveX == 1) {\n        posX = this.aDataFieldId.y / float(this.uFeatureCount-1);\n        posY = this.visMap(int(this.aDataFieldId.x), i, j, i, j, 1.0,  0.0);\n    } else {\n        posY = 1.0 - this.aDataFieldId.y / float(this.uFeatureCount-1);\n        posX = this.visMap(int(this.aDataFieldId.x), i, j, i, j, 1.0,  0.0);\n    }\n    color = this.visMap(this.uVisualEncodings[2], i, j, i, j, -1.0,  0.0);\n    alpha = this.visMap(this.uVisualEncodings[3], i, j, i, j, this.uDefaultAlpha, 0.0);\n\n    posX = posX * 2.0 - 1.0;\n    posY = posY * 2.0 - 1.0;\n\n    rgb = this.mapColorRGB(this.uVisualEncodings[2], color);\n    this.vColorRGBA = vec4(rgb*alpha, alpha);\n\n    gl_Position = vec4(posX, posY, 0.0, 1.0);\n}\n\ninterleave.fs = function() {\n    if(this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01)\n        gl_FragColor = this.vColorRGBA;\n    else\n        discard;\n}\n\nvar polygon = {};\npolygon.vs = function(){\n    var i, j;\n    var rgb = new Vec3();\n    var posX, posY, color, alpha, width, height, size;\n    i = (mod(this.aDataItemId, this.uDataDim.x) + 0.5) / this.uDataDim.x;\n    j = (floor(this.aDataItemId / this.uDataDim.x) + 0.5) / this.uDataDim.y;\n\n    this.vResult = this.uVisLevel;\n\n    if(this.uFilterFlag == 1) {\n        this.vResult = texture2D(this.fFilterResults, vec2(i, j)).a;\n    }\n    var val0, val1;\n    val0 = this.aDataItemVal0;\n    val1 = this.aDataItemVal1;\n    posX = this.visMap(this.uVisualEncodings[0], i, j, val0, val1, 0.0, 0.0);\n    posY = this.visMap(this.uVisualEncodings[1], i, j, val0, val1, 0.0,  0.0);\n    color = this.visMap(this.uVisualEncodings[2], i, j, val0, val1, -1.0,  0.0);\n    alpha = this.visMap(this.uVisualEncodings[3], i, j,  val0, val1, this.uDefaultAlpha, 0.0);\n    width = this.visMap(this.uVisualEncodings[4], i, j,  val0, val1, this.uDefaultWidth, 0.0);\n    height = this.visMap(this.uVisualEncodings[5], i, j,  val0, val1, this.uDefaultHeight, 0.0);\n    size = this.visMap(this.uVisualEncodings[6], i, j, val0, val1, this.uMarkSize,  0.0);\n    posX = posX * (this.uFieldWidths[this.uVisualEncodings[0]] - 1.0) / this.uFieldWidths[this.uVisualEncodings[0]];\n    posY = posY * (this.uFieldWidths[this.uVisualEncodings[1]] - 1.0) / this.uFieldWidths[this.uVisualEncodings[1]];\n\n    width *= 1.0 - this.uMarkSpace.x * 2.0;\n    height *= 1.0 - this.uMarkSpace.y * 2.0;\n    posX -= this.uMarkSpace.x * width;\n    posY += this.uMarkSpace.y * height;\n\n    if(this.aVertexId == 0.0 || this.aVertexId == 3.0) {\n        posX = posX * 2.0 - 1.0;\n        posY = posY * 2.0 - 1.0;\n    } else if(this.aVertexId == 1.0) {\n        posX = posX * 2.0 - 1.0;\n        posY = (posY + height) * 2.0 - 1.0;\n    } else if(this.aVertexId == 2.0 || this.aVertexId == 5.0) {\n        posX = (posX + width) * 2.0 - 1.0;\n        posY = (posY + height) * 2.0 - 1.0;\n    } else if(this.aVertexId == 4.0) {\n        posX = (posX + width) * 2.0 - 1.0;\n        posY = posY * 2.0 - 1.0;\n    } else {\n        posX = posX * 2.0 - 1.0;\n        posY = posY * 2.0 - 1.0;\n    }\n\n    rgb = this.mapColorRGB(this.uVisualEncodings[2], color);\n    this.vColorRGBA = vec4(rgb*alpha, alpha);\n    gl_Position = vec4(posX, posY, 0.0, 1.0);\n}\n\npolygon.fs = function() {\n    if(this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01)\n        gl_FragColor = this.vColorRGBA;\n    else\n        discard;\n}\n\nexport default function render(fxgl) {\n    fxgl.subroutine('visMap', 'float', visMap);\n    fxgl.program(\"instancedXY\",\n        fxgl.shader.vertex(instancedXY.vs),\n        fxgl.shader.fragment(instancedXY.fs)\n    );\n    fxgl.program(\n        \"interleave\",\n        fxgl.shader.vertex(interleave.vs),\n        fxgl.shader.fragment(interleave.fs)\n    );\n    fxgl.program(\n        \"polygon\",\n        fxgl.shader.vertex(polygon.vs),\n        fxgl.shader.fragment(polygon.fs)\n    );\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/render.js\n// module id = 56\n// module chunks = 0 1","const visualEncodings = ['x', 'y', 'color', 'opacity', 'width', 'height', 'size'];\n\nexport default function encode($p, vmap, colorManager) {\n    var opacity = vmap.opacity || vmap.alpha;\n    var vmapIndex = new Int32Array(visualEncodings.length);\n    visualEncodings.forEach(function(code, codeIndex){\n        vmapIndex[codeIndex] = $p.fields.indexOf(vmap[code]);\n    })\n    $p.uniform.uVisualEncodings.data = vmapIndex;\n    $p.uniform.uDefaultAlpha.data = 1.0;\n    if(vmapIndex[2] === -1) {\n        if (typeof(vmap.color) === 'string'){\n            if(vmap.color === 'auto') {\n                $p.revealDensity = true;\n                $p.uniform.uRevealMode.data = 1;\n            } else {\n                $p.uniform.uDefaultColor.data = colorManager.rgb(vmap.color);\n            }\n        } else {\n            if(typeof(vmap.size) == 'number') {\n                $p.uniform.uMarkSize = vmap.size;\n            }\n        }\n    } else {\n        if($p.categoryLookup.hasOwnProperty(vmap.color)) {\n            $p.uniform.uColorMode = 0;\n        } else {\n            $p.uniform.uColorMode = 1;\n        }\n    }\n\n    if(typeof(opacity) === 'number') {\n        $p.uniform.uDefaultAlpha.data = opacity;\n    } else if(vmapIndex[3] === -1 &&\n        typeof(opacity) == 'string' &&\n        opacity == 'auto'\n    ) {\n        $p.revealDensity = true;\n        $p.uniform.uRevealMode.data = 0;\n    }\n\n    //Check if need interleaving data attributes(e.g.,parallel coordinates)\n    if(Array.isArray(vmap.x) || Array.isArray(vmap.y)) {\n        $p.renderMode = 'interleave';\n        if(Array.isArray(vmap.x)){\n            // vmap.x = vmap.x.reverse();\n            $p.uniform.uInterleaveX = 0;\n        }\n        if(Array.isArray(vmap.y)) $p.uniform.uInterleaveX = 1;\n    } else if(vmap.mark && ['rect', 'bar'].indexOf(vmap.mark) !== -1) {\n        $p.renderMode = 'polygon';\n    }\n\n    if(vmapIndex[6] === -1 && typeof(vmap.size) == 'number') {\n        $p.uniform.uMarkSize = vmap.size;\n    }\n\n    var viewSetting = {};\n    var isRect = (['rect', 'bar'].indexOf(vmap.mark) !== -1);\n    var markSpace = [0, 0];\n    if(vmapIndex[0] > -1) {\n        var len = $p.fieldWidths[vmapIndex[0]],\n            ext = $p.fieldDomains[vmapIndex[0]];\n        if($p.categoryLookup.hasOwnProperty(vmap.x)){\n            viewSetting.scaleX = 'categorical';\n             viewSetting.domainX = new Array(len).fill(0).map(\n                 (d,i)=>$p.categoryLookup[vmap.x][i]\n             );\n         } else if (isRect) {\n             viewSetting.scaleX = 'ordinal';\n             viewSetting.domainX = new Array(len).fill(0).map((d,i)=>ext[0] + i);\n         }\n         markSpace[0] = 0.02;\n    }\n    if(vmapIndex[1] > -1) {\n        var len = $p.fieldWidths[vmapIndex[1]],\n            ext = $p.fieldDomains[vmapIndex[1]];\n\n        if($p.categoryLookup.hasOwnProperty(vmap.y)){\n             viewSetting.scaleY = 'categorical';\n             viewSetting.domainY = new Array(len).fill(0).map(\n                 (d,i)=>$p.categoryLookup[vmap.y][i]\n             ).reverse();\n        } else if (isRect) {\n            viewSetting.scaleY = 'ordinal';\n            viewSetting.domainY = new Array(len).fill(0).map((d,i)=>ext[0] + i).reverse();\n        }\n        markSpace[1] = 0.02;\n    }\n\n    if(vmapIndex[0] > -1 && vmapIndex[1] > -1) {\n        markSpace = [0, 0];\n    }\n\n    $p.uniform.uMarkSpace.data = markSpace;\n\n    if($p.intervals.hasOwnProperty(vmap.x) || $p.intervals.hasOwnProperty(vmap.y)) {\n        var histDim = vmap.x || vmap.y,\n            histMin = $p.intervals[histDim].min,\n            histMax = $p.intervals[histDim].max,\n            histIntv = $p.intervals[histDim].interval,\n            histBin = (histMax - histMin) / histIntv;\n\n        // viewSetting.fields = $p.fields;\n        viewSetting.isHistogram = true;\n        // viewSetting.domain = {};\n        viewSetting.domainX = new Array(histBin).fill(histMin).map(function(h, i) {return h + i*histIntv});\n    }\n\n    if(!$p._update) {\n        if(!vmap.width && vmap.x) {\n            $p.uniform.uDefaultWidth.data = 1.0 / ($p.fieldWidths[$p.fields.indexOf(vmap.x)] );\n        } else if(vmapIndex[4] === -1 && typeof(vmap.width) == 'number') {\n            $p.uniform.uDefaultWidth.data = vmap.width / width;\n        }\n\n        if(!vmap.height && vmap.y) {\n            $p.uniform.uDefaultHeight.data = 1.0 / ($p.fieldWidths[$p.fields.indexOf(vmap.y)] );\n        } else if(vmapIndex[5] === -1 && typeof(vmap.width) == 'number') {\n            $p.uniform.uDefaultHeight.data = vmap.height / height;\n        }\n    }\n    return viewSetting;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/encode.js\n// module id = 57\n// module chunks = 0 1","export default function brush(arg){\n\n    var option = arg || {},\n        container = option.container || this.svg[0],\n        width = option.width || this.width,\n        height = option.height || this.height,\n        x = function(s) {return s},\n        y = function(s) {return s},\n        base = option.base || null,\n        selectX = option.x || false,\n        selectY = option.y || false,\n        border = option.border || \"#FFF\",\n        color = option.color || \"#111\",\n        brush = option.brush || function() {},\n        brushstart = option.brushstart || function() {},\n        brushend = option.brushend || function() {};\n\n    if(typeof(selectX) === \"function\") {\n        x = selectX;\n        selectX = true;\n    }\n    if(typeof(selectY) === \"function\") {\n        y = selectY;\n        selectY = true;\n    }\n    if(base === null){\n        base = container.append(\"g\").attr(\"class\", \"selector\");\n    } else {\n        base = container;\n    };\n\n    base.append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"fill-opacity\", 0)\n        .attr(\"stroke\", \"none\")\n        .css(\"cursor\", \"crosshair\");\n\n    var selector = base.append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"width\", 0)\n        .attr(\"height\", 0)\n        .attr(\"fill-opacity\", 0.1)\n        .css(\"fill\", color)\n        .css(\"stroke\", border)\n        .css(\"cursor\", \"move\");\n\n    var sx, sy,\n        dx, dy,\n        bx, by,\n        selection = {},\n        intStart = false,\n        drag = false;\n\n    base.svg.addEventListener(\"mousedown\", function(evt){\n        evt.preventDefault();\n        brushstart.call(this);\n        intStart = true;\n        sx = evt.clientX;\n        sy = evt.clientY;\n\n        var sp = selector.svg.getBoundingClientRect();\n        var box = base.svg.getBoundingClientRect();\n        var x0, y0, nw, nh;\n\n        if(sx>sp.left && sy>sp.top && sx<sp.left+sp.width && sy<sp.top+sp.height) {\n            drag = true;\n            bx = sp.left;\n            by = sp.top;\n        }\n\n        if(!drag){\n            x0 = selectX ? sx - box.left : 0;\n            y0 = selectY ? sy - box.top : 0;\n            selector.attr(\"x\", x0)\n                .attr(\"y\", y0)\n                .attr(\"width\", 0);\n        }\n\n        ondrag = function(evt){\n            if(intStart){\n                dx = evt.clientX - sx;\n                dy = evt.clientY - sy;\n                var selectorBox = selector.svg.getBoundingClientRect();\n                if(drag){\n\n                    var nx = bx + dx-box.left,\n                        ny = by + dy-box.top;\n\n                    if(bx+dx < box.left) nx = 0;\n                    if(bx+dx+selectorBox.width > box.right) nx = width - selectorBox.width ;\n                    if(by+dy < box.top) ny = 0;\n                    if(by+dy+selectorBox.height > box.bottom) ny = height - selectorBox.height;\n                    selector.attr(\"x\", nx).attr(\"y\", ny);\n                } else {\n                    if(evt.clientX < box.left) dx = box.left - sx;\n                    if(evt.clientX > box.right) dx = box.right - sx;\n                    if(evt.clientY > box.bottom) dy = box.bottom - sy;\n                    if(evt.clientY < box.top) dy = box.top - sy;\n\n                    x0 = selectX ? sx + dx - box.left: 0;\n                    y0 = selectY ? sy + dy - box.top : 0;\n                    nw = selectX ? Math.abs(dx) : width;\n                    nh = selectY ? Math.abs(dy) : height;\n\n                    if(dx<0 && dy>=0) selector.attr(\"x\", x0);\n                    if(dy<0 && dx>=0) selector.attr(\"y\", y0);\n                    if(dx<0 && dy<0) selector.attr(\"x\", x0).attr(\"y\", y0);\n                    selector.attr(\"width\", nw).attr(\"height\", nh);\n                }\n                if(selectX) {\n                    selection.x = [ x(selectorBox.left - box.left ), x(selectorBox.right - box.left )];\n                }\n                if(selectY) {\n                    selection.y = [y(selectorBox.top - box.top), y(selectorBox.bottom - box.top)];\n                }\n                brush.call(this, selection);\n            }\n        };\n\n        window.addEventListener(\"mousemove\", ondrag, false);\n        window.addEventListener(\"mouseup\", function(evt){\n            if(intStart){\n                ondrag(evt);\n                intStart = false;\n                if(drag){\n                    drag = false;\n                }\n            }\n            brushend.call(this, selection);\n            window.removeEventListener(\"mousemove\", ondrag, false);\n        }, false);\n    });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/metavis/brush.js\n// module id = 58\n// module chunks = 0 1","import Svg from './svg';\nimport chart from './chart';\n\nfunction assign(object, source) {\n    Object.keys(source).forEach(function(key) {\n        object[key] = source[key];\n    });\n}\nvar defaultProperties = {\n    width: 400,\n    height: 300,\n    padding: {left: 0, right: 0, top: 0, bottom: 0},\n}\n\nexport default function layout(arg){\n    \"use strict\";\n\n    /* Private */\n    var viz = this,\n        option = arg || {},\n        container = option.container || document.body,\n        style = option.style || null,\n        layers = [];\n\n    this.width = container.clientWidth || 400;\n    this.height = container.clientHeight || 300;\n\n    if(typeof container == 'string') container = document.getElementById(container);\n    assign(viz, defaultProperties);\n    assign(viz, option);\n\n    this.vmap = option.vmap;\n\n    this.width -= (this.padding.left + this.padding.right);\n    this.height -= (this.padding.top + this.padding.bottom);\n\n\n    /* Public */\n    this.data = option.data || [];\n    this.div = document.createElement(\"div\");\n    if(style !== null) {\n        Object.keys(style).forEach(function(prop){\n            viz.div.style[prop] = style[prop];\n        })\n    }\n\n    this.init = function(){\n        // container = (containerId == \"body\") ? document.body : document.getElementById(containerId);\n\n        this.div.className = option.className || \"p6-viz\";\n        this.div.style.position = 'relative';\n        this.resize(\n            this.width + this.padding.left + this.padding.right,\n            this.height + this.padding.top + this.padding.bottom\n        );\n\n        if(option.style) this.css(option.style);\n\n        container.appendChild(this.div);\n        this.viz();\n        return viz;\n    };\n\n    this.createSVG = function(arg) {\n        var arg = arg || {},\n            width = arg.width || this.width,\n            height = arg.height || this.height,\n            padding = arg.padding || this.padding;\n\n        return new Svg({\n            width: width,\n            height: height,\n            padding: padding,\n            style: {position: 'absolute'}\n        });\n    }\n\n    var canvas = option.canvas,\n        svg = this.createSVG(),\n        vmap = option.vmap,\n        chartPadding = this.padding || {left: 0, right: 0, top: 0, bottom: 0},\n        domain = option.domain || {x: [0, 1000], y: [0, 1]},\n        scales = option.scales || {x: 'linear', y: 'linear'};\n\n    var backSVG = this.createSVG(),\n        frontSVG = this.createSVG();\n\n    this.set = function(props) {\n        assign(viz, props);\n    };\n\n    this.addProperty = function(obj, prop) {\n        assign(obj, prop);\n        return obj;\n    }\n\n    this.viz = function() {\n        viz.div.appendChild(backSVG.svg);\n        viz.div.appendChild(canvas);\n        viz.div.appendChild(frontSVG.svg);\n        return viz;\n    };\n\n    this.render = this.viz;\n\n    this.css = function(style){\n        for(var key in style){\n            this.div.style[key] = style[key];\n        }\n        return this;\n    };\n\n    this.resize = function(w,h){\n        this.div.style.width = w + \"px\";\n        this.div.style.height = h + \"px\";\n    };\n\n    this.destroy = function() {\n        this._super.destroy();\n        container.removeChild(this.div);\n        div = null;\n    };\n\n    this.hide = function() {\n        this.div.style.display = 'none';\n    }\n\n    this.show = function() {\n        this.div.style.display = 'block';\n    }\n\n    this.innerWidth = function() {\n        return this.width;\n    }\n\n    this.innerHeight = function() {\n        return this.height;\n    }\n\n    this.addChart = function(options) {\n        return chart(frontSVG, options)\n    };\n\n    this.exportImage = function(beforeExport) {\n        var imageCanvas = document.createElement(\"canvas\");\n        imageCanvas.width = this.width;\n        imageCanvas.height = this.height;\n        return new Promise(function(resolve, reject) {\n\n            var ctx = imageCanvas.getContext(\"2d\");\n            var svgString = new XMLSerializer().serializeToString(frontSVG.svg);\n\n            var DOMURL = self.URL || self.webkitURL || self;\n            var svgBlob = new Blob([svgString], {type: \"image/svg+xml;charset=utf-8\"});\n            var svgURL = DOMURL.createObjectURL(svgBlob);\n\n            var canvasLayer = new Image();\n            var svgLayer = new Image();\n            canvasLayer.onload = function() {\n                ctx.drawImage(canvasLayer, 0, 0);\n                svgLayer.src = svgURL;\n                svgLayer.onload = function() {\n                    ctx.drawImage(svgLayer, 0, 0);\n                    var png = imageCanvas.toDataURL(\"image/png\");\n                    DOMURL.revokeObjectURL(png);\n                    resolve(png);\n                };\n            };\n\n            canvasLayer.onerror = function() {\n                reject(Error(\"Canvas Output Error!\"));\n            }\n\n            svgLayer.onerror = function() {\n                reject(Error(\"SVG Output Error!\"));\n            }\n            beforeExport();\n            canvasLayer.src = canvas.toDataURL(\"image/png\");\n        });\n\n    }\n\n    return viz.init();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/metavis/layout.js\n// module id = 59\n// module chunks = 0 1","import axis from './axis';\nimport format from './format';\nimport scale from './scale';\nimport legend from './legend';\n\nexport default function chart(svg, arg) {\n    var options = arg || {},\n        plot = svg.append('g'),\n        width = options.width,\n        height = options.height,\n        top = options.top || 0,\n        left = options.left || 0,\n        vmap = options.vmap || {},\n        isHistogram = options.isHistogram || options.hist || false,\n        features = options.fields || [],\n        domain = options.domain,\n        categories = options.categories,\n        labels = plot.append('g'),\n        onclick = options.onclick || null,\n        onhover = options.onhover || null,\n        showLegend = options.legend || true,\n        tickOffset = options.axisOffset || [0, 0],\n        padding = options.padding || {left: 0, right: 0, top: 0, bottom: 0},\n        marks = [],\n        colors = options.colors;\n\n    var scaleX = options.scaleX || 'linear',\n        domainX = options.domainX || domain[vmap.x] || domain[vmap.width],\n        scaleY = options.scaleY || 'linear',\n        domainY = options.domainY || domain[vmap.y] || domain[vmap.height];\n\n    width -= padding.left + padding.right;\n    height -= padding.top + padding.bottom;\n\n    var xAxisOption = {\n        container: plot,\n        dim: \"x\",\n        width: width,\n        height: height,\n        domain: domainX,\n        scale:  scaleX,\n        align: \"bottom\",\n        // ticks: 5,\n        // grid: 1,\n        format: format(\".3s\"),\n    };\n\n    var yAxisOption = {\n        container: plot,\n        dim: \"y\",\n        domain: domainY,\n        scale: scaleY,\n        width: width,\n        height: height,\n        align: \"left\",\n        // labelPos: {x: -5, y: -5},\n        // grid: 1,\n        format: format(\".3s\"),\n    };\n\n    if(showLegend && features.indexOf(vmap.color) !== -1){\n        legend({\n            container: plot,\n            width: 20,\n            height: 180,\n            dim: \"y\",\n            domain: domain[vmap.color],\n            pos: [width + padding.right/2, 0],\n            colors: colors\n        });\n    }\n\n    if(scaleX == 'ordinal' || scaleX == 'categorical') {\n        xAxisOption.ticks = domainX.length;\n        while(width / xAxisOption.ticks < 20) {\n            xAxisOption.ticks *= 0.5;\n        }\n        var maxStrLength = Math.max.apply(null, domainX.map(\n            function(d){ return (typeof(d) == 'string') ? d.toString().length : 1; })\n        );\n        if(maxStrLength > 10) {\n            xAxisOption.labelAngle = -30;\n            xAxisOption.tickLabelAlign = 'end';\n            xAxisOption.labelPos = {x: 0, y: -10};\n        }\n    }\n\n    if(scaleY == 'ordinal' || scaleY == 'categorical') {\n        yAxisOption.ticks = domainY.length;\n        while(width / yAxisOption.ticks < 20) {\n            yAxisOption.ticks *= 0.5;\n        }\n    }\n\n    var x, y, xAxes = [], yAxes = [];\n\n    // For parallel coordinates\n    if(Array.isArray(vmap.x)) {\n        var axisDist = height / (vmap.x.length-1);\n\n        vmap.x.forEach(function(d, i) {\n            xAxisOption.position = i * axisDist + 1;\n            xAxisOption.domain = domain[d];\n            if(categories.hasOwnProperty(d)){\n                xAxisOption.scale = 'ordinal';\n                xAxisOption.tickAlign = 'outer';\n                xAxisOption.domain = categories[d].reverse();\n            }\n            var labelOffset = 20;\n            if(i === 0) {\n                xAxisOption.tickPosition = [0, -5];\n                xAxisOption.labelPos = {x: 0, y: 2};\n                labelOffset = 35;\n            } else {\n                xAxisOption.tickPosition = null;\n                xAxisOption.labelPos = null;\n            }\n            x = axis(xAxisOption);\n            xAxes[i] = x;\n\n            labels\n            .append(\"text\")\n              .attr(\"x\", 5 )\n              .attr(\"y\", i * axisDist - labelOffset)\n              .attr(\"dy\", \"1em\")\n              .css(\"text-anchor\", \"middle\")\n              .css(\"font-size\", \"1em\")\n              .text(d);\n        });\n    }\n\n    if(Array.isArray(vmap.y)) {\n        var axisDist = width / (vmap.y.length-1);\n\n        vmap.y.forEach(function(d, i) {\n            yAxisOption.position = i * axisDist;\n            yAxisOption.domain = domain[d];\n            if(categories.hasOwnProperty(d)){\n                yAxisOption.scale = 'ordinal';\n                yAxisOption.tickAlign = 'outer';\n                yAxisOption.domain = categories[d].reverse();\n            }\n            if(i == vmap.y.length-1) {\n                yAxisOption.tickPosition = [5, 0];\n                yAxisOption.tickLabelAlign = \"start\";\n                yAxisOption.labelPos = {x: 8, y: -5};\n\n            }\n            y = axis(yAxisOption);\n            yAxes[i] = y;\n\n            labels.append(\"text\")\n              .attr(\"y\", -padding.top + 10)\n              .attr(\"x\", i * axisDist)\n              .attr(\"dy\", \"1em\")\n              .css(\"text-anchor\", \"middle\")\n              .css(\"font-size\", \"1em\")\n              .text(d);\n        });\n    }\n\n    if(isHistogram) {\n        xAxisOption.tickPosition = [width / domainX.length /2, 0];\n        xAxisOption.scale = \"ordinal\";\n        xAxisOption.domain = domainX;\n        xAxisOption.ticks = domainX.length;\n    }\n\n    if((vmap.x || vmap.width) && !Array.isArray(vmap.x)) x = axis(xAxisOption);\n    if((vmap.y || vmap.height) && !Array.isArray(vmap.y)) y = axis(yAxisOption);\n\n    if((vmap.hasOwnProperty('x') || vmap.hasOwnProperty('width')) && !Array.isArray(vmap.x)) {\n        var xAxisTitle = vmap.x || vmap.width;\n        // xAxisTitle = xAxisTitle.replace(/_/g, ' ');\n        // xAxisOption.grid = 1;\n        labels.append(\"g\")\n          .append(\"text\")\n            .attr(\"x\", width/2)\n            .attr(\"y\", height + padding.bottom/2 )\n            .attr(\"dy\", \"1em\")\n            .css(\"text-anchor\", \"middle\")\n            .css(\"font-size\", \"1.0em\")\n            .css(\"font-weight\", \"bold\")\n            .css(\" text-transform\", \"capitalize\")\n            .text(xAxisTitle);\n\n    }\n    if((vmap.hasOwnProperty('y') || vmap.hasOwnProperty('height')) && !Array.isArray(vmap.y)) {\n        var yAxisTitle = vmap.y || vmap.height;\n        // yAxisTitle = yAxisTitle.replace(/_/g, ' ');\n        // yAxisOption.grid = 1;\n        if(!Array.isArray(vmap.y)) {\n            labels.append(\"g\")\n              .append(\"text\")\n                .attr(\"transform\", \"rotate(-90)\")\n                .attr(\"y\", -padding.left/1.25 )\n                .attr(\"x\", -height/2 )\n                .attr(\"dy\", \"1em\")\n                .css(\"text-anchor\", \"middle\")\n                .css(\"font-size\", \"1.0em\")\n                .css(\"font-weight\", \"bold\")\n                .css(\" text-transform\", \"capitalize\")\n                .text(yAxisTitle);\n        }\n    }\n    // plot.append(\"line\")\n    //     .attr('x1', 0)\n    //     .attr('x2', width)\n    //     .attr('y1', 0)\n    //     .attr('y2', 0)\n    //     .css('stroke', '#000')\n    // plot.append(\"line\")\n    //     .attr('x1', width)\n    //     .attr('x2', width)\n    //     .attr('y1', 0)\n    //     .attr('y2', height)\n    //     .css('stroke', '#000')\n        // .css('stroke-opacity', 0.5)\n\n    plot.translate(padding.left+left, padding.top+top);\n\n    var chartLayer = {};\n\n    chartLayer.update =  function(spec) {\n        var data = spec.data || [];\n\n        if(data.length) {\n            data.forEach(function(d, i){\n                var barHeight = isFinite(y(d[vmap.y])) ? y(d[vmap.y]) : height;\n                if(hMarks[i]) {\n                    hMarks[i].Attr({\n                        y: barHeight,\n                        height: height - barHeight,\n                        fill: \"orange\"\n                    });\n                }\n            })\n        } else {\n            hMarks.forEach(function(h, i){\n                h.Attr({ y: 0, height: 0 });\n            })\n        }\n    }\n\n    chartLayer.removeAxis = function() {\n        x.remove();\n        y.remove();\n        if(yAxes.length) {\n            yAxes.forEach(function(yp) {\n                yp.remove();\n            })\n        }\n    }\n\n    chartLayer.svg = plot;\n    chartLayer.x = Array.isArray(vmap.x) ? xAxes : x;\n    chartLayer.y = Array.isArray(vmap.y) ? yAxes : y;\n\n    return chartLayer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/metavis/chart.js\n// module id = 60\n// module chunks = 0 1","function _reduce(array, opt) {\n    var i,\n        len = array.length,\n        fn,\n        result;\n\n    if (!len) return 0;\n\n    switch (opt) {\n        case \"max\":\n            result = array.reduce(function(a, b) {\n                return (a > b) ? a : b;\n            });\n            break;\n        case \"min\":\n            result = array.reduce(function(a, b) {\n                return (a < b) ? a : b;\n            });\n            break;\n        case \"and\":\n        case \"&\":\n            result = array.reduce(function(a, b) {\n                return a & b;\n            });\n            break;\n        case \"or\":\n        case \"|\":\n            result = array.reduce(function(a, b) {\n                return a | b;\n            });\n            break;\n        case \"mult\":\n        case \"*\":\n            result = array.reduce(function(a, b) {\n                return a * b;\n            });\n            break;\n        default: // \"sum\" or \"+\"\n            result = array.reduce(function(a, b) {\n                return a + b;\n            });\n            break;\n    }\n\n    return result;\n}\n\nexport function reduce(opt) {\n    return function(array) {\n        var a = (array instanceof Array) ? array : Array.apply(null, arguments);\n        return _reduce(a, opt);\n    };\n};\n\nexport function avg(array) {\n    return _reduce(array, \"+\") / array.length;\n    // return array.reduce(function(a,b){ return 0.5 * (a + b)});\n};\n\nexport function normalize(array) {\n    var max = _reduce(array, \"max\"),\n        min = _reduce(array, \"min\"),\n        range = max - min;\n\n    return array.map(function(a) {\n        return (a - min) / range;\n    });\n}\n\nexport function seq(start, end, intv) {\n    var interval = intv || 1,\n        array = [];\n\n    for (var i = start; i <= end; i += interval)\n        array.push(i);\n\n    return array;\n};\n\n// [\"max\", \"min\", \"mult\", \"and\", \"or\"].forEach(function(f) {\n//     array[f] = array.reduce(f);\n// });\n\n// export sum = array.reduce(\"+\");\n\nexport function scan(a) {\n    var pfsum = [],\n        accum = 0;\n\n    for (var i = 0; i < a.length; i++) {\n        accum += a[i];\n        pfsum.push(accum);\n    }\n\n    return pfsum;\n};\n\nexport function iscan(a) {\n    return array.scan([0].concat(a));\n};\n\nexport function diff(a, b) {\n    var difference = [];\n    a.forEach(function(d) {\n        if (b.indexOf(d) === -1) {\n            difference.push(d);\n        }\n    });\n    return difference;\n};\n\nexport function intersect(a, b) {\n    var t;\n    if (b.length > a.length) t = b, b = a, a = t; // indexOf to loop over shorter\n    return a.filter(function(e) {\n        if (b.indexOf(e) !== -1) return true;\n    });\n};\n\nexport function unique(a) {\n    return a.reduce(function(b, c) {\n        if (b.indexOf(c) < 0) b.push(c);\n        return b;\n    }, []);\n};\n\nexport function lcm(A) {\n    var n = A.length,\n        a = Math.abs(A[0]);\n    for (var i = 1; i < n; i++) {\n        var b = Math.abs(A[i]),\n            c = a;\n        while (a && b) {\n            (a > b) ? a %= b: b %= a;\n        }\n        a = Math.abs(c * A[i]) / (a + b);\n    }\n    return a;\n};\n\nexport function stats(array) {\n    return {\n        max: _reduce(array, \"max\"),\n        min: _reduce(array, \"min\"),\n        avg: array.avg(array)\n    };\n};\n\nexport function histogram(array, numBin, _max, _min) {\n    var l = array.length,\n        min = (typeof(_min) == 'number') ? _min : _reduce(array, \"min\"),\n        max = (typeof(_max) == 'number') ? _max : _reduce(array, \"max\"),\n        range = max - min,\n        interval = range / numBin,\n        bins = [],\n        // ids = [],\n        hg = new Array(numBin + 1).fill(0);\n\n    for (var b = 0; b < numBin; b++) {\n        bins.push([min + range * (b / (numBin)), min + range * (b + 1) / (numBin)]);\n        // ids[b] = [];\n    }\n\n    // ids[numBin] = [];\n\n    for (var i = 0; i < l; i++) {\n        binID = Math.floor((array[i] - min) / range * (numBin));\n        hg[binID]++;\n        // ids[binID].push(i);\n    };\n\n    hg[numBin - 1] += hg[numBin];\n    // ids[numBin-1] = ids[numBin-1].concat(ids.pop());\n    return {\n        bins: bins,\n        counts: hg.slice(0, numBin),\n        // ids: ids\n    };\n}\n\nexport function variance(rowArray) {\n    var m = _reduce(rowArray, \"+\") / rowArray.length,\n        va = rowArray.map(function(a) {\n            return Math.pow(a - m, 2)\n        });\n\n    return _reduce(va, \"+\") / (rowArray.length - 1);\n}\n\nexport function std(rowArray) {\n    return Math.sqrt(array.var(rowArray));\n}\n\nexport function vectorAdd(a, b) {\n    var c = [];\n    a.forEach(function(v, i) {\n        c[i] = v + b[i];\n    });\n\n    return c;\n}\n\nexport function vectorSum(vectors) {\n    var result = vectors[0],\n        numberOfVectors = vectors.length;\n\n    for (var i = 1; i < numberOfVectors; i++) {\n        result = array.vectorAdd(result, vectors[i]);\n    }\n\n    return result;\n}\n\nfunction _vectorAvg(a, b) {\n    var c = [];\n    a.forEach(function(v, i) {\n        c[i] = (v + b[i]) * 0.5;\n    });\n\n    return c;\n}\n\nexport function vectorAvg(vectors) {\n    var result = vectors[0],\n        numberOfVectors = vectors.length;\n\n    for (var i = 1; i < numberOfVectors; i++) {\n        result = _vectorAvg(result, vectors[i]);\n    }\n\n    return result;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/arrays.js\n// module id = 61\n// module chunks = 0 1","import Svg from './svg';\nimport Axis from './axis';\nimport printformat from './format';\n\nconst defaultColors = ['white', 'steelblue'];\nconst defaultSize = 20;\nvar gradID = 0;\n\nexport default function color(arg){\n    var gradientID = gradID++;\n\n    var option = arg || {},\n        container = option.container || null,\n        width = option.width || null,\n        height = option.height || null,\n        pos = option.pos ||[0, 0],\n        dim = option.dim || 'x',\n        padding = option.padding || {left: 0, right: 0, top: 0, bottom: 0},\n        vmap = option.vmap || {},\n        label = option.label || false,\n        colors = option.colors || defaultColors,\n        domain = option.domain || ['min', 'max'],\n        format = option.format || printformat('.3s');\n\n\n    if(colors.length < 2) colors = defaultColors;\n    width -= padding.left + padding.right;\n    height -= padding.top + padding.bottom;\n\n    var legend = (container === null)\n        ? new Svg({width: width, height: height, padding: padding})\n        : container.append('g');\n\n    var gradDirection;\n    if(dim == 'x') {\n        gradDirection = {x1: 0, x2: 1, y1: 0, y2: 0};\n        if(height === null) height = defaultSize;\n    } else {\n        gradDirection = {x1: 0, x2: 0, y1: 0, y2: 1};\n        if(width === null) width = defaultSize;\n    }\n\n    function linearGradient(colors) {\n        var gradient = legend.append('defs')\n            .append('linearGradient')\n                .attr('id', 'gradlegend'+gradientID)\n                .attr(gradDirection);\n\n        colors.forEach(function(c, i){\n            gradient.append('stop')\n                .attr('offset', i / (colors.length-1) )\n                .attr('stop-color', colors[colors.length-i-1]);\n        });\n        return gradient;\n    }\n\n    var grad = linearGradient(colors);\n\n    var rect = legend.append('g');\n\n    var colorScale = rect.append('rect')\n        .attr('width', width-padding.left)\n        .attr('height', height)\n        .style('fill','url(#gradlegend' + gradientID + ')');\n\n    var domainLabel = legend.append('text');\n    if(label) {\n        label.append('text')\n            .attr('x', pos[0] - 5)\n            .attr('y', pos[1] + height/2 + 5)\n            .style('fill', '#222')\n            .style('text-anchor', 'end')\n            .text(printformat('2s')(domain[0]));\n\n        legend.append('text')\n            .attr('x', pos[0] + width - padding.left + 5)\n            .attr('y', pos[1] + height/2 + 5)\n            .style('fill', '#222')\n            .style('text-anchor', 'begin')\n            // .style('font-size', '.9em')\n            .text(printformat('2s')(domain[1]));\n    }\n\n    if(option.title) {\n        legend.append('g')\n          .append('text')\n            .attr('y', pos[1] - padding.top)\n            .attr('x', pos[0] + width/2)\n            .attr('dy', '1em')\n            .style('text-anchor', 'middle')\n            .text(option.title);\n    }\n\n    if(dim == 'x') {\n        new Axis({\n            dim: 'x',\n            domain: domain,\n            container: legend,\n            align: 'bottom',\n            ticks: Math.floor(width / 30),\n            height: height,\n            width: width,\n            labelPos: {x: 0, y: -20},\n            format: format,\n        });\n    } else {\n        new Axis({\n            dim: 'y',\n            domain: domain,\n            container: legend,\n            align: 'right',\n            ticks: Math.floor(height / 30),\n            height: height,\n            width: width,\n            labelPos: {x: 0, y: -20},\n            format: format,\n        });\n    }\n\n\n    // legend.appendChild(xAxis);\n\n    legend.translate(pos[0]+padding.left, pos[1]+padding.top);\n\n    // legend.update = function(newDomain, newColors) {\n    //\n    //     legend.removeChild(xAxis);\n    //     xAxis = new Axis({\n    //         dim: 'x',\n    //         domain: newDomain,\n    //         container: legend,\n    //         align: 'bottom',\n    //         ticks: 4,\n    //         // tickInterval: 10000000,\n    //         labelPos: {x: -5, y: -20},\n    //          padding: padding,\n    //         width: width-padding.left,\n    //         format: format,\n    //     }).show();\n    //\n    //     if(typeof(newColors) != 'undefined') {\n    //         grad.remove();\n    //         grad = linearGradient(newColors);\n    //         colorScale.css('fill','url(#gradlegend' + gradientID + ')');\n    //\n    //     }\n    //     // legend.appendChild(xAxis);\n    //\n    //     return legend;\n    // }\n\n    return legend;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/metavis/legend.js\n// module id = 62\n// module chunks = 0 1","import * as ctypes from './ctypes';\r\nexport default function ColumnStore(arg){\r\n    var cstore   = (this instanceof ColumnStore) ? this : {},\r\n        options = arg || {},\r\n        columns  = [],                  // column-based binary data\r\n        size     = options.size  || 0,   // max size\r\n        count    = options.count || 0,   // number of entries stored\r\n        types    = options.types || [],  // types of the columns\r\n        attributes = options.attributes || options.keys || options.names || [],  // column attributes\r\n        struct   = options.struct|| options.schema || {},\r\n        strHashes     = options.strHashes  || {},  // content access memory\r\n        strLists     = options.strLists  || {},  // table lookaside buffer\r\n        colStats = {},\r\n        colAlloc = {},\r\n        colRead  = {},                  // functions for reading values\r\n        skip     = options.skip  || 0;\r\n\r\n    if(options.struct) initStruct(options.struct);\r\n\r\n    function initCStore() {\r\n        if(size && types.length === attributes.length && types.length > 0) {\r\n            attributes.forEach(function(c, i){\r\n                configureColumn(i);\r\n                columns[i] = new colAlloc[c](size);\r\n                if(!columns.hasOwnProperty(c))\r\n                    Object.defineProperty(columns, c, {\r\n                        get: function() { return columns[i]; }\r\n                    });\r\n            });\r\n            columns.attributes = attributes;\r\n            columns.keys = attributes;\r\n            columns.types = types;\r\n            columns.struct = struct;\r\n            columns.strLists = strLists;\r\n            columns.strHashes = strHashes;\r\n            columns.size = size;\r\n            columns.get = function(c) {\r\n                var index = attributes.indexOf(c);\r\n                if(index < 0 ) throw new Error(\"Error: No column named \" + c);\r\n                return columns[index];\r\n            }\r\n        } \r\n        return cstore;\r\n    }\r\n\r\n    function initStruct(s) {\r\n        struct = s;\r\n        if(Array.isArray(struct)) {\r\n            struct.forEach(function(s){\r\n                attributes.push(s.name);\r\n                types.push(s.type);\r\n            })\r\n        } else {\r\n            for(var k in struct){\r\n                attributes.push(k);\r\n                types.push(struct[k]);\r\n            }\r\n        }\r\n        return struct;\r\n    }\r\n\r\n    function configureColumn(cid) {\r\n        if(typeof(cid) == \"string\") cid = attributes.indexOf(cid);\r\n        var f = attributes[cid];\r\n        colAlloc[f] = ctypes[types[cid]];\r\n\r\n        if(colAlloc[f] === ctypes.string){\r\n            strLists[f] = [];\r\n            strHashes[f] = {};\r\n            colRead[f] = function(value) {\r\n                if(!strHashes[f].hasOwnProperty(value)){\r\n                    strHashes[f][value] = strLists[f].length;\r\n                    strLists[f].push(value);\r\n                }\r\n                return strHashes[f][value];\r\n            };\r\n        } else if(\r\n            colAlloc[f] === ctypes.int ||\r\n            colAlloc[f] === ctypes.short ||\r\n            colAlloc[f] === ctypes.integer\r\n        ) {\r\n            colRead[f] = function(value) {  return parseInt(value) || 0; };\r\n        } else if(\r\n            colAlloc[f] === ctypes.float ||\r\n            colAlloc[f] === ctypes.double ||\r\n            colAlloc[f] === ctypes.numeric\r\n        ){\r\n            colRead[f] = function(value) {  return parseFloat(value) || 0.0; };\r\n        } else if(\r\n                colAlloc[f] === ctypes.time ||\r\n                colAlloc[f] === ctypes.temporal\r\n        ) {\r\n            colRead[f] = function(value) {  return parseFloat(value) || 0.0; };\r\n        } else {\r\n            throw new Error(\"Invalid data type for TypedArray data!\")\r\n        }\r\n    }\r\n\r\n    cstore.addRows = function(rowArray) {\r\n        if(count === 0 && skip > 0) {\r\n            for(var j = 0; j<skip; j++)\r\n                rowArray.shift();\r\n        }\r\n        rowArray.forEach(function(row, i){\r\n            row.forEach(function(v,j){\r\n                columns[j][count] = colRead[attributes[j]](v);\r\n            });\r\n            count++;\r\n        });\r\n        return count;\r\n    }\r\n\r\n    cstore.addObjects = function(objArray) {\r\n        if(count === 0 && skip > 0) {\r\n            for(var j = 0; j<skip; j++)\r\n                objArray.shift();\r\n        }\r\n        objArray.forEach(function(obj, i){\r\n            Object.keys(obj).forEach(function(v,j){\r\n                columns[j][count] = colRead[attributes[j]](obj[v]);\r\n            });\r\n            count++;\r\n        });\r\n        return count;\r\n    }\r\n\r\n\r\n    cstore.addColumn = function(arg) {\r\n        var props = arg || {},\r\n            columnData = props.data || props.array,\r\n            columnName = props.name,\r\n            columnType = props.dtype,\r\n            values = props.values || [];\r\n\r\n        var cid = attributes.indexOf(columnName);\r\n        if( cid < 0) {\r\n            attributes.push(columnName);\r\n            types.push(columnType);\r\n            configureColumn(columnName);\r\n            cid = types.length - 1;\r\n            Object.defineProperty(columns, columnName, {\r\n                get: function() { return columns[cid]; }\r\n            });\r\n        }\r\n\r\n        if(columnData instanceof ctypes[types[cid]]) {\r\n            columns[cid] = columnData;\r\n            if(values.length) {\r\n                strLists[columnName] = values;\r\n                strHashes[columnName] = {};\r\n                values.forEach(function(value, vi){\r\n                    strHashes[columnName][value] = vi;\r\n                })\r\n            }\r\n        } else if(ArrayBuffer.isView(columnData)){\r\n            columns[cid] = new colAlloc[columnName](size);\r\n            for(var di = 0; di < size; di++) {\r\n                columns[cid][di] = colRead[columnName](columnData[di]);\r\n            }\r\n        } else {\r\n            throw new Error(\"Error: Invalid data type for columnArray!\");\r\n        }\r\n        size = count = columnData.length;\r\n    }\r\n\r\n    cstore.metadata = cstore.info = function() {\r\n        return {\r\n            size: size,\r\n            count: count,\r\n            attributes: attributes,\r\n            types: types,\r\n            strLists: strLists,\r\n            strHashes: strHashes,\r\n            stats: cstore.stats()\r\n        }\r\n    }\r\n\r\n    cstore.columns = function() {\r\n        return columns;\r\n    }\r\n\r\n    cstore.data = function() {\r\n        var data = columns;\r\n        data.stats = cstore.stats();\r\n        data.keys = attributes;\r\n        data.size = size;\r\n        data.strHashes = strHashes;\r\n        data.strLists = strLists;\r\n        data.dtypes = types;\r\n        return data;\r\n    }\r\n\r\n    cstore.stats = function(col){\r\n        var col = col || attributes;\r\n        col.forEach(function(name, c){\r\n            if(!colStats[c]){\r\n                var min, max, avg;\r\n                min = max = avg = columns[c][0];\r\n\r\n                for(var i = 1; i < columns[c].length; i++){\r\n                    var d = columns[c][i];\r\n                    if(d > max) max = d;\r\n                    else if(d < min) min = d;\r\n                    avg = avg - (avg-d) / i;\r\n                }\r\n                if(max == min) max += 0.000001;\r\n                colStats[name] = {min: min, max: max, avg: avg};\r\n            }\r\n        })\r\n        return colStats;\r\n    }\r\n\r\n    cstore.domains = function(col){\r\n        var col = col || attributes,\r\n            domains = [];\r\n\r\n        col.forEach(function(name, c){\r\n            domains[name] = [colStats[name].min, colStats[name].max];\r\n        })\r\n        return domains;\r\n    }\r\n\r\n    cstore.ctypes = function() {\r\n        return ctypes;\r\n    }\r\n\r\n    cstore.size = size;\r\n\r\n    cstore.exportAsJSON = function() {\r\n        var rows = new Array(size);\r\n        for(var ri = 0; ri < size; ri++) {\r\n            var dataFrame = {};\r\n            attributes.forEach(function(attr, ai) {\r\n                if(types[ai] == 'string') {\r\n                    dataFrame[attr] = strLists[attr][columns[ai][ri]];\r\n                } else {\r\n                    dataFrame[attr] = columns[ai][ri];\r\n                }\r\n            })\r\n            rows[ri] = dataFrame;\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    cstore.exportAsRowArray = function() {\r\n        var rows = new Array(size);\r\n        for(var ri = 0; ri < size; ri++) {\r\n            var row = new Array(attributes.length);\r\n            attributes.forEach(function(attr, ai) {\r\n                if(types[ai] == 'string') {\r\n                    row[ai] = strLists[attr][columns[ai][ri]];\r\n                } else {\r\n                    row[ai] = columns[ai][ri];\r\n                }\r\n            })\r\n            rows[ri] = row;\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    cstore.export = function(arg) {\r\n        var format = arg || 'json';\r\n        if(format == 'rowArray') {\r\n            return cstore.exportAsRowArray();\r\n        } else {\r\n            return cstore.exportAsJSON();\r\n        }\r\n    }\r\n\r\n    cstore.import = function(arg) {\r\n        var data = arg.data || [],\r\n            schema = arg.schema || {};\r\n        size = data.length;\r\n        initStruct(schema);\r\n        initCStore();\r\n        cstore.addObjects(data);\r\n    }\r\n\r\n    return initCStore();\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/cstore.js\n// module id = 63\n// module chunks = 0 1","export function request(arg) {\n    var url = arg.url || arg,\n        method = arg.method || \"GET\",\n        dataType = arg.dataType || \"json\",\n        data = arg.data || [],\n        query = [];  //arraybuffer, blob, document, json, text\n\n    for (var key in data) {\n        query.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));\n    }\n\n    return new Promise(function(resolve, reject) {\n\n        var req = new XMLHttpRequest();\n        req.open(method, url);\n        req.responseType = dataType;\n\n        req.onload = function() {\n          if (req.status == 200) {\n            resolve(req.response);\n          }\n          else {\n            reject(Error(req.statusText));\n          }\n        };\n\n        req.onerror = function() {\n          reject(Error(\"Network Error\"));\n        };\n\n        if (method == 'POST') {\n            req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        }\n\n        req.send(data);\n    });\n};\n\nexport let get = request;\n\nexport function getAll(options) {\n    var promises = [];\n    options.forEach(function(option){\n        promises.push(\n            request(option)\n            .then(function(result){\n                return new Promise(function(resolve, reject) {\n                    resolve(result);\n                });\n            })\n        );\n    });\n\n    return Promise.all(promises);\n}\n\nexport function post(arg) {\n    arg.method = \"POST\";\n    return ajax.request(arg);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/ajax.js\n// module id = 64\n// module chunks = 0 1","export default function parse(text, delimiter) {\n    \"use strict\";\n    var size = text.length,\n        accum = 0,\n        i, //index for starting of a line\n        row,\n        rows = [],\n        fields = [],\n        lens = [],\n        EOL = false;\n\n    while(accum < size) {\n        i = accum, EOL = false;\n        row = loadLine(text, delimiter.charCodeAt(0), i);\n        rows.push(row.fields);\n        accum += row.size;\n    }\n    return rows;\n}\n\nfunction loadLine(text, delimiterCode, initPos) {\n    // if(typeof(initPos) === 'undefined') initPos = 0;\n    var EOL = false,\n        QUOTE = false,\n        c = initPos, //current pos\n        code, //code at c\n        f = initPos, // start pos of current field\n        q, //start pos of quote\n        fields = [],\n        L = text.length;\n\n    while(!EOL){\n        code = text.charCodeAt(c);\n        if(code === 10 || c>=L){\n            EOL = true;\n            // if(text.charCodeAt(c+1) === 13) ++c;\n            fields.push( text.slice(f, c) );\n        } else {\n            if(code === delimiterCode && !QUOTE) {\n                // console.log(f,c, text.slice(f, c));\n                var field = text.slice(f, c);\n                fields.push( field );\n                f = c+1;\n            } else if(code === 34){\n                if(QUOTE){\n                    if(text.charCodeAt(c+1) === delimiterCode){\n                        QUOTE = false;\n                        fields.push(text.slice(q, c));\n                        f = c+2;\n                        c++;\n                    }\n                } else {\n                    q = c+1;\n                    QUOTE = true;\n                }\n            }\n        }\n        c++;\n    }\n    return { fields: fields, size: c-initPos };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6/src/parse.js\n// module id = 65\n// module chunks = 0 1","/**\n * alloc(options) - allocating memory for storing data values in different schemaures.\n * @exports allocate\n * @param {Object} options - Options for allocating memory.\n * @param {Array} options.array - Array containing the data values.\n * @param {Array} options.fields - Fields in the data.\n * @param {number} [options.skip=0] - Number of rows to be skiped in data.\n * @param {object[]} [options.data] - default data\n *\n */\nmodule.exports = function allocate(options) {\n    'use strict';\n\n    var array = options.array || [],\n        header = options.fields || options.header || array[0],\n        types = options.types || [],\n        schema = options.schema || undefined,\n        skip = options.skip || 0,\n        data = options.data || [];\n\n    var ds = {},\n        parsers = [];\n\n    if (types.length && typeof(types) == 'string') {\n        var ta = [];\n        for (var i = 0; i < header.length; i++) {\n            ta.push(types);\n        }\n        types = ta;\n    }\n\n    if (typeof schema == 'object') {\n        header = Object.keys(schema);\n        types = Object.keys(schema).map(function(h) {\n            return schema[h];\n        });\n    }\n\n    if (typeof skip == 'number') {\n        for (var j = 0; j < skip; j++)\n            array.shift();\n    }\n\n    types.forEach(function(t) {\n        parsers.push(getParser(t));\n    })\n\n    function getParser(type) {\n        if (type == 'int' || type.match('veci*')) {\n            return function(value) {\n                var res = parseInt(value);\n                return (isNaN(res)) ? 0 : res;\n            };\n        } else if (type == 'float' || type.match('vecf*')) {\n            return function(value) {\n                var res = parseFloat(value);\n                return (isNaN(res)) ? 0 : res;\n            };\n        } else if (['date', 'time', 'datetime'].indexOf(type) != -1) {\n            return function(value) {\n                return new Date(value);\n            };\n        } else if (['money', 'price', 'cost'].indexOf(type) != -1) {\n            return function(value) {\n                return parseFloat(value.substring(1));\n            };\n        } else {\n            return function(value) {\n                return value;\n            };\n        }\n    }\n\n    ds.insertRows = function(rows) {\n        array = array.concat(rows);\n    }\n    \n    /**\n    * @method objectArray\n    * @return {Object[]} - Return data as array of objects\n    */\n    ds.objectArray = function() {\n        if (typeof(header) !== 'undefined' && header.length) {\n            var l = header.length;\n            array.forEach(function(a) {\n                var o = {},\n                    offset = 0;\n                for (var i = 0; i < l; i++) {\n                    var k = header[i];\n                    if (k.length) {\n                        if (types[i].match(/^(veci|vecf)\\d+$/)) {\n                            var vl = parseInt(types[i].slice(4)),\n                                vector = [];\n                            a.slice(offset, offset + vl).forEach(function(vi) {\n                                vector.push(parsers[i](vi));\n                            });\n                            o[k] = vector;\n                            offset += vl;\n                        } else {\n                            o[k] = parsers[i](a[offset]);\n                            offset++;\n                        }\n                    }\n                }\n                data.push(o);\n            });\n        }\n        return data;\n    }\n\n    /**\n    * @method rowArray\n    * @return {Array[]} - data as row arrays\n    */\n    ds.rowArray = function() {\n        array.forEach(function(a) {\n            var row = [];\n            header.forEach(function(k, i) {\n                if (k.length) {\n                    row.push(parsers[i](a[i]));\n                }\n            });\n            data.push(row);\n        });\n        data.fields = header;\n        data.schema = 'rowArray';\n        return data;\n    }\n\n    /**\n    * @method collumArray\n    * @return {Array[]} - data as column arrays\n    */\n    ds.columnArray = function() {\n        header.forEach(function(k, i) {\n            var column = array.map(function(a) {\n                return parsers[i](a[i]);\n            });\n            data.push(column);\n        });\n        data.fields = header;\n        data.schema = 'columnArray';\n        return data;\n    }\n    //TODO: make columnArray extensible like rowArray and objectArray\n\n    return ds;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6-solo/src/allocate.js\n// module id = 66\n// module chunks = 0 1","const derive = require('./derive');\nconst queries = require('./query');\nconst aggregate = require('./aggregate');\nconst match = require('./match');\n\nmodule.exports = function pipeline (data){\n    var queue = [],\n        cache = {},\n        opt = {},\n        workers = [],\n        completed = 0,\n        result = [],\n        callback = function() {};\n\n    if(Array.isArray(data)) {\n        result = data;\n    }\n\n    opt.derive = derive;\n    opt.match = match;\n    opt.aggregate = aggregate;\n\n    Object.keys(queries).forEach(function(f) {\n        opt[f] = queries[f];\n    });\n\n    opt.cache = function(data, tag){\n        cache[tag] = pipeline.result();\n    };\n\n    opt.map = function(f){\n        result = data.map(f);\n        return pipeline;\n    };\n\n    var merge = {\n        aggregate: function (lastJob) {\n            var mergeSpec = {};\n            for(var key in lastJob.aggregate) {\n                var optSpec = lastJob.aggregate[key];\n                if(typeof optSpec == 'object')\n                    mergeSpec[key] = Object.keys(optSpec)[0];\n                else\n                    mergeSpec[key] = optSpec;\n            }\n            return opt.aggregate(finalResult, mergeSpec);\n        }\n    }\n\n    var finalResult = [];\n\n    function mergeResult(workerResult) {\n        var rl = finalResult.length,\n            wl = workerResult.length;\n        for(var i = 0; i < wl; i++) {\n            finalResult[rl+i] = workerResult[i];\n        }\n        completed += 1;\n\n        if(completed == workers.length) {\n            var lastJob = queue[queue.length-1],\n                lastJobOpt = Object.keys(lastJob)[0];\n            if( lastJobOpt == 'aggregate') {\n                finalResult = merge.aggregate(lastJob);\n            }\n            callback(finalResult);\n        }\n    }\n\n    var pipeline = {};\n\n    // pipeline.opt = opt;\n    Object.keys(opt).forEach(function(o){\n        pipeline[o] = function(spec) {\n            var task = {};\n            task[o] = spec;\n            queue.push(task);\n            return pipeline;\n        };\n    })\n\n    pipeline.then = function(_callback) {\n        callback = _callback;\n        queue.forEach(function(q){\n            var f = Object.keys(q)[0];\n            result = opt[f](result, q[f]);\n        });\n        return result;\n    }\n\n    pipeline.execute = function(data) {\n        if(Array.isArray(data)) result = data;\n        queue.forEach(function(q){\n            var f = Object.keys(q)[0];\n            result = opt[f](result, q[f]);\n        });\n        return result;\n    }\n\n    pipeline.oncomplete = pipeline.then;\n\n    pipeline.result = function() {\n        return result;\n    };\n\n    pipeline.data = function(data) {\n        result = data;\n        return pipeline\n    }\n\n    pipeline.queue = function() {\n        return queue;\n    }\n\n    return pipeline;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6-solo/src/pipeline.js\n// module id = 67\n// module chunks = 0 1","const arrayOpts = require(\"./arrays.js\");\nconst aggregate = require(\"./aggregate.js\");\nconst match = require(\"./match.js\");\n\nvar query = {};\nquery.match = match;\nquery.group = aggregate;\n\nquery.indexBy = function(data, id){\n    var indexed = {};\n    data.forEach(function(d){\n        if(!indexed.hasOwnProperty(d[id])){\n            indexed[d[id]] = [ d ];\n        } else {\n            indexed[d[id]].push(d);\n        }\n        delete d[id];\n    });\n    return indexed;\n};\n\n// query.list = function(data, id) {\n//     return data.map(function(d){return d[id];});\n// }\n\nquery.range = function(data, id) {\n    var array = data.map(function(d){return d[id];});\n    return [ arrayOpts.min(array), arrayOpts.max(array) ];\n};\n\nquery.map = function(data, m) {\n    var mf = function(d){return d};\n    if(typeof m === \"string\")\n        mf = function(d){return d[m]};\n    else if(typeof m === \"function\")\n        mf = m;\n\n    return data.map(mf);\n};\n\n// Object.keys(arrayOpts).forEach(function(opt) {\n//     query[opt] = function(data, id) {\n//         var arr = query.map(data, id);\n//         return arrayOpts[opt](arr);\n//     }\n// });\n\n\n\nquery.sortBy = function(data, spec) {\n    function sortArray(a, b, p) {\n        return a[p] > b[p] ? 1 : a[p] < b[p] ? -1 : 0;\n    }\n    return data.sort(function(a, b){\n        var r = 0,\n            i = 0,\n            attributes = Object.keys(spec),\n            al = attributes.length;\n\n        while( r === 0 && i < al ) {\n            r = sortArray(a, b, attributes[i]) * spec[attributes[i]];\n            i++;\n        }\n        return r;\n    })\n};\n\nquery.orderBy = function(c, s, o) {\n    var spec = {};\n    s.forEach(function(ss){\n        spec[ss] = o;\n    });\n    return query.sort(c, spec);\n};\n\nquery.histogram = function(data, spec, max, min) {\n    var result = {};\n    for(var key in spec) {\n        result[key] = arrayOpts.histogram(data.map(function(d){return d[key]}), spec[key], max, min);\n    }\n    return result;\n};\n\nquery.binAggregate = function(data, spec) {\n    var attrKey = Object.keys(spec)[0],\n        attributes = Object.keys(spec).filter(function(k) { return k != \"$data\" && k!=attrKey;}) || [],\n        embedData = spec.$data || false,\n        numBin = spec[attrKey],\n        array = data.map(function(d){ return d[attrKey]; }),\n        l = array.length,\n        min = arrayOpts.min(array),\n        max = arrayOpts.max(array),\n        range = max - min,\n        interval = range / numBin,\n        bins = [];\n\n\n    for(var b = 0; b < numBin; b++) {\n        bins[b] = {binID: b, rangeBegin: min + range * (b/(numBin)), rangeEnd: min + range*(b+1)/(numBin), count: 0};\n        // if(embedData)\n            bins[b].data = [];\n        // attributes.forEach(function(attr){\n        //     bins[b][attr] = 0;\n        // })\n    }\n\n    // bins[numBin] = [];\n\n    for(var i = 0; i < l; i++) {\n        binID = Math.floor( (array[i] - min) / range * (numBin));\n        if(binID == numBin) binID--;\n        data[i].binID = binID;\n        // if(embedData)\n            bins[binID].data.push(data[i]);\n        // bins[binID].count++;\n        // attributes.forEach(function(attr){\n        //     bins[binID][attr] += data[i][attr];\n        // });\n    }\n\n    spec.$by = \"binID\";\n    delete spec[attrKey];\n\n    var result = query.group(data, spec);\n    result = query.indexBy(result, \"binID\");\n\n\n    // result.forEach(function(r){\n    //     r.rangeBegin = bins[r.binID].rangeBegin;\n    //     r.rangeEnd = bins[r.binID].rangeEnd;\n    // })\n\n    bins.forEach(function(bin){\n\n        if(result.hasOwnProperty(bin.binID)) {\n            attributes.forEach(function(attr){\n                bin[attr] = result[bin.binID][0][attr];\n            });\n            if(embedData) bin.data = result[bin.binID][0].data;\n        } else {\n            attributes.forEach(function(attr){\n                bin[attr] = 0;\n            });\n        }\n\n    })\n    // console.log(bins);\n    // return result;\n    return bins;\n}\n\nquery.partition = function(data, numPart) {\n    var len = data.length,\n        p = Math.ceil(len / numPart),\n        pid,\n        partitions = [];\n\n    for(var b = 0; b < numPart; b++) {\n        partitions[b] = {partition: b, data: [], count: 0};\n    }\n\n    for(var i = 0; i < len; i++) {\n        pid = Math.floor(i / p);\n        partitions[pid].data.push(data[i]);\n        partitions[pid].count++;\n    }\n\n    return partitions;\n}\n\nquery.partitionBy = function(data, spec) {\n    var len = data.length,\n        pid,\n        partitions = [],\n        key = Object.keys(spec)[0],\n        parts = spec[key];\n\n    parts.forEach(function(b, bi) {\n        partitions[bi] = {partition: bi, data: [], count: 0, name: b};\n    })\n\n    for(var i = 0; i < len; i++) {\n        pid = parts.indexOf(data[i][key]);\n        if(pid>-1){\n            partitions[pid].data.push(data[i]);\n            partitions[pid].count++;\n        }\n    }\n    return partitions;\n}\n\nquery.normalize = function(data, fields) {\n    var hash = {};\n\n    fields.forEach(function(f){\n        var array = data.map(function(d){ return d[f]; });\n        hash[f] = arrayOpts.normalize(array);\n    });\n\n    data.forEach(function(d, i){\n        fields.forEach(function(f){\n            d[f] = hash[f][i];\n        });\n    });\n\n    return data;\n}\n\nquery.toColumnArray = function(data) {\n    var columnArray = [];\n        attributes = Object.keys(data[0]).filter(function(k) { return k; });\n\n    attributes.forEach(function(attr){\n        columnArray.push(data.map(function(d){return d[attr];}));\n    });\n\n    columnArray.fields = attributes;\n\n    attributes.forEach(function(attr, ai){\n        columnArray[attr] = columnArray[ai];\n    });\n\n    return columnArray;\n}\n\nmodule.exports = query;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6-solo/src/query.js\n// module id = 68\n// module chunks = 0 1","module.exports = function join(dataLeft, dataRight) {\n    var len = dataLeft.length,\n        keyL = Object.keys(dataLeft[0]),\n        keyR = Object.keys(dataRight[0]);\n        \n    var keys = keyR.filter(function(kr){ return (keyL.indexOf(kr) === -1);});\n\n    keys.forEach(function(k){\n        for(var i = 0; i < len; i++) {\n            dataLeft[i][k] = dataRight[i][k];    \n        }\n    });\n\n    return dataLeft;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6-solo/src/join.js\n// module id = 69\n// module chunks = 0 1","var array = require(\"./arrays\");\n\nfunction stats(data, fields){\n\n    if(!Array.isArray(data))\n        throw new Error(\"Inproper input data format.\");\n\n    var result = {};\n\n    fields.forEach(function(f) {\n        var a = data.map(function(d){return d[f]; });\n        result[f] = {\n            min: array.min(a),\n            max: array.max(a),\n            avg: array.avg(a),\n            std: array.std(a)\n        };\n    });\n\n    return result;\n};\n\n\nstats.domains = function(data, fields) {\n    if(!Array.isArray(data))\n        throw new Error(\"Inproper input data format.\");\n\n    var result = {};\n\n    fields.forEach(function(f) {\n        var a = data.map(function(d){return d[f]; });\n        result[f] = [ array.min(a), array.max(a) ];\n    });\n\n    return result;\n}\n\nmodule.exports = stats;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6-solo/src/stats.js\n// module id = 70\n// module chunks = 0 1","module.exports = function embed(spec) {\n    var id = spec.$id || spec.$by,\n        attributes = Object.keys(spec);\n\n    if(!id) throw Error(\"No id specified for embed!\");\n\n    attributes.filter(function(attr){\n        return (attr != \"$by\" && attr != \"$id\")\n    })\n    .forEach(function(attr){\n        var embedKey = spec[attr][0][id],\n            i = 0,\n            n = data.length,\n            l = spec[attr].length;\n\n        var lookup = data.map(function(d){ d[attr] = []; return d[id];});\n\n        for(i = 0; i < l; i++) {\n            var index = lookup.indexOf(spec[attr][i][id]);\n            if(index !== -1) {\n                data[index][attr].push(spec[attr][i]);\n            }\n            // delete spec[attr][i][id];\n        }\n    });\n    return data;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6-solo/src/embed.js\n// module id = 71\n// module chunks = 0 1","module.exports = function toArray(data, arg){\n    var options = arg || {},\n        fields = options.fields || Object.keys(data[0]) || [],\n        format = options.format || 'row';\n\n    if(format == 'row') {\n        return data.map(function(d){\n            var row = new Array(fields.length);\n            fields.forEach(function(f, i){\n                row[i] = d[f];\n            });\n            return row;\n        });\n    } else {\n        return fields.map(function(f){\n            return data.map(function(d){ return d[f]; })\n        })\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/p6-solo/src/toarray.js\n// module id = 72\n// module chunks = 0 1","export default [\n    {\n        tag: 'AMG on Dragonfly Adaptive',\n        path: 'dfly-2550-adaptive-amg-1728',\n        topology: 'drgonfly',\n        groups: 51,\n        routers: 510,\n        terminals: 2550\n    },\n    {\n        tag: 'AMR Boxlib on Dragonfly Adaptive',\n        path: 'dfly-2550-adaptive-amr',\n        topology: 'drgonfly',\n        groups: 51,\n        routers: 510,\n        terminals: 2550\n    },\n    {\n        tag: 'Dragonfly Adaptive MiniFE',\n        path: 'dfly-2550-adaptive-minife',\n        topology: 'drgonfly',\n        groups: 51,\n        routers: 510,\n        terminals: 2550\n    },\n    {\n        tag: 'Random Group Placement Multi-Apps on Dfly',\n        path: 'dfly-5k-mapp-group',\n        topology: 'drgonfly',\n        groups: 73,\n        routers: 876,\n        terminals: 5256,\n        jobAllocation: './workloads.conf',\n        jobs: ['AMG', 'AMR Boxlib', 'MiniFE']\n    },\n    {\n        tag: 'Random Router Placement Multi-Apps on Dfly',\n        path: 'dfly-5k-mapp-router',\n        topology: 'drgonfly',\n        groups: 73,\n        routers: 876,\n        terminals: 5256,\n        jobAllocation: './workloads.conf',\n        jobs: ['AMG', 'AMR Boxlib', 'MiniFE']\n    },\n    {\n        tag: 'Hybird Placement Multi-Apps on Dfly',\n        path: 'dfly-5k-mapp-hybrid',\n        topology: 'drgonfly',\n        groups: 73,\n        routers: 876,\n        terminals: 5256,\n        jobAllocation: './workloads.conf',\n        jobs: ['AMG', 'AMR Boxlib', 'MiniFE']\n    },\n]\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./data/datasets.js\n// module id = 73\n// module chunks = 0 1","import p6 from 'p6';\r\nimport {Layout, Panel} from 'dashi';\r\nimport transform from './transform';\r\n\r\nvar views = {};\r\nvar numJobs = 1;\r\n\r\nexport default function statsApp(arg) {\r\n    var stats = {},\r\n        data = arg.data || null,\r\n        container = arg.container || document.body;\r\n\r\n    var board = new Layout({\r\n        container: container,\r\n        margin: 10,\r\n        cols: [\r\n            { id: 'global-links', width: 0.25 },\r\n            { id: 'local-links', width: 0.25 },\r\n            { id: 'terminal-metrics',  width: 0.5},\r\n        ]\r\n    });\r\n\r\n\r\n    views.terminals = new Panel({\r\n        container: board.cell('terminal-metrics'),\r\n        id: \"panel-terminals\",\r\n        title: \"Terminals\",\r\n        padding: 20,\r\n        header: {height: 0.05, style: {backgroundColor: '#F4F4F4'}}\r\n    });\r\n    views.localLinks = new Panel({\r\n        container: board.cell('local-links'),\r\n        id: \"panel-local-links\",\r\n        title: \"Local Links\",\r\n        padding: 20,\r\n        header: {height: 0.05, style: {backgroundColor: '#F4F4F4'}}\r\n    });\r\n    views.globalLinks = new Panel({\r\n        container: board.cell('global-links'),\r\n        id: \"panel-global-links\",\r\n        title: \"Global Links\",\r\n        padding: 20,\r\n        header: {height: 0.05, style: {backgroundColor: '#F4F4F4'}}\r\n    });\r\n    stats.update = function(data) {\r\n        Object.keys(views).forEach(function(vk){\r\n            views[vk].clear();\r\n        })\r\n        var result = transform(data);\r\n        numJobs = result.numJobs;\r\n\r\n        visualize(result);\r\n    }\r\n\r\n    return stats;\r\n}\r\n\r\nfunction dualView(w, h) {\r\n    return [\r\n        {\r\n            width: w,\r\n            height: h / 2,\r\n            offset: [0, 0]\r\n        },\r\n        {\r\n            width: w,\r\n            height: h / 2,\r\n            offset: [0, h/2]\r\n        },\r\n    ];\r\n}\r\n\r\nfunction triView(w, h) {\r\n    return [\r\n        {\r\n            width: w,\r\n            height: h / 2,\r\n            offset: [0, 0]\r\n        },\r\n        {\r\n            width: w / 2,\r\n            height: h / 2 ,\r\n            offset: [0, h/2]\r\n        },\r\n        {\r\n            width: w / 2,\r\n            height: h / 2,\r\n            offset: [w/2, h/2]\r\n        },\r\n    ]\r\n};\r\n\r\n\r\n\r\nfunction visualize(data) {\r\n    console.log(data)\r\n    var vis = {};\r\n    vis.localLinks = p6({\r\n        container: views.localLinks.body,\r\n        padding: {left: 70, right: 20, top: 10, bottom: 70},\r\n        viewport: [views.localLinks.innerWidth, views.localLinks.innerHeight],\r\n        // views: dualView(views.localLinks.innerWidth, views.localLinks.innerHeight)\r\n    })\r\n    .data(data.localLinks)\r\n    .view(dualView(views.localLinks.innerWidth, views.localLinks.innerHeight))\r\n    .visualize({\r\n        id: \"plot-local-links\",\r\n        mark: \"point\",\r\n        x: \"traffic\",\r\n        y: \"sat_time\",\r\n        color: 'steelblue',\r\n        alpha: 0.5\r\n    })\r\n\r\n    vis.localLinks\r\n    .aggregate({\r\n        $bin: 'traffic',\r\n        $collect: {\r\n            total_sat_time : {$sum: \"sat_time\"}\r\n        }\r\n    })\r\n    .visualize({\r\n        id: 'plot-stats',\r\n        mark: \"bar\",\r\n        x: \"traffic\",\r\n        y: \"total_sat_time\",\r\n        color: 'steelblue'\r\n    });\r\n\r\n    p6({\r\n        // data: data.globalLinks,\r\n        container: views.globalLinks.body,\r\n        padding: {left: 70, right: 20, top: 10, bottom: 70},\r\n        viewport: [views.globalLinks.innerWidth, views.globalLinks.innerHeight],\r\n        // views: dualView(views.globalLinks.innerWidth, views.globalLinks.innerHeight)\r\n    })\r\n    .data(data.globalLinks)\r\n    .view(dualView(views.globalLinks.innerWidth, views.globalLinks.innerHeight))\r\n    .visualize({\r\n        id: \"plot-global-links\",\r\n        mark: \"point\",\r\n        x: \"traffic\",\r\n        y: \"sat_time\",\r\n        color: 'purple',\r\n        alpha: 0.5\r\n    })\r\n    .aggregate({\r\n        $bin: 'traffic',\r\n        $collect: {\r\n            total_sat_time : {$sum: \"sat_time\"},\r\n        }\r\n    })\r\n    .visualize({\r\n        id: 'plot-stats',\r\n        mark: \"bar\",\r\n        x: \"traffic\",\r\n        y: \"total_sat_time\",\r\n        color: 'purple'\r\n    });\r\n\r\n    var terminalColorEncoding = (numJobs == 1) ? 'teal' : 'job_id';\r\n\r\n    vis.terminals = p6({\r\n        data: data.terminals,\r\n        container: views.terminals.body,\r\n        padding: {left: 70, right: 50, top: 30, bottom: 70},\r\n        viewport: [\r\n            views.terminals.innerWidth,\r\n            views.terminals.innerHeight\r\n        ],\r\n        views: triView(views.terminals.innerWidth, views.terminals.innerHeight)\r\n    })\r\n    // .filter({\r\n    //     terminal_id: [0, 1000]\r\n    // })\r\n    .visualize({\r\n        id: \"terminals\",\r\n        mark: \"line\",\r\n        y: [ \"terminal_id\", \"avg_packet_latency\", \"avg_hops\", \"data_size\", \"sat_time\"],\r\n        color: terminalColorEncoding,\r\n        alpha: 0.25\r\n    })\r\n    // .visualize({\r\n    //     id: \"plot-global-links\",\r\n    //     mark: \"point\",\r\n    //     x: \"data_size\",\r\n    //     y: \"sat_time\",\r\n    //     color: 'purple',\r\n    //     alpha: 0.5\r\n    // })\r\n    // .derive({\r\n    //     gid: 'floor(group_id / 5.0)'\r\n    // })\r\n    // .filter({\r\n    //     avg_hops: [2, 3]\r\n    // })\r\n    // .register('branch')\r\n    .aggregate({\r\n        // $group: 'terminal_id',\r\n        $bin: 'avg_packet_latency',\r\n        $collect: {\r\n            avg_hops: {$avg: \"avg_hops\"}\r\n        }\r\n    })\r\n    .visualize({\r\n        id: 'avg_packet_latency',\r\n        mark: \"bar\",\r\n        x: \"avg_packet_latency\",\r\n        y: \"avg_hops\",\r\n        color: 'teal',\r\n        // interact: function(d) {\r\n        //     console.log(d);\r\n        // }\r\n    })\r\n\r\n    vis.terminals\r\n    .head()\r\n    .aggregate({\r\n        $bin: 'data_size',\r\n        $collect: {\r\n            Total_sat_time : {$sum: \"sat_time\"}\r\n        }\r\n    })\r\n    .visualize({\r\n        id: 'sattime',\r\n        mark: \"bar\",\r\n        x: \"data_size\",\r\n        y: \"Total_sat_time\",\r\n        color: 'teal'\r\n    });\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/stats/app.js\n// module id = 74\n// module chunks = 0 1","import loadData from \"../loadData\";\r\nimport p6 from \"p6\";\r\nimport {toArray} from \"p6-solo\";\r\n\r\nlet cstore = p6.cstore;\r\n\r\nconst TERMINAL_METRICS = [\"lp_id\", \"terminal_id\", \"data_size\", \"avg_packet_latency\", \"packets_finished\", \"avg_hops\", \"sat_time\", \"job_id\", \"router_id\", \"router_rank\", \"router_port\", \"group_id\"];\r\nconst LINK_METRICS = [\"group_id\", \"router_id\", \"router_port\", \"sat_time\", \"traffic\"];\r\n\r\nexport default function transform(input) {\r\n    var result = {},\r\n        db = {};\r\n    console.log(Object.keys(input.terminals[0]))\r\n    db = cstore({\r\n        size: input.terminals.length,\r\n        keys: Object.keys(input.terminals[0]),\r\n        types: [\"int\", \"int\", \"int\", \"float\", \"float\", \"float\", \"float\", \"int\", \"int\", \"int\", \"int\", \"int\"]\r\n    })\r\n    db.addRows(toArray(input.terminals));\r\n    result.terminals = db.data();\r\n    result.terminals.stats = db.stats();\r\n\r\n    db = cstore({\r\n        size: input.localLinks.length,\r\n        keys: Object.keys(input.localLinks[0]),\r\n        types: [\"int\", \"int\", \"int\", \"int\", \"float\", \"int\", \"int\"],\r\n    })\r\n    db.addRows(toArray(input.localLinks));\r\n    result.localLinks = db.data();\r\n    result.localLinks.stats = db.stats();\r\n\r\n    db = cstore({\r\n        size: input.globalLinks.length,\r\n        keys: Object.keys(input.globalLinks[0]),\r\n        types: [\"int\", \"int\", \"int\", \"int\", \"float\", \"int\", \"int\"],\r\n    })\r\n\r\n    db.addRows(toArray(input.globalLinks));\r\n    result.globalLinks = db.data();\r\n    result.globalLinks.stats = db.stats();\r\n    result.numJobs = input.numJobs;\r\n    return result;\r\n}\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/stats/transform.js\n// module id = 75\n// module chunks = 0 1"],"sourceRoot":""}